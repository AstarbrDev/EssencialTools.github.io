id: EssencialTools_Core
language: CSharp
name:
  Default: EssencialTools_Core
qualifiedName:
  Default: EssencialTools_Core
type: Assembly
modifiers: {}
items:
- id: AstarLibrary.Core
  commentId: N:AstarLibrary.Core
  language: CSharp
  name:
    CSharp: AstarLibrary.Core
    VB: AstarLibrary.Core
  nameWithType:
    CSharp: AstarLibrary.Core
    VB: AstarLibrary.Core
  qualifiedName:
    CSharp: AstarLibrary.Core
    VB: AstarLibrary.Core
  type: Namespace
  assemblies:
  - EssencialTools_Core
  modifiers: {}
  items:
  - id: AstarLibrary.Core.ConditionalFieldAttribute
    commentId: T:AstarLibrary.Core.ConditionalFieldAttribute
    language: CSharp
    name:
      CSharp: ConditionalFieldAttribute
      VB: ConditionalFieldAttribute
    nameWithType:
      CSharp: ConditionalFieldAttribute
      VB: ConditionalFieldAttribute
    qualifiedName:
      CSharp: AstarLibrary.Core.ConditionalFieldAttribute
      VB: AstarLibrary.Core.ConditionalFieldAttribute
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: ConditionalFieldAttribute
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\ConditionalFieldAttribute.cs
      startLine: 15
    summary: "\nAttribute to help edition\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.Field)]

          public sealed class ConditionalFieldAttribute : PropertyAttribute, _Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.Field)>

          Public NotInheritable Class ConditionalFieldAttribute

              Inherits PropertyAttribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    - UnityEngine.PropertyAttribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - UnityEngine.PropertyAttribute.order
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 256
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: AstarLibrary.Core.ConditionalFieldAttribute.#ctor(System.String,System.Object)
      commentId: M:AstarLibrary.Core.ConditionalFieldAttribute.#ctor(System.String,System.Object)
      language: CSharp
      name:
        CSharp: ConditionalFieldAttribute(String, Object)
        VB: ConditionalFieldAttribute(String, Object)
      nameWithType:
        CSharp: ConditionalFieldAttribute.ConditionalFieldAttribute(String, Object)
        VB: ConditionalFieldAttribute.ConditionalFieldAttribute(String, Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.ConditionalFieldAttribute.ConditionalFieldAttribute(System.String, System.Object)
        VB: AstarLibrary.Core.ConditionalFieldAttribute.ConditionalFieldAttribute(System.String, System.Object)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\ConditionalFieldAttribute.cs
        startLine: 24
      syntax:
        content:
          CSharp: public ConditionalFieldAttribute(string propertyToCheck, object compareValue = null)
          VB: Public Sub New(propertyToCheck As String, compareValue As Object = Nothing)
        parameters:
        - id: propertyToCheck
          type: System.String
        - id: compareValue
          type: System.Object
      overload: AstarLibrary.Core.ConditionalFieldAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible(UnityEngine.MonoBehaviour,System.String)
      commentId: M:AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible(UnityEngine.MonoBehaviour,System.String)
      language: CSharp
      name:
        CSharp: CheckBehaviourPropertyVisible(MonoBehaviour, String)
        VB: CheckBehaviourPropertyVisible(MonoBehaviour, String)
      nameWithType:
        CSharp: ConditionalFieldAttribute.CheckBehaviourPropertyVisible(MonoBehaviour, String)
        VB: ConditionalFieldAttribute.CheckBehaviourPropertyVisible(MonoBehaviour, String)
      qualifiedName:
        CSharp: AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible(UnityEngine.MonoBehaviour, System.String)
        VB: AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible(UnityEngine.MonoBehaviour, System.String)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: CheckBehaviourPropertyVisible
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\ConditionalFieldAttribute.cs
        startLine: 32
      syntax:
        content:
          CSharp: public bool CheckBehaviourPropertyVisible(MonoBehaviour behaviour, string propertyName)
          VB: Public Function CheckBehaviourPropertyVisible(behaviour As MonoBehaviour, propertyName As String) As Boolean
        parameters:
        - id: behaviour
          type: UnityEngine.MonoBehaviour
        - id: propertyName
          type: System.String
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible(UnityEditor.SerializedProperty)
      commentId: M:AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible(UnityEditor.SerializedProperty)
      language: CSharp
      name:
        CSharp: CheckPropertyVisible(SerializedProperty)
        VB: CheckPropertyVisible(SerializedProperty)
      nameWithType:
        CSharp: ConditionalFieldAttribute.CheckPropertyVisible(SerializedProperty)
        VB: ConditionalFieldAttribute.CheckPropertyVisible(SerializedProperty)
      qualifiedName:
        CSharp: AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible(UnityEditor.SerializedProperty)
        VB: AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible(UnityEditor.SerializedProperty)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: CheckPropertyVisible
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\ConditionalFieldAttribute.cs
        startLine: 41
      syntax:
        content:
          CSharp: public bool CheckPropertyVisible(SerializedProperty property)
          VB: Public Function CheckPropertyVisible(property As SerializedProperty) As Boolean
        parameters:
        - id: property
          type: UnityEditor.SerializedProperty
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.EnumToToolbarAttribute
    commentId: T:AstarLibrary.Core.EnumToToolbarAttribute
    language: CSharp
    name:
      CSharp: EnumToToolbarAttribute
      VB: EnumToToolbarAttribute
    nameWithType:
      CSharp: EnumToToolbarAttribute
      VB: EnumToToolbarAttribute
    qualifiedName:
      CSharp: AstarLibrary.Core.EnumToToolbarAttribute
      VB: AstarLibrary.Core.EnumToToolbarAttribute
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: EnumToToolbarAttribute
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\EnumToToolbarAttribute.cs
      startLine: 10
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.All, Inherited = true, AllowMultiple = true)]

          public sealed class EnumToToolbarAttribute : PropertyAttribute, _Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.All, Inherited:=True, AllowMultiple:=True)>

          Public NotInheritable Class EnumToToolbarAttribute

              Inherits PropertyAttribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    - UnityEngine.PropertyAttribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - UnityEngine.PropertyAttribute.order
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 32767
      namedArguments:
      - name: Inherited
        type: System.Boolean
        value: true
      - name: AllowMultiple
        type: System.Boolean
        value: true
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items: []
  - id: AstarLibrary.Core.HideScriptFieldAttribute
    commentId: T:AstarLibrary.Core.HideScriptFieldAttribute
    language: CSharp
    name:
      CSharp: HideScriptFieldAttribute
      VB: HideScriptFieldAttribute
    nameWithType:
      CSharp: HideScriptFieldAttribute
      VB: HideScriptFieldAttribute
    qualifiedName:
      CSharp: AstarLibrary.Core.HideScriptFieldAttribute
      VB: AstarLibrary.Core.HideScriptFieldAttribute
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: HideScriptFieldAttribute
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\HideScriptFieldAttribute.cs
      startLine: 11
    summary: "\nHides script monobehaviour\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)]

          public sealed class HideScriptFieldAttribute : Attribute, _Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.Class, Inherited:=False, AllowMultiple:=False)>

          Public NotInheritable Class HideScriptFieldAttribute

              Inherits Attribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 4
      namedArguments:
      - name: Inherited
        type: System.Boolean
        value: false
      - name: AllowMultiple
        type: System.Boolean
        value: false
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items: []
  - id: AstarLibrary.Core.LabeledArrayAttribute
    commentId: T:AstarLibrary.Core.LabeledArrayAttribute
    language: CSharp
    name:
      CSharp: LabeledArrayAttribute
      VB: LabeledArrayAttribute
    nameWithType:
      CSharp: LabeledArrayAttribute
      VB: LabeledArrayAttribute
    qualifiedName:
      CSharp: AstarLibrary.Core.LabeledArrayAttribute
      VB: AstarLibrary.Core.LabeledArrayAttribute
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: LabeledArrayAttribute
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\LabeledArrayAttribute.cs
      startLine: 12
    summary: "\nLabel array Attribute\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.All, Inherited = false, AllowMultiple = true)]

          public sealed class LabeledArrayAttribute : PropertyAttribute, _Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.All, Inherited:=False, AllowMultiple:=True)>

          Public NotInheritable Class LabeledArrayAttribute

              Inherits PropertyAttribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    - UnityEngine.PropertyAttribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - UnityEngine.PropertyAttribute.order
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 32767
      namedArguments:
      - name: Inherited
        type: System.Boolean
        value: false
      - name: AllowMultiple
        type: System.Boolean
        value: true
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: AstarLibrary.Core.LabeledArrayAttribute.names
      commentId: F:AstarLibrary.Core.LabeledArrayAttribute.names
      language: CSharp
      name:
        CSharp: names
        VB: names
      nameWithType:
        CSharp: LabeledArrayAttribute.names
        VB: LabeledArrayAttribute.names
      qualifiedName:
        CSharp: AstarLibrary.Core.LabeledArrayAttribute.names
        VB: AstarLibrary.Core.LabeledArrayAttribute.names
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: names
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\LabeledArrayAttribute.cs
        startLine: 15
      syntax:
        content:
          CSharp: public readonly string[] names
          VB: Public ReadOnly names As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: AstarLibrary.Core.LabeledArrayAttribute.#ctor(System.String[])
      commentId: M:AstarLibrary.Core.LabeledArrayAttribute.#ctor(System.String[])
      language: CSharp
      name:
        CSharp: LabeledArrayAttribute(String[])
        VB: LabeledArrayAttribute(String())
      nameWithType:
        CSharp: LabeledArrayAttribute.LabeledArrayAttribute(String[])
        VB: LabeledArrayAttribute.LabeledArrayAttribute(String())
      qualifiedName:
        CSharp: AstarLibrary.Core.LabeledArrayAttribute.LabeledArrayAttribute(System.String[])
        VB: AstarLibrary.Core.LabeledArrayAttribute.LabeledArrayAttribute(System.String())
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\LabeledArrayAttribute.cs
        startLine: 16
      syntax:
        content:
          CSharp: public LabeledArrayAttribute(string[] names)
          VB: Public Sub New(names As String())
        parameters:
        - id: names
          type: System.String[]
      overload: AstarLibrary.Core.LabeledArrayAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.LabeledArrayAttribute.#ctor(System.Type)
      commentId: M:AstarLibrary.Core.LabeledArrayAttribute.#ctor(System.Type)
      language: CSharp
      name:
        CSharp: LabeledArrayAttribute(Type)
        VB: LabeledArrayAttribute(Type)
      nameWithType:
        CSharp: LabeledArrayAttribute.LabeledArrayAttribute(Type)
        VB: LabeledArrayAttribute.LabeledArrayAttribute(Type)
      qualifiedName:
        CSharp: AstarLibrary.Core.LabeledArrayAttribute.LabeledArrayAttribute(System.Type)
        VB: AstarLibrary.Core.LabeledArrayAttribute.LabeledArrayAttribute(System.Type)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\LabeledArrayAttribute.cs
        startLine: 17
      syntax:
        content:
          CSharp: public LabeledArrayAttribute(Type enumType)
          VB: Public Sub New(enumType As Type)
        parameters:
        - id: enumType
          type: System.Type
      overload: AstarLibrary.Core.LabeledArrayAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.LabeledAttribute
    commentId: T:AstarLibrary.Core.LabeledAttribute
    language: CSharp
    name:
      CSharp: LabeledAttribute
      VB: LabeledAttribute
    nameWithType:
      CSharp: LabeledAttribute
      VB: LabeledAttribute
    qualifiedName:
      CSharp: AstarLibrary.Core.LabeledAttribute
      VB: AstarLibrary.Core.LabeledAttribute
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: LabeledAttribute
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\LabeledAttribute.cs
      startLine: 10
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.Field, AllowMultiple = true, Inherited = true)]

          public sealed class LabeledAttribute : PropertyAttribute, _Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.Field, AllowMultiple:=True, Inherited:=True)>

          Public NotInheritable Class LabeledAttribute

              Inherits PropertyAttribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    - UnityEngine.PropertyAttribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - UnityEngine.PropertyAttribute.order
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 256
      namedArguments:
      - name: AllowMultiple
        type: System.Boolean
        value: true
      - name: Inherited
        type: System.Boolean
        value: true
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: AstarLibrary.Core.LabeledAttribute.Name
      commentId: P:AstarLibrary.Core.LabeledAttribute.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: LabeledAttribute.Name
        VB: LabeledAttribute.Name
      qualifiedName:
        CSharp: AstarLibrary.Core.LabeledAttribute.Name
        VB: AstarLibrary.Core.LabeledAttribute.Name
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Name
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\LabeledAttribute.cs
        startLine: 14
      syntax:
        content:
          CSharp: public string Name { get; }
          VB: Public ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: AstarLibrary.Core.LabeledAttribute.Name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AstarLibrary.Core.LabeledAttribute.#ctor(System.String)
      commentId: M:AstarLibrary.Core.LabeledAttribute.#ctor(System.String)
      language: CSharp
      name:
        CSharp: LabeledAttribute(String)
        VB: LabeledAttribute(String)
      nameWithType:
        CSharp: LabeledAttribute.LabeledAttribute(String)
        VB: LabeledAttribute.LabeledAttribute(String)
      qualifiedName:
        CSharp: AstarLibrary.Core.LabeledAttribute.LabeledAttribute(System.String)
        VB: AstarLibrary.Core.LabeledAttribute.LabeledAttribute(System.String)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\LabeledAttribute.cs
        startLine: 16
      syntax:
        content:
          CSharp: public LabeledAttribute(string name)
          VB: Public Sub New(name As String)
        parameters:
        - id: name
          type: System.String
      overload: AstarLibrary.Core.LabeledAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.OnValueChangedAttribute
    commentId: T:AstarLibrary.Core.OnValueChangedAttribute
    language: CSharp
    name:
      CSharp: OnValueChangedAttribute
      VB: OnValueChangedAttribute
    nameWithType:
      CSharp: OnValueChangedAttribute
      VB: OnValueChangedAttribute
    qualifiedName:
      CSharp: AstarLibrary.Core.OnValueChangedAttribute
      VB: AstarLibrary.Core.OnValueChangedAttribute
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: OnValueChangedAttribute
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\OnValueChangedAttribute.cs
      startLine: 10
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.Field, AllowMultiple = true, Inherited = true)]

          public sealed class OnValueChangedAttribute : PropertyAttribute, _Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.Field, AllowMultiple:=True, Inherited:=True)>

          Public NotInheritable Class OnValueChangedAttribute

              Inherits PropertyAttribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    - UnityEngine.PropertyAttribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - UnityEngine.PropertyAttribute.order
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 256
      namedArguments:
      - name: AllowMultiple
        type: System.Boolean
        value: true
      - name: Inherited
        type: System.Boolean
        value: true
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: AstarLibrary.Core.OnValueChangedAttribute.CallbackName
      commentId: P:AstarLibrary.Core.OnValueChangedAttribute.CallbackName
      language: CSharp
      name:
        CSharp: CallbackName
        VB: CallbackName
      nameWithType:
        CSharp: OnValueChangedAttribute.CallbackName
        VB: OnValueChangedAttribute.CallbackName
      qualifiedName:
        CSharp: AstarLibrary.Core.OnValueChangedAttribute.CallbackName
        VB: AstarLibrary.Core.OnValueChangedAttribute.CallbackName
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: CallbackName
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\OnValueChangedAttribute.cs
        startLine: 13
      syntax:
        content:
          CSharp: public string CallbackName { get; }
          VB: Public ReadOnly Property CallbackName As String
        parameters: []
        return:
          type: System.String
      overload: AstarLibrary.Core.OnValueChangedAttribute.CallbackName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AstarLibrary.Core.OnValueChangedAttribute.#ctor(System.String)
      commentId: M:AstarLibrary.Core.OnValueChangedAttribute.#ctor(System.String)
      language: CSharp
      name:
        CSharp: OnValueChangedAttribute(String)
        VB: OnValueChangedAttribute(String)
      nameWithType:
        CSharp: OnValueChangedAttribute.OnValueChangedAttribute(String)
        VB: OnValueChangedAttribute.OnValueChangedAttribute(String)
      qualifiedName:
        CSharp: AstarLibrary.Core.OnValueChangedAttribute.OnValueChangedAttribute(System.String)
        VB: AstarLibrary.Core.OnValueChangedAttribute.OnValueChangedAttribute(System.String)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\OnValueChangedAttribute.cs
        startLine: 15
      syntax:
        content:
          CSharp: public OnValueChangedAttribute(string callbackName)
          VB: Public Sub New(callbackName As String)
        parameters:
        - id: callbackName
          type: System.String
      overload: AstarLibrary.Core.OnValueChangedAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.ReadOnlyAttribute
    commentId: T:AstarLibrary.Core.ReadOnlyAttribute
    language: CSharp
    name:
      CSharp: ReadOnlyAttribute
      VB: ReadOnlyAttribute
    nameWithType:
      CSharp: ReadOnlyAttribute
      VB: ReadOnlyAttribute
    qualifiedName:
      CSharp: AstarLibrary.Core.ReadOnlyAttribute
      VB: AstarLibrary.Core.ReadOnlyAttribute
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: ReadOnlyAttribute
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\ReadOnlyAttribute.cs
      startLine: 10
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.Field, Inherited = true, AllowMultiple = true)]

          public sealed class ReadOnlyAttribute : PropertyAttribute, _Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.Field, Inherited:=True, AllowMultiple:=True)>

          Public NotInheritable Class ReadOnlyAttribute

              Inherits PropertyAttribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    - UnityEngine.PropertyAttribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - UnityEngine.PropertyAttribute.order
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 256
      namedArguments:
      - name: Inherited
        type: System.Boolean
        value: true
      - name: AllowMultiple
        type: System.Boolean
        value: true
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items: []
  - id: AstarLibrary.Core.SearchObjectAttribute
    commentId: T:AstarLibrary.Core.SearchObjectAttribute
    language: CSharp
    name:
      CSharp: SearchObjectAttribute
      VB: SearchObjectAttribute
    nameWithType:
      CSharp: SearchObjectAttribute
      VB: SearchObjectAttribute
    qualifiedName:
      CSharp: AstarLibrary.Core.SearchObjectAttribute
      VB: AstarLibrary.Core.SearchObjectAttribute
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: SearchObjectAttribute
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\SearchObjectAttribute.cs
      startLine: 9
    syntax:
      content:
        CSharp: 'public sealed class SearchObjectAttribute : PropertyAttribute, _Attribute'
        VB: >-
          Public NotInheritable Class SearchObjectAttribute

              Inherits PropertyAttribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    - UnityEngine.PropertyAttribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - UnityEngine.PropertyAttribute.order
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: AstarLibrary.Core.SearchObjectAttribute.searchObjectType
      commentId: F:AstarLibrary.Core.SearchObjectAttribute.searchObjectType
      language: CSharp
      name:
        CSharp: searchObjectType
        VB: searchObjectType
      nameWithType:
        CSharp: SearchObjectAttribute.searchObjectType
        VB: SearchObjectAttribute.searchObjectType
      qualifiedName:
        CSharp: AstarLibrary.Core.SearchObjectAttribute.searchObjectType
        VB: AstarLibrary.Core.SearchObjectAttribute.searchObjectType
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: searchObjectType
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\SearchObjectAttribute.cs
        startLine: 13
      syntax:
        content:
          CSharp: public Type searchObjectType
          VB: Public searchObjectType As Type
        return:
          type: System.Type
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SearchObjectAttribute.#ctor(System.Type)
      commentId: M:AstarLibrary.Core.SearchObjectAttribute.#ctor(System.Type)
      language: CSharp
      name:
        CSharp: SearchObjectAttribute(Type)
        VB: SearchObjectAttribute(Type)
      nameWithType:
        CSharp: SearchObjectAttribute.SearchObjectAttribute(Type)
        VB: SearchObjectAttribute.SearchObjectAttribute(Type)
      qualifiedName:
        CSharp: AstarLibrary.Core.SearchObjectAttribute.SearchObjectAttribute(System.Type)
        VB: AstarLibrary.Core.SearchObjectAttribute.SearchObjectAttribute(System.Type)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\SearchObjectAttribute.cs
        startLine: 18
      syntax:
        content:
          CSharp: public SearchObjectAttribute(Type searchObjectType)
          VB: Public Sub New(searchObjectType As Type)
        parameters:
        - id: searchObjectType
          type: System.Type
      overload: AstarLibrary.Core.SearchObjectAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.SplitAttribute
    commentId: T:AstarLibrary.Core.SplitAttribute
    language: CSharp
    name:
      CSharp: SplitAttribute
      VB: SplitAttribute
    nameWithType:
      CSharp: SplitAttribute
      VB: SplitAttribute
    qualifiedName:
      CSharp: AstarLibrary.Core.SplitAttribute
      VB: AstarLibrary.Core.SplitAttribute
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: SplitAttribute
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\SplitAttribute.cs
      startLine: 10
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.Field, Inherited = true, AllowMultiple = true)]

          public sealed class SplitAttribute : PropertyAttribute, _Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.Field, Inherited:=True, AllowMultiple:=True)>

          Public NotInheritable Class SplitAttribute

              Inherits PropertyAttribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    - UnityEngine.PropertyAttribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - UnityEngine.PropertyAttribute.order
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 256
      namedArguments:
      - name: Inherited
        type: System.Boolean
        value: true
      - name: AllowMultiple
        type: System.Boolean
        value: true
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: AstarLibrary.Core.SplitAttribute.spaceBefore
      commentId: F:AstarLibrary.Core.SplitAttribute.spaceBefore
      language: CSharp
      name:
        CSharp: spaceBefore
        VB: spaceBefore
      nameWithType:
        CSharp: SplitAttribute.spaceBefore
        VB: SplitAttribute.spaceBefore
      qualifiedName:
        CSharp: AstarLibrary.Core.SplitAttribute.spaceBefore
        VB: AstarLibrary.Core.SplitAttribute.spaceBefore
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: spaceBefore
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\SplitAttribute.cs
        startLine: 15
      syntax:
        content:
          CSharp: public int spaceBefore
          VB: Public spaceBefore As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SplitAttribute.spaceAfter
      commentId: F:AstarLibrary.Core.SplitAttribute.spaceAfter
      language: CSharp
      name:
        CSharp: spaceAfter
        VB: spaceAfter
      nameWithType:
        CSharp: SplitAttribute.spaceAfter
        VB: SplitAttribute.spaceAfter
      qualifiedName:
        CSharp: AstarLibrary.Core.SplitAttribute.spaceAfter
        VB: AstarLibrary.Core.SplitAttribute.spaceAfter
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: spaceAfter
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\SplitAttribute.cs
        startLine: 16
      syntax:
        content:
          CSharp: public int spaceAfter
          VB: Public spaceAfter As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SplitAttribute.thickness
      commentId: F:AstarLibrary.Core.SplitAttribute.thickness
      language: CSharp
      name:
        CSharp: thickness
        VB: thickness
      nameWithType:
        CSharp: SplitAttribute.thickness
        VB: SplitAttribute.thickness
      qualifiedName:
        CSharp: AstarLibrary.Core.SplitAttribute.thickness
        VB: AstarLibrary.Core.SplitAttribute.thickness
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: thickness
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\SplitAttribute.cs
        startLine: 17
      syntax:
        content:
          CSharp: public float thickness
          VB: Public thickness As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SplitAttribute.color
      commentId: F:AstarLibrary.Core.SplitAttribute.color
      language: CSharp
      name:
        CSharp: color
        VB: color
      nameWithType:
        CSharp: SplitAttribute.color
        VB: SplitAttribute.color
      qualifiedName:
        CSharp: AstarLibrary.Core.SplitAttribute.color
        VB: AstarLibrary.Core.SplitAttribute.color
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: color
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\SplitAttribute.cs
        startLine: 18
      syntax:
        content:
          CSharp: public Color color
          VB: Public color As Color
        return:
          type: UnityEngine.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SplitAttribute.#ctor(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)
      commentId: M:AstarLibrary.Core.SplitAttribute.#ctor(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SplitAttribute(Int32, Int32, Single, Single, Single, Single, Single)
        VB: SplitAttribute(Int32, Int32, Single, Single, Single, Single, Single)
      nameWithType:
        CSharp: SplitAttribute.SplitAttribute(Int32, Int32, Single, Single, Single, Single, Single)
        VB: SplitAttribute.SplitAttribute(Int32, Int32, Single, Single, Single, Single, Single)
      qualifiedName:
        CSharp: AstarLibrary.Core.SplitAttribute.SplitAttribute(System.Int32, System.Int32, System.Single, System.Single, System.Single, System.Single, System.Single)
        VB: AstarLibrary.Core.SplitAttribute.SplitAttribute(System.Int32, System.Int32, System.Single, System.Single, System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Attributes\SplitAttribute.cs
        startLine: 23
      syntax:
        content:
          CSharp: public SplitAttribute(int spaceBefore = 10, int spaceAfter = 10, float thickness = 1F, float r = 0.5F, float g = 0.5F, float b = 0.5F, float a = 0.2F)
          VB: Public Sub New(spaceBefore As Integer = 10, spaceAfter As Integer = 10, thickness As Single = 1F, r As Single = 0.5F, g As Single = 0.5F, b As Single = 0.5F, a As Single = 0.2F)
        parameters:
        - id: spaceBefore
          type: System.Int32
        - id: spaceAfter
          type: System.Int32
        - id: thickness
          type: System.Single
        - id: r
          type: System.Single
        - id: g
          type: System.Single
        - id: b
          type: System.Single
        - id: a
          type: System.Single
      overload: AstarLibrary.Core.SplitAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.Cog`1
    commentId: T:AstarLibrary.Core.Cog`1
    language: CSharp
    name:
      CSharp: Cog<T>
      VB: Cog(Of T)
    nameWithType:
      CSharp: Cog<T>
      VB: Cog(Of T)
    qualifiedName:
      CSharp: AstarLibrary.Core.Cog<T>
      VB: AstarLibrary.Core.Cog(Of T)
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Cog
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Cog.cs
      startLine: 12
    summary: "\nUnique Systems\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Cog<T> : MonoBehaviour, IRecordHandler where T : Component'
        VB: >-
          Public Class Cog(Of T As Component)

              Inherits MonoBehaviour

              Implements IRecordHandler
      typeParameters:
      - id: T
        description: Unique System
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    implements:
    - AstarLibrary.Core.IRecordHandler
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.destroyCancellationToken
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType``1
    - UnityEngine.Object.FindAnyObjectByType``1
    - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindFirstObjectByType(System.Type)
    - UnityEngine.Object.FindAnyObjectByType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    extensionMethods:
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AstarLibrary.Core.Cog`1.Lock
      commentId: F:AstarLibrary.Core.Cog`1.Lock
      language: CSharp
      name:
        CSharp: Lock
        VB: Lock
      nameWithType:
        CSharp: Cog<T>.Lock
        VB: Cog(Of T).Lock
      qualifiedName:
        CSharp: AstarLibrary.Core.Cog<T>.Lock
        VB: AstarLibrary.Core.Cog(Of T).Lock
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Lock
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Cog.cs
        startLine: 15
      syntax:
        content:
          CSharp: public bool Lock
          VB: Public Lock As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Cog`1.ShowLog
      commentId: F:AstarLibrary.Core.Cog`1.ShowLog
      language: CSharp
      name:
        CSharp: ShowLog
        VB: ShowLog
      nameWithType:
        CSharp: Cog<T>.ShowLog
        VB: Cog(Of T).ShowLog
      qualifiedName:
        CSharp: AstarLibrary.Core.Cog<T>.ShowLog
        VB: AstarLibrary.Core.Cog(Of T).ShowLog
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: ShowLog
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Cog.cs
        startLine: 16
      syntax:
        content:
          CSharp: public bool ShowLog
          VB: Public ShowLog As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Cog`1.persistent
      commentId: F:AstarLibrary.Core.Cog`1.persistent
      language: CSharp
      name:
        CSharp: persistent
        VB: persistent
      nameWithType:
        CSharp: Cog<T>.persistent
        VB: Cog(Of T).persistent
      qualifiedName:
        CSharp: AstarLibrary.Core.Cog<T>.persistent
        VB: AstarLibrary.Core.Cog(Of T).persistent
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: persistent
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Cog.cs
        startLine: 17
      syntax:
        content:
          CSharp: public bool persistent
          VB: Public persistent As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Cog`1.Instance
      commentId: P:AstarLibrary.Core.Cog`1.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: Cog<T>.Instance
        VB: Cog(Of T).Instance
      qualifiedName:
        CSharp: AstarLibrary.Core.Cog<T>.Instance
        VB: AstarLibrary.Core.Cog(Of T).Instance
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Instance
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Cog.cs
        startLine: 20
      syntax:
        content:
          CSharp: public static T Instance { get; }
          VB: Public Shared ReadOnly Property Instance As T
        parameters: []
        return:
          type: '{T}'
      overload: AstarLibrary.Core.Cog`1.Instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: AstarLibrary.Core.Cog`1.Initialize
      commentId: M:AstarLibrary.Core.Cog`1.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: Cog<T>.Initialize()
        VB: Cog(Of T).Initialize()
      qualifiedName:
        CSharp: AstarLibrary.Core.Cog<T>.Initialize()
        VB: AstarLibrary.Core.Cog(Of T).Initialize()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Initialize
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Cog.cs
        startLine: 65
      syntax:
        content:
          CSharp: protected virtual void Initialize()
          VB: Protected Overridable Sub Initialize
      overload: AstarLibrary.Core.Cog`1.Initialize*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: AstarLibrary.Core.Cog`1.Setup
      commentId: M:AstarLibrary.Core.Cog`1.Setup
      language: CSharp
      name:
        CSharp: Setup()
        VB: Setup()
      nameWithType:
        CSharp: Cog<T>.Setup()
        VB: Cog(Of T).Setup()
      qualifiedName:
        CSharp: AstarLibrary.Core.Cog<T>.Setup()
        VB: AstarLibrary.Core.Cog(Of T).Setup()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Setup
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Cog.cs
        startLine: 66
      syntax:
        content:
          CSharp: protected virtual void Setup()
          VB: Protected Overridable Sub Setup
      overload: AstarLibrary.Core.Cog`1.Setup*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: AstarLibrary.Core.Cog`1.Log(System.Object)
      commentId: M:AstarLibrary.Core.Cog`1.Log(System.Object)
      language: CSharp
      name:
        CSharp: Log(Object)
        VB: Log(Object)
      nameWithType:
        CSharp: Cog<T>.Log(Object)
        VB: Cog(Of T).Log(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.Cog<T>.Log(System.Object)
        VB: AstarLibrary.Core.Cog(Of T).Log(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Log
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Cog.cs
        startLine: 67
      syntax:
        content:
          CSharp: public void Log(object message)
          VB: Public Sub Log(message As Object)
        parameters:
        - id: message
          type: System.Object
      overload: AstarLibrary.Core.Cog`1.Log*
      implements:
      - AstarLibrary.Core.IRecordHandler.Log(System.Object)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.Controller`1
    commentId: T:AstarLibrary.Core.Controller`1
    language: CSharp
    name:
      CSharp: Controller<T>
      VB: Controller(Of T)
    nameWithType:
      CSharp: Controller<T>
      VB: Controller(Of T)
    qualifiedName:
      CSharp: AstarLibrary.Core.Controller<T>
      VB: AstarLibrary.Core.Controller(Of T)
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Controller
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Controller.cs
      startLine: 14
    summary: "\nComponent Type Controller\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class Controller<T> : Module, IRecordHandler where T : Component'
        VB: >-
          Public MustInherit Class Controller(Of T As Component)

              Inherits

               Module  Implements IRecordHandler
      typeParameters:
      - id: T
        description: ''
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    - AstarLibrary.Core.Module
    implements:
    - AstarLibrary.Core.IRecordHandler
    inheritedMembers:
    - AstarLibrary.Core.Module.Lock
    - AstarLibrary.Core.Module.ShowLog
    - AstarLibrary.Core.Module.PlayMode
    - AstarLibrary.Core.Module.PlayModeDelay
    - AstarLibrary.Core.Module.Routine
    - AstarLibrary.Core.Module.Awake
    - AstarLibrary.Core.Module.OnEnable
    - AstarLibrary.Core.Module.OnDisable
    - AstarLibrary.Core.Module.OnApplicationQuit
    - AstarLibrary.Core.Module.Log(System.Object)
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.destroyCancellationToken
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType``1
    - UnityEngine.Object.FindAnyObjectByType``1
    - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindFirstObjectByType(System.Type)
    - UnityEngine.Object.FindAnyObjectByType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    extensionMethods:
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: AstarLibrary.Core.Controller`1.GroupController
      commentId: F:AstarLibrary.Core.Controller`1.GroupController
      language: CSharp
      name:
        CSharp: GroupController
        VB: GroupController
      nameWithType:
        CSharp: Controller<T>.GroupController
        VB: Controller(Of T).GroupController
      qualifiedName:
        CSharp: AstarLibrary.Core.Controller<T>.GroupController
        VB: AstarLibrary.Core.Controller(Of T).GroupController
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GroupController
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Controller.cs
        startLine: 17
      syntax:
        content:
          CSharp: public List<T> GroupController
          VB: Public GroupController As List(Of T)
        return:
          type: System.Collections.Generic.List{{T}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Controller`1.Subscribe(`0)
      commentId: M:AstarLibrary.Core.Controller`1.Subscribe(`0)
      language: CSharp
      name:
        CSharp: Subscribe(T)
        VB: Subscribe(T)
      nameWithType:
        CSharp: Controller<T>.Subscribe(T)
        VB: Controller(Of T).Subscribe(T)
      qualifiedName:
        CSharp: AstarLibrary.Core.Controller<T>.Subscribe(T)
        VB: AstarLibrary.Core.Controller(Of T).Subscribe(T)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Subscribe
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Controller.cs
        startLine: 21
      syntax:
        content:
          CSharp: public virtual void Subscribe(T obj)
          VB: Public Overridable Sub Subscribe(obj As T)
        parameters:
        - id: obj
          type: '{T}'
      overload: AstarLibrary.Core.Controller`1.Subscribe*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: AstarLibrary.Core.Controller`1.Initialize
      commentId: M:AstarLibrary.Core.Controller`1.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: Controller<T>.Initialize()
        VB: Controller(Of T).Initialize()
      qualifiedName:
        CSharp: AstarLibrary.Core.Controller<T>.Initialize()
        VB: AstarLibrary.Core.Controller(Of T).Initialize()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Initialize
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Controller.cs
        startLine: 25
      syntax:
        content:
          CSharp: public override IEnumerator Initialize()
          VB: Public Overrides Function Initialize As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: AstarLibrary.Core.Controller`1.Initialize*
      overridden: AstarLibrary.Core.Module.Initialize
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: AstarLibrary.Core.Element
    commentId: T:AstarLibrary.Core.Element
    language: CSharp
    name:
      CSharp: Element
      VB: Element
    nameWithType:
      CSharp: Element
      VB: Element
    qualifiedName:
      CSharp: AstarLibrary.Core.Element
      VB: AstarLibrary.Core.Element
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Element
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Element.cs
      startLine: 13
    summary: "\nSimple Component\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [AddComponentMenu("UI/Bases/Element")]

          public class Element : MonoBehaviour
        VB: >-
          <AddComponentMenu("UI/Bases/Element")>

          Public Class Element

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.destroyCancellationToken
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType``1
    - UnityEngine.Object.FindAnyObjectByType``1
    - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindFirstObjectByType(System.Type)
    - UnityEngine.Object.FindAnyObjectByType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    extensionMethods:
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume
    attributes:
    - type: UnityEngine.AddComponentMenu
      ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
      arguments:
      - type: System.String
        value: UI/Bases/Element
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AstarLibrary.Core.Element.Lock
      commentId: F:AstarLibrary.Core.Element.Lock
      language: CSharp
      name:
        CSharp: Lock
        VB: Lock
      nameWithType:
        CSharp: Element.Lock
        VB: Element.Lock
      qualifiedName:
        CSharp: AstarLibrary.Core.Element.Lock
        VB: AstarLibrary.Core.Element.Lock
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Lock
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Element.cs
        startLine: 17
      syntax:
        content:
          CSharp: public bool Lock
          VB: Public Lock As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Element.ShowLog
      commentId: F:AstarLibrary.Core.Element.ShowLog
      language: CSharp
      name:
        CSharp: ShowLog
        VB: ShowLog
      nameWithType:
        CSharp: Element.ShowLog
        VB: Element.ShowLog
      qualifiedName:
        CSharp: AstarLibrary.Core.Element.ShowLog
        VB: AstarLibrary.Core.Element.ShowLog
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: ShowLog
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Element.cs
        startLine: 18
      syntax:
        content:
          CSharp: public bool ShowLog
          VB: Public ShowLog As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Element.Log(System.Object)
      commentId: M:AstarLibrary.Core.Element.Log(System.Object)
      language: CSharp
      name:
        CSharp: Log(Object)
        VB: Log(Object)
      nameWithType:
        CSharp: Element.Log(Object)
        VB: Element.Log(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.Element.Log(System.Object)
        VB: AstarLibrary.Core.Element.Log(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Log
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Element.cs
        startLine: 22
      syntax:
        content:
          CSharp: public virtual void Log(object message)
          VB: Public Overridable Sub Log(message As Object)
        parameters:
        - id: message
          type: System.Object
      overload: AstarLibrary.Core.Element.Log*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: AstarLibrary.Core.Frame
    commentId: T:AstarLibrary.Core.Frame
    language: CSharp
    name:
      CSharp: Frame
      VB: Frame
    nameWithType:
      CSharp: Frame
      VB: Frame
    qualifiedName:
      CSharp: AstarLibrary.Core.Frame
      VB: AstarLibrary.Core.Frame
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Frame
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Frame.cs
      startLine: 13
    summary: "\nComponent Partial\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [AddComponentMenu("UI/Bases/Frame")]

          public class Frame : Module, IRecordHandler
        VB: >-
          <AddComponentMenu("UI/Bases/Frame")>

          Public Class Frame

              Inherits

               Module  Implements IRecordHandler
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    - AstarLibrary.Core.Module
    implements:
    - AstarLibrary.Core.IRecordHandler
    inheritedMembers:
    - AstarLibrary.Core.Module.Lock
    - AstarLibrary.Core.Module.ShowLog
    - AstarLibrary.Core.Module.PlayMode
    - AstarLibrary.Core.Module.PlayModeDelay
    - AstarLibrary.Core.Module.Routine
    - AstarLibrary.Core.Module.Awake
    - AstarLibrary.Core.Module.OnEnable
    - AstarLibrary.Core.Module.OnDisable
    - AstarLibrary.Core.Module.OnApplicationQuit
    - AstarLibrary.Core.Module.Log(System.Object)
    - AstarLibrary.Core.Module.Initialize
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.destroyCancellationToken
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType``1
    - UnityEngine.Object.FindAnyObjectByType``1
    - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindFirstObjectByType(System.Type)
    - UnityEngine.Object.FindAnyObjectByType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    extensionMethods:
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume
    attributes:
    - type: UnityEngine.AddComponentMenu
      ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
      arguments:
      - type: System.String
        value: UI/Bases/Frame
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: AstarLibrary.Core.Hull
    commentId: T:AstarLibrary.Core.Hull
    language: CSharp
    name:
      CSharp: Hull
      VB: Hull
    nameWithType:
      CSharp: Hull
      VB: Hull
    qualifiedName:
      CSharp: AstarLibrary.Core.Hull
      VB: AstarLibrary.Core.Hull
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Hull
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Hull.cs
      startLine: 13
    summary: "\nComponent Complex\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [AddComponentMenu("UI/Bases/Hull")]

          public class Hull : Module, IRecordHandler
        VB: >-
          <AddComponentMenu("UI/Bases/Hull")>

          Public Class Hull

              Inherits

               Module  Implements IRecordHandler
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    - AstarLibrary.Core.Module
    implements:
    - AstarLibrary.Core.IRecordHandler
    inheritedMembers:
    - AstarLibrary.Core.Module.Lock
    - AstarLibrary.Core.Module.ShowLog
    - AstarLibrary.Core.Module.PlayMode
    - AstarLibrary.Core.Module.PlayModeDelay
    - AstarLibrary.Core.Module.Routine
    - AstarLibrary.Core.Module.Awake
    - AstarLibrary.Core.Module.OnEnable
    - AstarLibrary.Core.Module.OnDisable
    - AstarLibrary.Core.Module.OnApplicationQuit
    - AstarLibrary.Core.Module.Log(System.Object)
    - AstarLibrary.Core.Module.Initialize
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.destroyCancellationToken
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType``1
    - UnityEngine.Object.FindAnyObjectByType``1
    - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindFirstObjectByType(System.Type)
    - UnityEngine.Object.FindAnyObjectByType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    extensionMethods:
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume
    attributes:
    - type: UnityEngine.AddComponentMenu
      ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
      arguments:
      - type: System.String
        value: UI/Bases/Hull
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AstarLibrary.Core.Hull.ShowEvents
      commentId: F:AstarLibrary.Core.Hull.ShowEvents
      language: CSharp
      name:
        CSharp: ShowEvents
        VB: ShowEvents
      nameWithType:
        CSharp: Hull.ShowEvents
        VB: Hull.ShowEvents
      qualifiedName:
        CSharp: AstarLibrary.Core.Hull.ShowEvents
        VB: AstarLibrary.Core.Hull.ShowEvents
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: ShowEvents
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Hull.cs
        startLine: 17
      syntax:
        content:
          CSharp: public bool ShowEvents
          VB: Public ShowEvents As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Hull.OnFinish
      commentId: F:AstarLibrary.Core.Hull.OnFinish
      language: CSharp
      name:
        CSharp: OnFinish
        VB: OnFinish
      nameWithType:
        CSharp: Hull.OnFinish
        VB: Hull.OnFinish
      qualifiedName:
        CSharp: AstarLibrary.Core.Hull.OnFinish
        VB: AstarLibrary.Core.Hull.OnFinish
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: OnFinish
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Hull.cs
        startLine: 19
      syntax:
        content:
          CSharp: public UnityEvent OnFinish
          VB: Public OnFinish As UnityEvent
        return:
          type: UnityEngine.Events.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.Manager
    commentId: T:AstarLibrary.Core.Manager
    language: CSharp
    name:
      CSharp: Manager
      VB: Manager
    nameWithType:
      CSharp: Manager
      VB: Manager
    qualifiedName:
      CSharp: AstarLibrary.Core.Manager
      VB: AstarLibrary.Core.Manager
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Manager
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Manager.cs
      startLine: 13
    summary: "\nManager Component Type\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [AddComponentMenu("UI/Bases/Manager")]

          public class Manager : Hull, IRecordHandler
        VB: >-
          <AddComponentMenu("UI/Bases/Manager")>

          Public Class Manager

              Inherits Hull

              Implements IRecordHandler
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    - AstarLibrary.Core.Module
    - AstarLibrary.Core.Hull
    implements:
    - AstarLibrary.Core.IRecordHandler
    inheritedMembers:
    - AstarLibrary.Core.Hull.ShowEvents
    - AstarLibrary.Core.Hull.OnFinish
    - AstarLibrary.Core.Module.Lock
    - AstarLibrary.Core.Module.ShowLog
    - AstarLibrary.Core.Module.PlayMode
    - AstarLibrary.Core.Module.PlayModeDelay
    - AstarLibrary.Core.Module.Routine
    - AstarLibrary.Core.Module.Awake
    - AstarLibrary.Core.Module.OnEnable
    - AstarLibrary.Core.Module.OnDisable
    - AstarLibrary.Core.Module.OnApplicationQuit
    - AstarLibrary.Core.Module.Log(System.Object)
    - AstarLibrary.Core.Module.Initialize
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.destroyCancellationToken
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType``1
    - UnityEngine.Object.FindAnyObjectByType``1
    - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindFirstObjectByType(System.Type)
    - UnityEngine.Object.FindAnyObjectByType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    extensionMethods:
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume
    attributes:
    - type: UnityEngine.AddComponentMenu
      ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
      arguments:
      - type: System.String
        value: UI/Bases/Manager
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: AstarLibrary.Core.Manager`1
    commentId: T:AstarLibrary.Core.Manager`1
    language: CSharp
    name:
      CSharp: Manager<T>
      VB: Manager(Of T)
    nameWithType:
      CSharp: Manager<T>
      VB: Manager(Of T)
    qualifiedName:
      CSharp: AstarLibrary.Core.Manager<T>
      VB: AstarLibrary.Core.Manager(Of T)
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Manager
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Manager.cs
      startLine: 20
    summary: "\nUnique Manager Component Type\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Manager<T> : Cog<T>, IRecordHandler where T : Component'
        VB: >-
          Public Class Manager(Of T As Component)

              Inherits Cog(Of T)

              Implements IRecordHandler
      typeParameters:
      - id: T
        description: ''
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    - AstarLibrary.Core.Cog{{T}}
    implements:
    - AstarLibrary.Core.IRecordHandler
    inheritedMembers:
    - AstarLibrary.Core.Cog{{T}}.Lock
    - AstarLibrary.Core.Cog{{T}}.ShowLog
    - AstarLibrary.Core.Cog{{T}}.persistent
    - AstarLibrary.Core.Cog{{T}}.Instance
    - AstarLibrary.Core.Cog{{T}}.Initialize
    - AstarLibrary.Core.Cog{{T}}.Setup
    - AstarLibrary.Core.Cog{{T}}.Log(System.Object)
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.destroyCancellationToken
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType``1
    - UnityEngine.Object.FindAnyObjectByType``1
    - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindFirstObjectByType(System.Type)
    - UnityEngine.Object.FindAnyObjectByType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    extensionMethods:
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: AstarLibrary.Core.Module
    commentId: T:AstarLibrary.Core.Module
    language: CSharp
    name:
      CSharp: Module
      VB: Module
    nameWithType:
      CSharp: Module
      VB: Module
    qualifiedName:
      CSharp: AstarLibrary.Core.Module
      VB: AstarLibrary.Core.Module
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Module
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
      startLine: 12
    summary: "\nBase Component\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          [AddComponentMenu("UI/Bases/Module")]

          public class Module : MonoBehaviour, IRecordHandler
        VB: >-
          <Serializable>

          <AddComponentMenu("UI/Bases/Module")>

          Public Class Module

              Inherits MonoBehaviour

              Implements IRecordHandler
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    implements:
    - AstarLibrary.Core.IRecordHandler
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.destroyCancellationToken
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType``1
    - UnityEngine.Object.FindAnyObjectByType``1
    - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindFirstObjectByType(System.Type)
    - UnityEngine.Object.FindAnyObjectByType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    extensionMethods:
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    - type: UnityEngine.AddComponentMenu
      ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
      arguments:
      - type: System.String
        value: UI/Bases/Module
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AstarLibrary.Core.Module.Lock
      commentId: F:AstarLibrary.Core.Module.Lock
      language: CSharp
      name:
        CSharp: Lock
        VB: Lock
      nameWithType:
        CSharp: Module.Lock
        VB: Module.Lock
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.Lock
        VB: AstarLibrary.Core.Module.Lock
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Lock
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 17
      syntax:
        content:
          CSharp: public bool Lock
          VB: Public Lock As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Module.ShowLog
      commentId: F:AstarLibrary.Core.Module.ShowLog
      language: CSharp
      name:
        CSharp: ShowLog
        VB: ShowLog
      nameWithType:
        CSharp: Module.ShowLog
        VB: Module.ShowLog
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.ShowLog
        VB: AstarLibrary.Core.Module.ShowLog
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: ShowLog
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 19
      syntax:
        content:
          CSharp: public bool ShowLog
          VB: Public ShowLog As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Module.PlayMode
      commentId: F:AstarLibrary.Core.Module.PlayMode
      language: CSharp
      name:
        CSharp: PlayMode
        VB: PlayMode
      nameWithType:
        CSharp: Module.PlayMode
        VB: Module.PlayMode
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.PlayMode
        VB: AstarLibrary.Core.Module.PlayMode
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: PlayMode
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 21
      syntax:
        content:
          CSharp: public StartType PlayMode
          VB: Public PlayMode As StartType
        return:
          type: AstarLibrary.Core.StartType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Module.PlayModeDelay
      commentId: F:AstarLibrary.Core.Module.PlayModeDelay
      language: CSharp
      name:
        CSharp: PlayModeDelay
        VB: PlayModeDelay
      nameWithType:
        CSharp: Module.PlayModeDelay
        VB: Module.PlayModeDelay
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.PlayModeDelay
        VB: AstarLibrary.Core.Module.PlayModeDelay
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: PlayModeDelay
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 23
      syntax:
        content:
          CSharp: public float PlayModeDelay
          VB: Public PlayModeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Module.Routine
      commentId: F:AstarLibrary.Core.Module.Routine
      language: CSharp
      name:
        CSharp: Routine
        VB: Routine
      nameWithType:
        CSharp: Module.Routine
        VB: Module.Routine
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.Routine
        VB: AstarLibrary.Core.Module.Routine
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Routine
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 25
      syntax:
        content:
          CSharp: public Coroutine Routine
          VB: Public Routine As Coroutine
        return:
          type: UnityEngine.Coroutine
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Module.Awake
      commentId: M:AstarLibrary.Core.Module.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: Module.Awake()
        VB: Module.Awake()
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.Awake()
        VB: AstarLibrary.Core.Module.Awake()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Awake
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 29
      syntax:
        content:
          CSharp: public virtual void Awake()
          VB: Public Overridable Sub Awake
      overload: AstarLibrary.Core.Module.Awake*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: AstarLibrary.Core.Module.OnEnable
      commentId: M:AstarLibrary.Core.Module.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: Module.OnEnable()
        VB: Module.OnEnable()
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.OnEnable()
        VB: AstarLibrary.Core.Module.OnEnable()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: OnEnable
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 39
      syntax:
        content:
          CSharp: public virtual void OnEnable()
          VB: Public Overridable Sub OnEnable
      overload: AstarLibrary.Core.Module.OnEnable*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: AstarLibrary.Core.Module.OnDisable
      commentId: M:AstarLibrary.Core.Module.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: Module.OnDisable()
        VB: Module.OnDisable()
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.OnDisable()
        VB: AstarLibrary.Core.Module.OnDisable()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: OnDisable
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 43
      syntax:
        content:
          CSharp: public virtual void OnDisable()
          VB: Public Overridable Sub OnDisable
      overload: AstarLibrary.Core.Module.OnDisable*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: AstarLibrary.Core.Module.OnApplicationQuit
      commentId: M:AstarLibrary.Core.Module.OnApplicationQuit
      language: CSharp
      name:
        CSharp: OnApplicationQuit()
        VB: OnApplicationQuit()
      nameWithType:
        CSharp: Module.OnApplicationQuit()
        VB: Module.OnApplicationQuit()
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.OnApplicationQuit()
        VB: AstarLibrary.Core.Module.OnApplicationQuit()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: OnApplicationQuit
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 44
      syntax:
        content:
          CSharp: public virtual void OnApplicationQuit()
          VB: Public Overridable Sub OnApplicationQuit
      overload: AstarLibrary.Core.Module.OnApplicationQuit*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: AstarLibrary.Core.Module.Log(System.Object)
      commentId: M:AstarLibrary.Core.Module.Log(System.Object)
      language: CSharp
      name:
        CSharp: Log(Object)
        VB: Log(Object)
      nameWithType:
        CSharp: Module.Log(Object)
        VB: Module.Log(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.Log(System.Object)
        VB: AstarLibrary.Core.Module.Log(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Log
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 51
      syntax:
        content:
          CSharp: public virtual void Log(object message)
          VB: Public Overridable Sub Log(message As Object)
        parameters:
        - id: message
          type: System.Object
      overload: AstarLibrary.Core.Module.Log*
      implements:
      - AstarLibrary.Core.IRecordHandler.Log(System.Object)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: AstarLibrary.Core.Module.Initialize
      commentId: M:AstarLibrary.Core.Module.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: Module.Initialize()
        VB: Module.Initialize()
      qualifiedName:
        CSharp: AstarLibrary.Core.Module.Initialize()
        VB: AstarLibrary.Core.Module.Initialize()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Initialize
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Module.cs
        startLine: 74
      syntax:
        content:
          CSharp: public virtual IEnumerator Initialize()
          VB: Public Overridable Function Initialize As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: AstarLibrary.Core.Module.Initialize*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: AstarLibrary.Core.Warden
    commentId: T:AstarLibrary.Core.Warden
    language: CSharp
    name:
      CSharp: Warden
      VB: Warden
    nameWithType:
      CSharp: Warden
      VB: Warden
    qualifiedName:
      CSharp: AstarLibrary.Core.Warden
      VB: AstarLibrary.Core.Warden
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Warden
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Warden.cs
      startLine: 11
    summary: "\nOveerseer of Workers\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Warden : Module, IRecordHandler, IOverseerHandler'
        VB: >-
          Public Class Warden

              Inherits

               Module  Implements IRecordHandler, IOverseerHandler
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    - AstarLibrary.Core.Module
    implements:
    - AstarLibrary.Core.IRecordHandler
    - AstarLibrary.Core.IOverseerHandler
    inheritedMembers:
    - AstarLibrary.Core.Module.Lock
    - AstarLibrary.Core.Module.ShowLog
    - AstarLibrary.Core.Module.PlayMode
    - AstarLibrary.Core.Module.PlayModeDelay
    - AstarLibrary.Core.Module.Routine
    - AstarLibrary.Core.Module.Awake
    - AstarLibrary.Core.Module.OnEnable
    - AstarLibrary.Core.Module.OnDisable
    - AstarLibrary.Core.Module.OnApplicationQuit
    - AstarLibrary.Core.Module.Log(System.Object)
    - AstarLibrary.Core.Module.Initialize
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.destroyCancellationToken
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType``1
    - UnityEngine.Object.FindAnyObjectByType``1
    - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindFirstObjectByType(System.Type)
    - UnityEngine.Object.FindAnyObjectByType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    extensionMethods:
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AstarLibrary.Core.Warden.IsDone
      commentId: F:AstarLibrary.Core.Warden.IsDone
      language: CSharp
      name:
        CSharp: IsDone
        VB: IsDone
      nameWithType:
        CSharp: Warden.IsDone
        VB: Warden.IsDone
      qualifiedName:
        CSharp: AstarLibrary.Core.Warden.IsDone
        VB: AstarLibrary.Core.Warden.IsDone
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: IsDone
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Warden.cs
        startLine: 14
      syntax:
        content:
          CSharp: public bool IsDone
          VB: Public IsDone As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Warden.Message
      commentId: F:AstarLibrary.Core.Warden.Message
      language: CSharp
      name:
        CSharp: Message
        VB: Message
      nameWithType:
        CSharp: Warden.Message
        VB: Warden.Message
      qualifiedName:
        CSharp: AstarLibrary.Core.Warden.Message
        VB: AstarLibrary.Core.Warden.Message
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Message
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Warden.cs
        startLine: 16
      syntax:
        content:
          CSharp: public string Message
          VB: Public Message As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Warden.Callback
      commentId: F:AstarLibrary.Core.Warden.Callback
      language: CSharp
      name:
        CSharp: Callback
        VB: Callback
      nameWithType:
        CSharp: Warden.Callback
        VB: Warden.Callback
      qualifiedName:
        CSharp: AstarLibrary.Core.Warden.Callback
        VB: AstarLibrary.Core.Warden.Callback
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Callback
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Warden.cs
        startLine: 18
      syntax:
        content:
          CSharp: public UnityEvent<string> Callback
          VB: Public Callback As UnityEvent(Of String)
        return:
          type: UnityEngine.Events.UnityEvent{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Warden.OnComplete
      commentId: F:AstarLibrary.Core.Warden.OnComplete
      language: CSharp
      name:
        CSharp: OnComplete
        VB: OnComplete
      nameWithType:
        CSharp: Warden.OnComplete
        VB: Warden.OnComplete
      qualifiedName:
        CSharp: AstarLibrary.Core.Warden.OnComplete
        VB: AstarLibrary.Core.Warden.OnComplete
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: OnComplete
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Warden.cs
        startLine: 20
      syntax:
        content:
          CSharp: public UnityEvent OnComplete
          VB: Public OnComplete As UnityEvent
        return:
          type: UnityEngine.Events.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Warden.Setup
      commentId: M:AstarLibrary.Core.Warden.Setup
      language: CSharp
      name:
        CSharp: Setup()
        VB: Setup()
      nameWithType:
        CSharp: Warden.Setup()
        VB: Warden.Setup()
      qualifiedName:
        CSharp: AstarLibrary.Core.Warden.Setup()
        VB: AstarLibrary.Core.Warden.Setup()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Setup
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Warden.cs
        startLine: 24
      syntax:
        content:
          CSharp: protected virtual void Setup()
          VB: Protected Overridable Sub Setup
      overload: AstarLibrary.Core.Warden.Setup*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: AstarLibrary.Core.Warden.Subscription
      commentId: M:AstarLibrary.Core.Warden.Subscription
      language: CSharp
      name:
        CSharp: Subscription()
        VB: Subscription()
      nameWithType:
        CSharp: Warden.Subscription()
        VB: Warden.Subscription()
      qualifiedName:
        CSharp: AstarLibrary.Core.Warden.Subscription()
        VB: AstarLibrary.Core.Warden.Subscription()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Subscription
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Warden.cs
        startLine: 28
      syntax:
        content:
          CSharp: public virtual void Subscription()
          VB: Public Overridable Sub Subscription
      overload: AstarLibrary.Core.Warden.Subscription*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: AstarLibrary.Core.Warden.Watch(System.Object)
      commentId: M:AstarLibrary.Core.Warden.Watch(System.Object)
      language: CSharp
      name:
        CSharp: Watch(Object)
        VB: Watch(Object)
      nameWithType:
        CSharp: Warden.Watch(Object)
        VB: Warden.Watch(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.Warden.Watch(System.Object)
        VB: AstarLibrary.Core.Warden.Watch(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Watch
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Warden.cs
        startLine: 29
      syntax:
        content:
          CSharp: public virtual void Watch(object obj)
          VB: Public Overridable Sub Watch(obj As Object)
        parameters:
        - id: obj
          type: System.Object
      overload: AstarLibrary.Core.Warden.Watch*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: AstarLibrary.Core.Warden.Notify(System.Object)
      commentId: M:AstarLibrary.Core.Warden.Notify(System.Object)
      language: CSharp
      name:
        CSharp: Notify(Object)
        VB: Notify(Object)
      nameWithType:
        CSharp: Warden.Notify(Object)
        VB: Warden.Notify(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.Warden.Notify(System.Object)
        VB: AstarLibrary.Core.Warden.Notify(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Notify
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Warden.cs
        startLine: 30
      syntax:
        content:
          CSharp: public virtual void Notify(object obj)
          VB: Public Overridable Sub Notify(obj As Object)
        parameters:
        - id: obj
          type: System.Object
      overload: AstarLibrary.Core.Warden.Notify*
      implements:
      - AstarLibrary.Core.IOverseerHandler.Notify(System.Object)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: AstarLibrary.Core.Worker`1
    commentId: T:AstarLibrary.Core.Worker`1
    language: CSharp
    name:
      CSharp: Worker<T>
      VB: Worker(Of T)
    nameWithType:
      CSharp: Worker<T>
      VB: Worker(Of T)
    qualifiedName:
      CSharp: AstarLibrary.Core.Worker<T>
      VB: AstarLibrary.Core.Worker(Of T)
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Worker
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Worker.cs
      startLine: 13
    summary: "\nConnector of all Logics\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Worker<T> : Module, IRecordHandler, IWorkerHandler where T : Component'
        VB: >-
          Public Class Worker(Of T As Component)

              Inherits

               Module  Implements IRecordHandler, IWorkerHandler
      typeParameters:
      - id: T
        description: ''
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    - AstarLibrary.Core.Module
    implements:
    - AstarLibrary.Core.IRecordHandler
    - AstarLibrary.Core.IWorkerHandler
    inheritedMembers:
    - AstarLibrary.Core.Module.Lock
    - AstarLibrary.Core.Module.ShowLog
    - AstarLibrary.Core.Module.PlayMode
    - AstarLibrary.Core.Module.PlayModeDelay
    - AstarLibrary.Core.Module.Routine
    - AstarLibrary.Core.Module.Awake
    - AstarLibrary.Core.Module.OnEnable
    - AstarLibrary.Core.Module.OnDisable
    - AstarLibrary.Core.Module.OnApplicationQuit
    - AstarLibrary.Core.Module.Log(System.Object)
    - AstarLibrary.Core.Module.Initialize
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.destroyCancellationToken
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType``1
    - UnityEngine.Object.FindAnyObjectByType``1
    - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindFirstObjectByType(System.Type)
    - UnityEngine.Object.FindAnyObjectByType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    extensionMethods:
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause
    - UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AstarLibrary.Core.Worker`1.Active
      commentId: F:AstarLibrary.Core.Worker`1.Active
      language: CSharp
      name:
        CSharp: Active
        VB: Active
      nameWithType:
        CSharp: Worker<T>.Active
        VB: Worker(Of T).Active
      qualifiedName:
        CSharp: AstarLibrary.Core.Worker<T>.Active
        VB: AstarLibrary.Core.Worker(Of T).Active
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Active
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Worker.cs
        startLine: 16
      syntax:
        content:
          CSharp: public bool Active
          VB: Public Active As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Worker`1.Tick
      commentId: F:AstarLibrary.Core.Worker`1.Tick
      language: CSharp
      name:
        CSharp: Tick
        VB: Tick
      nameWithType:
        CSharp: Worker<T>.Tick
        VB: Worker(Of T).Tick
      qualifiedName:
        CSharp: AstarLibrary.Core.Worker<T>.Tick
        VB: AstarLibrary.Core.Worker(Of T).Tick
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Tick
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Worker.cs
        startLine: 18
      syntax:
        content:
          CSharp: public float Tick
          VB: Public Tick As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Worker`1.Description
      commentId: F:AstarLibrary.Core.Worker`1.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: Worker<T>.Description
        VB: Worker(Of T).Description
      qualifiedName:
        CSharp: AstarLibrary.Core.Worker<T>.Description
        VB: AstarLibrary.Core.Worker(Of T).Description
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Description
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Worker.cs
        startLine: 20
      syntax:
        content:
          CSharp: public string Description
          VB: Public Description As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Worker`1.Setup
      commentId: M:AstarLibrary.Core.Worker`1.Setup
      language: CSharp
      name:
        CSharp: Setup()
        VB: Setup()
      nameWithType:
        CSharp: Worker<T>.Setup()
        VB: Worker(Of T).Setup()
      qualifiedName:
        CSharp: AstarLibrary.Core.Worker<T>.Setup()
        VB: AstarLibrary.Core.Worker(Of T).Setup()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Setup
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Worker.cs
        startLine: 24
      syntax:
        content:
          CSharp: protected virtual void Setup()
          VB: Protected Overridable Sub Setup
      overload: AstarLibrary.Core.Worker`1.Setup*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: AstarLibrary.Core.Worker`1.Subscription
      commentId: M:AstarLibrary.Core.Worker`1.Subscription
      language: CSharp
      name:
        CSharp: Subscription()
        VB: Subscription()
      nameWithType:
        CSharp: Worker<T>.Subscription()
        VB: Worker(Of T).Subscription()
      qualifiedName:
        CSharp: AstarLibrary.Core.Worker<T>.Subscription()
        VB: AstarLibrary.Core.Worker(Of T).Subscription()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Subscription
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Worker.cs
        startLine: 28
      syntax:
        content:
          CSharp: public virtual void Subscription()
          VB: Public Overridable Sub Subscription
      overload: AstarLibrary.Core.Worker`1.Subscription*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: AstarLibrary.Core.Worker`1.Execute
      commentId: M:AstarLibrary.Core.Worker`1.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: Worker<T>.Execute()
        VB: Worker(Of T).Execute()
      qualifiedName:
        CSharp: AstarLibrary.Core.Worker<T>.Execute()
        VB: AstarLibrary.Core.Worker(Of T).Execute()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Execute
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Worker.cs
        startLine: 29
      syntax:
        content:
          CSharp: public virtual void Execute()
          VB: Public Overridable Sub Execute
      overload: AstarLibrary.Core.Worker`1.Execute*
      implements:
      - AstarLibrary.Core.IWorkerHandler.Execute
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: AstarLibrary.Core.Worker`1.Duty
      commentId: M:AstarLibrary.Core.Worker`1.Duty
      language: CSharp
      name:
        CSharp: Duty()
        VB: Duty()
      nameWithType:
        CSharp: Worker<T>.Duty()
        VB: Worker(Of T).Duty()
      qualifiedName:
        CSharp: AstarLibrary.Core.Worker<T>.Duty()
        VB: AstarLibrary.Core.Worker(Of T).Duty()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Duty
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Base\Worker.cs
        startLine: 33
      syntax:
        content:
          CSharp: protected virtual IEnumerator Duty()
          VB: Protected Overridable Function Duty As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: AstarLibrary.Core.Worker`1.Duty*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: AstarLibrary.Core.ReportSource
    commentId: T:AstarLibrary.Core.ReportSource
    language: CSharp
    name:
      CSharp: ReportSource
      VB: ReportSource
    nameWithType:
      CSharp: ReportSource
      VB: ReportSource
    qualifiedName:
      CSharp: AstarLibrary.Core.ReportSource
      VB: AstarLibrary.Core.ReportSource
    type: Enum
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: ReportSource
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
      startLine: 8
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public enum ReportSource
        VB: >-
          <Serializable>

          Public Enum ReportSource
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AstarLibrary.Core.ReportSource.Unity
      commentId: F:AstarLibrary.Core.ReportSource.Unity
      language: CSharp
      name:
        CSharp: Unity
        VB: Unity
      nameWithType:
        CSharp: ReportSource.Unity
        VB: ReportSource.Unity
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Unity
        VB: AstarLibrary.Core.ReportSource.Unity
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Unity
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 11
      syntax:
        content:
          CSharp: Unity = 0
          VB: Unity = 0
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.System
      commentId: F:AstarLibrary.Core.ReportSource.System
      language: CSharp
      name:
        CSharp: System
        VB: System
      nameWithType:
        CSharp: ReportSource.System
        VB: ReportSource.System
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.System
        VB: AstarLibrary.Core.ReportSource.System
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: System
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 12
      syntax:
        content:
          CSharp: System = 1
          VB: System = 1
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Server
      commentId: F:AstarLibrary.Core.ReportSource.Server
      language: CSharp
      name:
        CSharp: Server
        VB: Server
      nameWithType:
        CSharp: ReportSource.Server
        VB: ReportSource.Server
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Server
        VB: AstarLibrary.Core.ReportSource.Server
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Server
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 13
      syntax:
        content:
          CSharp: Server = 2
          VB: Server = 2
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Web
      commentId: F:AstarLibrary.Core.ReportSource.Web
      language: CSharp
      name:
        CSharp: Web
        VB: Web
      nameWithType:
        CSharp: ReportSource.Web
        VB: ReportSource.Web
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Web
        VB: AstarLibrary.Core.ReportSource.Web
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Web
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 14
      syntax:
        content:
          CSharp: Web = 3
          VB: Web = 3
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.API
      commentId: F:AstarLibrary.Core.ReportSource.API
      language: CSharp
      name:
        CSharp: API
        VB: API
      nameWithType:
        CSharp: ReportSource.API
        VB: ReportSource.API
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.API
        VB: AstarLibrary.Core.ReportSource.API
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: API
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 15
      syntax:
        content:
          CSharp: API = 4
          VB: API = 4
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.User
      commentId: F:AstarLibrary.Core.ReportSource.User
      language: CSharp
      name:
        CSharp: User
        VB: User
      nameWithType:
        CSharp: ReportSource.User
        VB: ReportSource.User
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.User
        VB: AstarLibrary.Core.ReportSource.User
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: User
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 16
      syntax:
        content:
          CSharp: User = 5
          VB: User = 5
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Account
      commentId: F:AstarLibrary.Core.ReportSource.Account
      language: CSharp
      name:
        CSharp: Account
        VB: Account
      nameWithType:
        CSharp: ReportSource.Account
        VB: ReportSource.Account
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Account
        VB: AstarLibrary.Core.ReportSource.Account
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Account
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 17
      syntax:
        content:
          CSharp: Account = 6
          VB: Account = 6
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Component
      commentId: F:AstarLibrary.Core.ReportSource.Component
      language: CSharp
      name:
        CSharp: Component
        VB: Component
      nameWithType:
        CSharp: ReportSource.Component
        VB: ReportSource.Component
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Component
        VB: AstarLibrary.Core.ReportSource.Component
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Component
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 18
      syntax:
        content:
          CSharp: Component = 7
          VB: Component = 7
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Network
      commentId: F:AstarLibrary.Core.ReportSource.Network
      language: CSharp
      name:
        CSharp: Network
        VB: Network
      nameWithType:
        CSharp: ReportSource.Network
        VB: ReportSource.Network
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Network
        VB: AstarLibrary.Core.ReportSource.Network
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Network
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 19
      syntax:
        content:
          CSharp: Network = 8
          VB: Network = 8
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Mobile
      commentId: F:AstarLibrary.Core.ReportSource.Mobile
      language: CSharp
      name:
        CSharp: Mobile
        VB: Mobile
      nameWithType:
        CSharp: ReportSource.Mobile
        VB: ReportSource.Mobile
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Mobile
        VB: AstarLibrary.Core.ReportSource.Mobile
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Mobile
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 20
      syntax:
        content:
          CSharp: Mobile = 9
          VB: Mobile = 9
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.PC
      commentId: F:AstarLibrary.Core.ReportSource.PC
      language: CSharp
      name:
        CSharp: PC
        VB: PC
      nameWithType:
        CSharp: ReportSource.PC
        VB: ReportSource.PC
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.PC
        VB: AstarLibrary.Core.ReportSource.PC
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: PC
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 21
      syntax:
        content:
          CSharp: PC = 10
          VB: PC = 10
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Console
      commentId: F:AstarLibrary.Core.ReportSource.Console
      language: CSharp
      name:
        CSharp: Console
        VB: Console
      nameWithType:
        CSharp: ReportSource.Console
        VB: ReportSource.Console
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Console
        VB: AstarLibrary.Core.ReportSource.Console
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Console
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 22
      syntax:
        content:
          CSharp: Console = 11
          VB: Console = 11
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.VR
      commentId: F:AstarLibrary.Core.ReportSource.VR
      language: CSharp
      name:
        CSharp: VR
        VB: VR
      nameWithType:
        CSharp: ReportSource.VR
        VB: ReportSource.VR
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.VR
        VB: AstarLibrary.Core.ReportSource.VR
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: VR
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 23
      syntax:
        content:
          CSharp: VR = 12
          VB: VR = 12
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Android
      commentId: F:AstarLibrary.Core.ReportSource.Android
      language: CSharp
      name:
        CSharp: Android
        VB: Android
      nameWithType:
        CSharp: ReportSource.Android
        VB: ReportSource.Android
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Android
        VB: AstarLibrary.Core.ReportSource.Android
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Android
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 24
      syntax:
        content:
          CSharp: Android = 13
          VB: Android = 13
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.IOS
      commentId: F:AstarLibrary.Core.ReportSource.IOS
      language: CSharp
      name:
        CSharp: IOS
        VB: IOS
      nameWithType:
        CSharp: ReportSource.IOS
        VB: ReportSource.IOS
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.IOS
        VB: AstarLibrary.Core.ReportSource.IOS
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: IOS
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 25
      syntax:
        content:
          CSharp: IOS = 14
          VB: IOS = 14
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Windows
      commentId: F:AstarLibrary.Core.ReportSource.Windows
      language: CSharp
      name:
        CSharp: Windows
        VB: Windows
      nameWithType:
        CSharp: ReportSource.Windows
        VB: ReportSource.Windows
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Windows
        VB: AstarLibrary.Core.ReportSource.Windows
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Windows
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 26
      syntax:
        content:
          CSharp: Windows = 15
          VB: Windows = 15
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Linux
      commentId: F:AstarLibrary.Core.ReportSource.Linux
      language: CSharp
      name:
        CSharp: Linux
        VB: Linux
      nameWithType:
        CSharp: ReportSource.Linux
        VB: ReportSource.Linux
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Linux
        VB: AstarLibrary.Core.ReportSource.Linux
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Linux
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 27
      syntax:
        content:
          CSharp: Linux = 16
          VB: Linux = 16
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Playstation
      commentId: F:AstarLibrary.Core.ReportSource.Playstation
      language: CSharp
      name:
        CSharp: Playstation
        VB: Playstation
      nameWithType:
        CSharp: ReportSource.Playstation
        VB: ReportSource.Playstation
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Playstation
        VB: AstarLibrary.Core.ReportSource.Playstation
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Playstation
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 28
      syntax:
        content:
          CSharp: Playstation = 17
          VB: Playstation = 17
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Xbox
      commentId: F:AstarLibrary.Core.ReportSource.Xbox
      language: CSharp
      name:
        CSharp: Xbox
        VB: Xbox
      nameWithType:
        CSharp: ReportSource.Xbox
        VB: ReportSource.Xbox
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Xbox
        VB: AstarLibrary.Core.ReportSource.Xbox
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Xbox
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 29
      syntax:
        content:
          CSharp: Xbox = 18
          VB: Xbox = 18
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Firebase
      commentId: F:AstarLibrary.Core.ReportSource.Firebase
      language: CSharp
      name:
        CSharp: Firebase
        VB: Firebase
      nameWithType:
        CSharp: ReportSource.Firebase
        VB: ReportSource.Firebase
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Firebase
        VB: AstarLibrary.Core.ReportSource.Firebase
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Firebase
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 30
      syntax:
        content:
          CSharp: Firebase = 19
          VB: Firebase = 19
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Google
      commentId: F:AstarLibrary.Core.ReportSource.Google
      language: CSharp
      name:
        CSharp: Google
        VB: Google
      nameWithType:
        CSharp: ReportSource.Google
        VB: ReportSource.Google
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Google
        VB: AstarLibrary.Core.ReportSource.Google
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Google
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 31
      syntax:
        content:
          CSharp: Google = 20
          VB: Google = 20
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Apple
      commentId: F:AstarLibrary.Core.ReportSource.Apple
      language: CSharp
      name:
        CSharp: Apple
        VB: Apple
      nameWithType:
        CSharp: ReportSource.Apple
        VB: ReportSource.Apple
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Apple
        VB: AstarLibrary.Core.ReportSource.Apple
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Apple
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 32
      syntax:
        content:
          CSharp: Apple = 21
          VB: Apple = 21
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportSource.Facebook
      commentId: F:AstarLibrary.Core.ReportSource.Facebook
      language: CSharp
      name:
        CSharp: Facebook
        VB: Facebook
      nameWithType:
        CSharp: ReportSource.Facebook
        VB: ReportSource.Facebook
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportSource.Facebook
        VB: AstarLibrary.Core.ReportSource.Facebook
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Facebook
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportSource.cs
        startLine: 33
      syntax:
        content:
          CSharp: Facebook = 22
          VB: Facebook = 22
        return:
          type: AstarLibrary.Core.ReportSource
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AstarLibrary.Core.ReportType
    commentId: T:AstarLibrary.Core.ReportType
    language: CSharp
    name:
      CSharp: ReportType
      VB: ReportType
    nameWithType:
      CSharp: ReportType
      VB: ReportType
    qualifiedName:
      CSharp: AstarLibrary.Core.ReportType
      VB: AstarLibrary.Core.ReportType
    type: Enum
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: ReportType
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportType.cs
      startLine: 8
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public enum ReportType
        VB: >-
          <Serializable>

          Public Enum ReportType
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AstarLibrary.Core.ReportType.Info
      commentId: F:AstarLibrary.Core.ReportType.Info
      language: CSharp
      name:
        CSharp: Info
        VB: Info
      nameWithType:
        CSharp: ReportType.Info
        VB: ReportType.Info
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportType.Info
        VB: AstarLibrary.Core.ReportType.Info
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Info
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportType.cs
        startLine: 11
      syntax:
        content:
          CSharp: Info = 0
          VB: Info = 0
        return:
          type: AstarLibrary.Core.ReportType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportType.Warning
      commentId: F:AstarLibrary.Core.ReportType.Warning
      language: CSharp
      name:
        CSharp: Warning
        VB: Warning
      nameWithType:
        CSharp: ReportType.Warning
        VB: ReportType.Warning
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportType.Warning
        VB: AstarLibrary.Core.ReportType.Warning
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Warning
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportType.cs
        startLine: 12
      syntax:
        content:
          CSharp: Warning = 1
          VB: Warning = 1
        return:
          type: AstarLibrary.Core.ReportType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.ReportType.Error
      commentId: F:AstarLibrary.Core.ReportType.Error
      language: CSharp
      name:
        CSharp: Error
        VB: Error
      nameWithType:
        CSharp: ReportType.Error
        VB: ReportType.Error
      qualifiedName:
        CSharp: AstarLibrary.Core.ReportType.Error
        VB: AstarLibrary.Core.ReportType.Error
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Error
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\ReportType.cs
        startLine: 13
      syntax:
        content:
          CSharp: Error = 2
          VB: Error = 2
        return:
          type: AstarLibrary.Core.ReportType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AstarLibrary.Core.StartType
    commentId: T:AstarLibrary.Core.StartType
    language: CSharp
    name:
      CSharp: StartType
      VB: StartType
    nameWithType:
      CSharp: StartType
      VB: StartType
    qualifiedName:
      CSharp: AstarLibrary.Core.StartType
      VB: AstarLibrary.Core.StartType
    type: Enum
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: StartType
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\StartType.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public enum StartType
        VB: >-
          <Serializable>

          Public Enum StartType
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AstarLibrary.Core.StartType.Dont
      commentId: F:AstarLibrary.Core.StartType.Dont
      language: CSharp
      name:
        CSharp: Dont
        VB: Dont
      nameWithType:
        CSharp: StartType.Dont
        VB: StartType.Dont
      qualifiedName:
        CSharp: AstarLibrary.Core.StartType.Dont
        VB: AstarLibrary.Core.StartType.Dont
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Dont
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\StartType.cs
        startLine: 12
      syntax:
        content:
          CSharp: Dont = 0
          VB: Dont = 0
        return:
          type: AstarLibrary.Core.StartType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.StartType.Awake
      commentId: F:AstarLibrary.Core.StartType.Awake
      language: CSharp
      name:
        CSharp: Awake
        VB: Awake
      nameWithType:
        CSharp: StartType.Awake
        VB: StartType.Awake
      qualifiedName:
        CSharp: AstarLibrary.Core.StartType.Awake
        VB: AstarLibrary.Core.StartType.Awake
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Awake
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\StartType.cs
        startLine: 13
      syntax:
        content:
          CSharp: Awake = 1
          VB: Awake = 1
        return:
          type: AstarLibrary.Core.StartType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.StartType.Enabled
      commentId: F:AstarLibrary.Core.StartType.Enabled
      language: CSharp
      name:
        CSharp: Enabled
        VB: Enabled
      nameWithType:
        CSharp: StartType.Enabled
        VB: StartType.Enabled
      qualifiedName:
        CSharp: AstarLibrary.Core.StartType.Enabled
        VB: AstarLibrary.Core.StartType.Enabled
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Enabled
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\StartType.cs
        startLine: 14
      syntax:
        content:
          CSharp: Enabled = 2
          VB: Enabled = 2
        return:
          type: AstarLibrary.Core.StartType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.StartType.Delayed
      commentId: F:AstarLibrary.Core.StartType.Delayed
      language: CSharp
      name:
        CSharp: Delayed
        VB: Delayed
      nameWithType:
        CSharp: StartType.Delayed
        VB: StartType.Delayed
      qualifiedName:
        CSharp: AstarLibrary.Core.StartType.Delayed
        VB: AstarLibrary.Core.StartType.Delayed
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Delayed
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Enums\StartType.cs
        startLine: 15
      syntax:
        content:
          CSharp: Delayed = 3
          VB: Delayed = 3
        return:
          type: AstarLibrary.Core.StartType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AstarLibrary.Core.ColorExtensions
    commentId: T:AstarLibrary.Core.ColorExtensions
    language: CSharp
    name:
      CSharp: ColorExtensions
      VB: ColorExtensions
    nameWithType:
      CSharp: ColorExtensions
      VB: ColorExtensions
    qualifiedName:
      CSharp: AstarLibrary.Core.ColorExtensions
      VB: AstarLibrary.Core.ColorExtensions
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: ColorExtensions
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\ColorExtensions.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public static class ColorExtensions
        VB: >-
          <Serializable>

          Public Module ColorExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: AstarLibrary.Core.ColorExtensions.FromHex(UnityEngine.Color,System.String)
      commentId: M:AstarLibrary.Core.ColorExtensions.FromHex(UnityEngine.Color,System.String)
      language: CSharp
      name:
        CSharp: FromHex(Color, String)
        VB: FromHex(Color, String)
      nameWithType:
        CSharp: ColorExtensions.FromHex(Color, String)
        VB: ColorExtensions.FromHex(Color, String)
      qualifiedName:
        CSharp: AstarLibrary.Core.ColorExtensions.FromHex(UnityEngine.Color, System.String)
        VB: AstarLibrary.Core.ColorExtensions.FromHex(UnityEngine.Color, System.String)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: FromHex
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\ColorExtensions.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static Color FromHex(this Color color, string hex)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FromHex(color As Color, hex As String) As Color
        parameters:
        - id: color
          type: UnityEngine.Color
        - id: hex
          type: System.String
        return:
          type: UnityEngine.Color
      overload: AstarLibrary.Core.ColorExtensions.FromHex*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AstarLibrary.Core.CoroutineExtensions
    commentId: T:AstarLibrary.Core.CoroutineExtensions
    language: CSharp
    name:
      CSharp: CoroutineExtensions
      VB: CoroutineExtensions
    nameWithType:
      CSharp: CoroutineExtensions
      VB: CoroutineExtensions
    qualifiedName:
      CSharp: AstarLibrary.Core.CoroutineExtensions
      VB: AstarLibrary.Core.CoroutineExtensions
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: CoroutineExtensions
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\CoroutineExtensions.cs
      startLine: 9
    syntax:
      content:
        CSharp: public static class CoroutineExtensions
        VB: Public Module CoroutineExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AstarLibrary.Core.CoroutineExtensions.Function
      commentId: F:AstarLibrary.Core.CoroutineExtensions.Function
      language: CSharp
      name:
        CSharp: Function
        VB: Function
      nameWithType:
        CSharp: CoroutineExtensions.Function
        VB: CoroutineExtensions.Function
      qualifiedName:
        CSharp: AstarLibrary.Core.CoroutineExtensions.Function
        VB: AstarLibrary.Core.CoroutineExtensions.Function
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Function
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\CoroutineExtensions.cs
        startLine: 12
      syntax:
        content:
          CSharp: public static IEnumerator Function
          VB: Public Shared Function As IEnumerator
        return:
          type: System.Collections.IEnumerator
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.CoroutineExtensions.Begin(UnityEngine.MonoBehaviour,System.Collections.IEnumerator)
      commentId: M:AstarLibrary.Core.CoroutineExtensions.Begin(UnityEngine.MonoBehaviour,System.Collections.IEnumerator)
      language: CSharp
      name:
        CSharp: Begin(MonoBehaviour, IEnumerator)
        VB: Begin(MonoBehaviour, IEnumerator)
      nameWithType:
        CSharp: CoroutineExtensions.Begin(MonoBehaviour, IEnumerator)
        VB: CoroutineExtensions.Begin(MonoBehaviour, IEnumerator)
      qualifiedName:
        CSharp: AstarLibrary.Core.CoroutineExtensions.Begin(UnityEngine.MonoBehaviour, System.Collections.IEnumerator)
        VB: AstarLibrary.Core.CoroutineExtensions.Begin(UnityEngine.MonoBehaviour, System.Collections.IEnumerator)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Begin
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\CoroutineExtensions.cs
        startLine: 16
      syntax:
        content:
          CSharp: public static Coroutine Begin(this MonoBehaviour mono, IEnumerator function)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Begin(mono As MonoBehaviour, function As IEnumerator) As Coroutine
        parameters:
        - id: mono
          type: UnityEngine.MonoBehaviour
        - id: function
          type: System.Collections.IEnumerator
        return:
          type: UnityEngine.Coroutine
      overload: AstarLibrary.Core.CoroutineExtensions.Begin*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.CoroutineExtensions.Pause(UnityEngine.MonoBehaviour)
      commentId: M:AstarLibrary.Core.CoroutineExtensions.Pause(UnityEngine.MonoBehaviour)
      language: CSharp
      name:
        CSharp: Pause(MonoBehaviour)
        VB: Pause(MonoBehaviour)
      nameWithType:
        CSharp: CoroutineExtensions.Pause(MonoBehaviour)
        VB: CoroutineExtensions.Pause(MonoBehaviour)
      qualifiedName:
        CSharp: AstarLibrary.Core.CoroutineExtensions.Pause(UnityEngine.MonoBehaviour)
        VB: AstarLibrary.Core.CoroutineExtensions.Pause(UnityEngine.MonoBehaviour)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Pause
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\CoroutineExtensions.cs
        startLine: 22
      syntax:
        content:
          CSharp: public static void Pause(this MonoBehaviour mono)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub Pause(mono As MonoBehaviour)
        parameters:
        - id: mono
          type: UnityEngine.MonoBehaviour
      overload: AstarLibrary.Core.CoroutineExtensions.Pause*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.CoroutineExtensions.Resume(UnityEngine.MonoBehaviour)
      commentId: M:AstarLibrary.Core.CoroutineExtensions.Resume(UnityEngine.MonoBehaviour)
      language: CSharp
      name:
        CSharp: Resume(MonoBehaviour)
        VB: Resume(MonoBehaviour)
      nameWithType:
        CSharp: CoroutineExtensions.Resume(MonoBehaviour)
        VB: CoroutineExtensions.Resume(MonoBehaviour)
      qualifiedName:
        CSharp: AstarLibrary.Core.CoroutineExtensions.Resume(UnityEngine.MonoBehaviour)
        VB: AstarLibrary.Core.CoroutineExtensions.Resume(UnityEngine.MonoBehaviour)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Resume
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\CoroutineExtensions.cs
        startLine: 30
      syntax:
        content:
          CSharp: public static void Resume(this MonoBehaviour mono)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub Resume(mono As MonoBehaviour)
        parameters:
        - id: mono
          type: UnityEngine.MonoBehaviour
      overload: AstarLibrary.Core.CoroutineExtensions.Resume*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AstarLibrary.Core.GameObjectExtensions
    commentId: T:AstarLibrary.Core.GameObjectExtensions
    language: CSharp
    name:
      CSharp: GameObjectExtensions
      VB: GameObjectExtensions
    nameWithType:
      CSharp: GameObjectExtensions
      VB: GameObjectExtensions
    qualifiedName:
      CSharp: AstarLibrary.Core.GameObjectExtensions
      VB: AstarLibrary.Core.GameObjectExtensions
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: GameObjectExtensions
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\GameObjectExtensions.cs
      startLine: 10
    syntax:
      content:
        CSharp: public static class GameObjectExtensions
        VB: Public Module GameObjectExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID(UnityEngine.GameObject,System.Int32)
      commentId: M:AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID(UnityEngine.GameObject,System.Int32)
      language: CSharp
      name:
        CSharp: FindObjectByInstanceID(GameObject, Int32)
        VB: FindObjectByInstanceID(GameObject, Int32)
      nameWithType:
        CSharp: GameObjectExtensions.FindObjectByInstanceID(GameObject, Int32)
        VB: GameObjectExtensions.FindObjectByInstanceID(GameObject, Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID(UnityEngine.GameObject, System.Int32)
        VB: AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID(UnityEngine.GameObject, System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: FindObjectByInstanceID
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\GameObjectExtensions.cs
        startLine: 19
      summary: "\nFind Object by Instance ID\n"
      example: []
      syntax:
        content:
          CSharp: public static GameObject FindObjectByInstanceID(this GameObject obj, int instanceID)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FindObjectByInstanceID(obj As GameObject, instanceID As Integer) As GameObject
        parameters:
        - id: obj
          type: UnityEngine.GameObject
          description: ''
        - id: instanceID
          type: System.Int32
          description: ''
        return:
          type: UnityEngine.GameObject
          description: ''
      overload: AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative(UnityEngine.GameObject,System.String)
      commentId: M:AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative(UnityEngine.GameObject,System.String)
      language: CSharp
      name:
        CSharp: FindInHierarchyInative(GameObject, String)
        VB: FindInHierarchyInative(GameObject, String)
      nameWithType:
        CSharp: GameObjectExtensions.FindInHierarchyInative(GameObject, String)
        VB: GameObjectExtensions.FindInHierarchyInative(GameObject, String)
      qualifiedName:
        CSharp: AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative(UnityEngine.GameObject, System.String)
        VB: AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative(UnityEngine.GameObject, System.String)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: FindInHierarchyInative
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\GameObjectExtensions.cs
        startLine: 37
      summary: "\nFind object not attach to script in hierarchy.\n"
      example: []
      syntax:
        content:
          CSharp: public static GameObject FindInHierarchyInative(this GameObject obj, string name)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FindInHierarchyInative(obj As GameObject, name As String) As GameObject
        parameters:
        - id: obj
          type: UnityEngine.GameObject
        - id: name
          type: System.String
          description: Name of object to be found on hierarchy.
        return:
          type: UnityEngine.GameObject
          description: The in hierarchy.
      overload: AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.GameObjectExtensions.GetChild``1(UnityEngine.GameObject,System.String)
      commentId: M:AstarLibrary.Core.GameObjectExtensions.GetChild``1(UnityEngine.GameObject,System.String)
      language: CSharp
      name:
        CSharp: GetChild<T>(GameObject, String)
        VB: GetChild(Of T)(GameObject, String)
      nameWithType:
        CSharp: GameObjectExtensions.GetChild<T>(GameObject, String)
        VB: GameObjectExtensions.GetChild(Of T)(GameObject, String)
      qualifiedName:
        CSharp: AstarLibrary.Core.GameObjectExtensions.GetChild<T>(UnityEngine.GameObject, System.String)
        VB: AstarLibrary.Core.GameObjectExtensions.GetChild(Of T)(UnityEngine.GameObject, System.String)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetChild
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\GameObjectExtensions.cs
        startLine: 54
      summary: "\nGet the child base on name\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static T GetChild<T>(this GameObject obj, string name)

                where T : Component
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetChild(Of T As Component)(obj As GameObject, name As String) As T
        parameters:
        - id: obj
          type: UnityEngine.GameObject
          description: ''
        - id: name
          type: System.String
          description: ''
        typeParameters:
        - id: T
          description: ''
        return:
          type: '{T}'
          description: ''
      overload: AstarLibrary.Core.GameObjectExtensions.GetChild*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.GameObjectExtensions.GetChild``1(UnityEngine.GameObject)
      commentId: M:AstarLibrary.Core.GameObjectExtensions.GetChild``1(UnityEngine.GameObject)
      language: CSharp
      name:
        CSharp: GetChild<T>(GameObject)
        VB: GetChild(Of T)(GameObject)
      nameWithType:
        CSharp: GameObjectExtensions.GetChild<T>(GameObject)
        VB: GameObjectExtensions.GetChild(Of T)(GameObject)
      qualifiedName:
        CSharp: AstarLibrary.Core.GameObjectExtensions.GetChild<T>(UnityEngine.GameObject)
        VB: AstarLibrary.Core.GameObjectExtensions.GetChild(Of T)(UnityEngine.GameObject)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetChild
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\GameObjectExtensions.cs
        startLine: 71
      summary: "\nGet the child base on name\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static T GetChild<T>(this GameObject obj)

                where T : Component
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetChild(Of T As Component)(obj As GameObject) As T
        parameters:
        - id: obj
          type: UnityEngine.GameObject
          description: ''
        typeParameters:
        - id: T
          description: ''
        return:
          type: '{T}'
          description: ''
      overload: AstarLibrary.Core.GameObjectExtensions.GetChild*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.GameObjectExtensions.GetFather(UnityEngine.GameObject,System.String)
      commentId: M:AstarLibrary.Core.GameObjectExtensions.GetFather(UnityEngine.GameObject,System.String)
      language: CSharp
      name:
        CSharp: GetFather(GameObject, String)
        VB: GetFather(GameObject, String)
      nameWithType:
        CSharp: GameObjectExtensions.GetFather(GameObject, String)
        VB: GameObjectExtensions.GetFather(GameObject, String)
      qualifiedName:
        CSharp: AstarLibrary.Core.GameObjectExtensions.GetFather(UnityEngine.GameObject, System.String)
        VB: AstarLibrary.Core.GameObjectExtensions.GetFather(UnityEngine.GameObject, System.String)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetFather
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\GameObjectExtensions.cs
        startLine: 83
      summary: "\nGets the father based on GameObject.\n"
      example: []
      syntax:
        content:
          CSharp: public static GameObject GetFather(this GameObject obj, string name)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetFather(obj As GameObject, name As String) As GameObject
        parameters:
        - id: obj
          type: UnityEngine.GameObject
          description: GameObject that contains father.
        - id: name
          type: System.String
          description: Name of the father to be found.
        return:
          type: UnityEngine.GameObject
          description: The father.
      overload: AstarLibrary.Core.GameObjectExtensions.GetFather*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.GameObjectExtensions.GetFather(UnityEngine.GameObject)
      commentId: M:AstarLibrary.Core.GameObjectExtensions.GetFather(UnityEngine.GameObject)
      language: CSharp
      name:
        CSharp: GetFather(GameObject)
        VB: GetFather(GameObject)
      nameWithType:
        CSharp: GameObjectExtensions.GetFather(GameObject)
        VB: GameObjectExtensions.GetFather(GameObject)
      qualifiedName:
        CSharp: AstarLibrary.Core.GameObjectExtensions.GetFather(UnityEngine.GameObject)
        VB: AstarLibrary.Core.GameObjectExtensions.GetFather(UnityEngine.GameObject)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetFather
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\GameObjectExtensions.cs
        startLine: 107
      summary: "\nGets the father by GameObject Only.\n"
      example: []
      syntax:
        content:
          CSharp: public static GameObject GetFather(this GameObject obj)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetFather(obj As GameObject) As GameObject
        parameters:
        - id: obj
          type: UnityEngine.GameObject
          description: Get&apos;s the first GameObject father of hierarchy
        return:
          type: UnityEngine.GameObject
          description: The father.
      overload: AstarLibrary.Core.GameObjectExtensions.GetFather*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.GameObjectExtensions.CopyComponent``1(UnityEngine.GameObject,``0)
      commentId: M:AstarLibrary.Core.GameObjectExtensions.CopyComponent``1(UnityEngine.GameObject,``0)
      language: CSharp
      name:
        CSharp: CopyComponent<T>(GameObject, T)
        VB: CopyComponent(Of T)(GameObject, T)
      nameWithType:
        CSharp: GameObjectExtensions.CopyComponent<T>(GameObject, T)
        VB: GameObjectExtensions.CopyComponent(Of T)(GameObject, T)
      qualifiedName:
        CSharp: AstarLibrary.Core.GameObjectExtensions.CopyComponent<T>(UnityEngine.GameObject, T)
        VB: AstarLibrary.Core.GameObjectExtensions.CopyComponent(Of T)(UnityEngine.GameObject, T)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: CopyComponent
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\GameObjectExtensions.cs
        startLine: 120
      summary: "\nCopy Component&apos;s\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static T CopyComponent<T>(this GameObject obj, T componente)

                where T : Component
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CopyComponent(Of T As Component)(obj As GameObject, componente As T) As T
        parameters:
        - id: obj
          type: UnityEngine.GameObject
        - id: componente
          type: '{T}'
          description: Component.
        typeParameters:
        - id: T
          description: Object.GetComponent(Typeof).
        return:
          type: '{T}'
          description: Copy selected component&apos;s.
      overload: AstarLibrary.Core.GameObjectExtensions.CopyComponent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.GameObjectExtensions.CopyComponent``1(UnityEngine.GameObject,UnityEngine.GameObject,``0)
      commentId: M:AstarLibrary.Core.GameObjectExtensions.CopyComponent``1(UnityEngine.GameObject,UnityEngine.GameObject,``0)
      language: CSharp
      name:
        CSharp: CopyComponent<T>(GameObject, GameObject, T)
        VB: CopyComponent(Of T)(GameObject, GameObject, T)
      nameWithType:
        CSharp: GameObjectExtensions.CopyComponent<T>(GameObject, GameObject, T)
        VB: GameObjectExtensions.CopyComponent(Of T)(GameObject, GameObject, T)
      qualifiedName:
        CSharp: AstarLibrary.Core.GameObjectExtensions.CopyComponent<T>(UnityEngine.GameObject, UnityEngine.GameObject, T)
        VB: AstarLibrary.Core.GameObjectExtensions.CopyComponent(Of T)(UnityEngine.GameObject, UnityEngine.GameObject, T)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: CopyComponent
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\GameObjectExtensions.cs
        startLine: 139
      summary: "\nCopy Component&apos;s\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static T CopyComponent<T>(this GameObject obj, GameObject destiny, T componente)

                where T : Component
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CopyComponent(Of T As Component)(obj As GameObject, destiny As GameObject, componente As T) As T
        parameters:
        - id: obj
          type: UnityEngine.GameObject
        - id: destiny
          type: UnityEngine.GameObject
          description: Game object to Paste.
        - id: componente
          type: '{T}'
          description: Component.
        typeParameters:
        - id: T
          description: Object.GetComponent(Typeof).
        return:
          type: '{T}'
          description: Copy selected component&apos;s.
      overload: AstarLibrary.Core.GameObjectExtensions.CopyComponent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AstarLibrary.Core.InterfaceExtensions
    commentId: T:AstarLibrary.Core.InterfaceExtensions
    language: CSharp
    name:
      CSharp: InterfaceExtensions
      VB: InterfaceExtensions
    nameWithType:
      CSharp: InterfaceExtensions
      VB: InterfaceExtensions
    qualifiedName:
      CSharp: AstarLibrary.Core.InterfaceExtensions
      VB: AstarLibrary.Core.InterfaceExtensions
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: InterfaceExtensions
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\InterfaceExtensions.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public static class InterfaceExtensions
        VB: >-
          <Serializable>

          Public Module InterfaceExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Slider,System.Single)
      commentId: M:AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Slider,System.Single)
      language: CSharp
      name:
        CSharp: SetValue(Slider, Single)
        VB: SetValue(Slider, Single)
      nameWithType:
        CSharp: InterfaceExtensions.SetValue(Slider, Single)
        VB: InterfaceExtensions.SetValue(Slider, Single)
      qualifiedName:
        CSharp: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Slider, System.Single)
        VB: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Slider, System.Single)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\InterfaceExtensions.cs
        startLine: 17
      syntax:
        content:
          CSharp: public static void SetValue(this Slider instance, float value)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetValue(instance As Slider, value As Single)
        parameters:
        - id: instance
          type: UnityEngine.UI.Slider
        - id: value
          type: System.Single
      overload: AstarLibrary.Core.InterfaceExtensions.SetValue*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Toggle,System.Boolean)
      commentId: M:AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Toggle,System.Boolean)
      language: CSharp
      name:
        CSharp: SetValue(Toggle, Boolean)
        VB: SetValue(Toggle, Boolean)
      nameWithType:
        CSharp: InterfaceExtensions.SetValue(Toggle, Boolean)
        VB: InterfaceExtensions.SetValue(Toggle, Boolean)
      qualifiedName:
        CSharp: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Toggle, System.Boolean)
        VB: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Toggle, System.Boolean)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\InterfaceExtensions.cs
        startLine: 26
      syntax:
        content:
          CSharp: public static void SetValue(this Toggle instance, bool value)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetValue(instance As Toggle, value As Boolean)
        parameters:
        - id: instance
          type: UnityEngine.UI.Toggle
        - id: value
          type: System.Boolean
      overload: AstarLibrary.Core.InterfaceExtensions.SetValue*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.InputField,System.String)
      commentId: M:AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.InputField,System.String)
      language: CSharp
      name:
        CSharp: SetValue(InputField, String)
        VB: SetValue(InputField, String)
      nameWithType:
        CSharp: InterfaceExtensions.SetValue(InputField, String)
        VB: InterfaceExtensions.SetValue(InputField, String)
      qualifiedName:
        CSharp: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.InputField, System.String)
        VB: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.InputField, System.String)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\InterfaceExtensions.cs
        startLine: 35
      syntax:
        content:
          CSharp: public static void SetValue(this InputField instance, string value)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetValue(instance As InputField, value As String)
        parameters:
        - id: instance
          type: UnityEngine.UI.InputField
        - id: value
          type: System.String
      overload: AstarLibrary.Core.InterfaceExtensions.SetValue*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Dropdown,System.Int32)
      commentId: M:AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Dropdown,System.Int32)
      language: CSharp
      name:
        CSharp: SetValue(Dropdown, Int32)
        VB: SetValue(Dropdown, Int32)
      nameWithType:
        CSharp: InterfaceExtensions.SetValue(Dropdown, Int32)
        VB: InterfaceExtensions.SetValue(Dropdown, Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Dropdown, System.Int32)
        VB: AstarLibrary.Core.InterfaceExtensions.SetValue(UnityEngine.UI.Dropdown, System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\InterfaceExtensions.cs
        startLine: 44
      syntax:
        content:
          CSharp: public static void SetValue(this Dropdown instance, int value)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetValue(instance As Dropdown, value As Integer)
        parameters:
        - id: instance
          type: UnityEngine.UI.Dropdown
        - id: value
          type: System.Int32
      overload: AstarLibrary.Core.InterfaceExtensions.SetValue*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AstarLibrary.Core.IntExtensions
    commentId: T:AstarLibrary.Core.IntExtensions
    language: CSharp
    name:
      CSharp: IntExtensions
      VB: IntExtensions
    nameWithType:
      CSharp: IntExtensions
      VB: IntExtensions
    qualifiedName:
      CSharp: AstarLibrary.Core.IntExtensions
      VB: AstarLibrary.Core.IntExtensions
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: IntExtensions
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\IntExtensions.cs
      startLine: 8
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public static class IntExtensions
        VB: >-
          <Serializable>

          Public Module IntExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: AstarLibrary.Core.IntExtensions.GFC(System.Int32,System.Int32)
      commentId: M:AstarLibrary.Core.IntExtensions.GFC(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: GFC(Int32, Int32)
        VB: GFC(Int32, Int32)
      nameWithType:
        CSharp: IntExtensions.GFC(Int32, Int32)
        VB: IntExtensions.GFC(Int32, Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.IntExtensions.GFC(System.Int32, System.Int32)
        VB: AstarLibrary.Core.IntExtensions.GFC(System.Int32, System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GFC
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\IntExtensions.cs
        startLine: 19
      summary: "\nGreate Factoryal Common\n"
      example: []
      syntax:
        content:
          CSharp: public static int GFC(this int a, int b)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GFC(a As Integer, b As Integer) As Integer
        parameters:
        - id: a
          type: System.Int32
          description: ''
        - id: b
          type: System.Int32
          description: ''
        return:
          type: System.Int32
          description: ''
      overload: AstarLibrary.Core.IntExtensions.GFC*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.IntExtensions.MMC(System.Int32,System.Int32)
      commentId: M:AstarLibrary.Core.IntExtensions.MMC(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: MMC(Int32, Int32)
        VB: MMC(Int32, Int32)
      nameWithType:
        CSharp: IntExtensions.MMC(Int32, Int32)
        VB: IntExtensions.MMC(Int32, Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.IntExtensions.MMC(System.Int32, System.Int32)
        VB: AstarLibrary.Core.IntExtensions.MMC(System.Int32, System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: MMC
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\IntExtensions.cs
        startLine: 35
      summary: "\nMinimum Multiple Common\n"
      example: []
      syntax:
        content:
          CSharp: public static int MMC(this int a, int b)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function MMC(a As Integer, b As Integer) As Integer
        parameters:
        - id: a
          type: System.Int32
          description: ''
        - id: b
          type: System.Int32
          description: ''
        return:
          type: System.Int32
          description: ''
      overload: AstarLibrary.Core.IntExtensions.MMC*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AstarLibrary.Core.RectTransformExtensions
    commentId: T:AstarLibrary.Core.RectTransformExtensions
    language: CSharp
    name:
      CSharp: RectTransformExtensions
      VB: RectTransformExtensions
    nameWithType:
      CSharp: RectTransformExtensions
      VB: RectTransformExtensions
    qualifiedName:
      CSharp: AstarLibrary.Core.RectTransformExtensions
      VB: AstarLibrary.Core.RectTransformExtensions
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: RectTransformExtensions
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
      startLine: 9
    syntax:
      content:
        CSharp: public static class RectTransformExtensions
        VB: Public Module RectTransformExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.GetAnchorType(UnityEngine.RectTransform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.GetAnchorType(UnityEngine.RectTransform)
      language: CSharp
      name:
        CSharp: GetAnchorType(RectTransform)
        VB: GetAnchorType(RectTransform)
      nameWithType:
        CSharp: RectTransformExtensions.GetAnchorType(RectTransform)
        VB: RectTransformExtensions.GetAnchorType(RectTransform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.GetAnchorType(UnityEngine.RectTransform)
        VB: AstarLibrary.Core.RectTransformExtensions.GetAnchorType(UnityEngine.RectTransform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetAnchorType
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 12
      syntax:
        content:
          CSharp: public static RectTransformExtensions.AnchorType GetAnchorType(this RectTransform rect)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetAnchorType(rect As RectTransform) As RectTransformExtensions.AnchorType
        parameters:
        - id: rect
          type: UnityEngine.RectTransform
        return:
          type: AstarLibrary.Core.RectTransformExtensions.AnchorType
      overload: AstarLibrary.Core.RectTransformExtensions.GetAnchorType*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.AnchorToCorners(UnityEngine.RectTransform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.AnchorToCorners(UnityEngine.RectTransform)
      language: CSharp
      name:
        CSharp: AnchorToCorners(RectTransform)
        VB: AnchorToCorners(RectTransform)
      nameWithType:
        CSharp: RectTransformExtensions.AnchorToCorners(RectTransform)
        VB: RectTransformExtensions.AnchorToCorners(RectTransform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.AnchorToCorners(UnityEngine.RectTransform)
        VB: AstarLibrary.Core.RectTransformExtensions.AnchorToCorners(UnityEngine.RectTransform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: AnchorToCorners
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 31
      syntax:
        content:
          CSharp: public static void AnchorToCorners(this RectTransform transform)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub AnchorToCorners(transform As RectTransform)
        parameters:
        - id: transform
          type: UnityEngine.RectTransform
      overload: AstarLibrary.Core.RectTransformExtensions.AnchorToCorners*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors(UnityEngine.RectTransform,UnityEngine.Vector2)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors(UnityEngine.RectTransform,UnityEngine.Vector2)
      language: CSharp
      name:
        CSharp: SetPivotAndAnchors(RectTransform, Vector2)
        VB: SetPivotAndAnchors(RectTransform, Vector2)
      nameWithType:
        CSharp: RectTransformExtensions.SetPivotAndAnchors(RectTransform, Vector2)
        VB: RectTransformExtensions.SetPivotAndAnchors(RectTransform, Vector2)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors(UnityEngine.RectTransform, UnityEngine.Vector2)
        VB: AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors(UnityEngine.RectTransform, UnityEngine.Vector2)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetPivotAndAnchors
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 51
      syntax:
        content:
          CSharp: public static void SetPivotAndAnchors(this RectTransform trans, Vector2 aVec)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetPivotAndAnchors(trans As RectTransform, aVec As Vector2)
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        - id: aVec
          type: UnityEngine.Vector2
      overload: AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.GetSize(UnityEngine.RectTransform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.GetSize(UnityEngine.RectTransform)
      language: CSharp
      name:
        CSharp: GetSize(RectTransform)
        VB: GetSize(RectTransform)
      nameWithType:
        CSharp: RectTransformExtensions.GetSize(RectTransform)
        VB: RectTransformExtensions.GetSize(RectTransform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.GetSize(UnityEngine.RectTransform)
        VB: AstarLibrary.Core.RectTransformExtensions.GetSize(UnityEngine.RectTransform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetSize
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 57
      syntax:
        content:
          CSharp: public static Vector2 GetSize(this RectTransform trans)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetSize(trans As RectTransform) As Vector2
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        return:
          type: UnityEngine.Vector2
      overload: AstarLibrary.Core.RectTransformExtensions.GetSize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.GetWidth(UnityEngine.RectTransform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.GetWidth(UnityEngine.RectTransform)
      language: CSharp
      name:
        CSharp: GetWidth(RectTransform)
        VB: GetWidth(RectTransform)
      nameWithType:
        CSharp: RectTransformExtensions.GetWidth(RectTransform)
        VB: RectTransformExtensions.GetWidth(RectTransform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.GetWidth(UnityEngine.RectTransform)
        VB: AstarLibrary.Core.RectTransformExtensions.GetWidth(UnityEngine.RectTransform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetWidth
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 61
      syntax:
        content:
          CSharp: public static float GetWidth(this RectTransform trans)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetWidth(trans As RectTransform) As Single
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        return:
          type: System.Single
      overload: AstarLibrary.Core.RectTransformExtensions.GetWidth*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.GetHeight(UnityEngine.RectTransform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.GetHeight(UnityEngine.RectTransform)
      language: CSharp
      name:
        CSharp: GetHeight(RectTransform)
        VB: GetHeight(RectTransform)
      nameWithType:
        CSharp: RectTransformExtensions.GetHeight(RectTransform)
        VB: RectTransformExtensions.GetHeight(RectTransform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.GetHeight(UnityEngine.RectTransform)
        VB: AstarLibrary.Core.RectTransformExtensions.GetHeight(UnityEngine.RectTransform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetHeight
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 65
      syntax:
        content:
          CSharp: public static float GetHeight(this RectTransform trans)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetHeight(trans As RectTransform) As Single
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        return:
          type: System.Single
      overload: AstarLibrary.Core.RectTransformExtensions.GetHeight*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.GetLeft(UnityEngine.RectTransform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.GetLeft(UnityEngine.RectTransform)
      language: CSharp
      name:
        CSharp: GetLeft(RectTransform)
        VB: GetLeft(RectTransform)
      nameWithType:
        CSharp: RectTransformExtensions.GetLeft(RectTransform)
        VB: RectTransformExtensions.GetLeft(RectTransform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.GetLeft(UnityEngine.RectTransform)
        VB: AstarLibrary.Core.RectTransformExtensions.GetLeft(UnityEngine.RectTransform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetLeft
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 69
      syntax:
        content:
          CSharp: public static float GetLeft(this RectTransform trans)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetLeft(trans As RectTransform) As Single
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        return:
          type: System.Single
      overload: AstarLibrary.Core.RectTransformExtensions.GetLeft*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.GetRight(UnityEngine.RectTransform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.GetRight(UnityEngine.RectTransform)
      language: CSharp
      name:
        CSharp: GetRight(RectTransform)
        VB: GetRight(RectTransform)
      nameWithType:
        CSharp: RectTransformExtensions.GetRight(RectTransform)
        VB: RectTransformExtensions.GetRight(RectTransform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.GetRight(UnityEngine.RectTransform)
        VB: AstarLibrary.Core.RectTransformExtensions.GetRight(UnityEngine.RectTransform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetRight
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 73
      syntax:
        content:
          CSharp: public static float GetRight(this RectTransform trans)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetRight(trans As RectTransform) As Single
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        return:
          type: System.Single
      overload: AstarLibrary.Core.RectTransformExtensions.GetRight*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.GetTop(UnityEngine.RectTransform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.GetTop(UnityEngine.RectTransform)
      language: CSharp
      name:
        CSharp: GetTop(RectTransform)
        VB: GetTop(RectTransform)
      nameWithType:
        CSharp: RectTransformExtensions.GetTop(RectTransform)
        VB: RectTransformExtensions.GetTop(RectTransform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.GetTop(UnityEngine.RectTransform)
        VB: AstarLibrary.Core.RectTransformExtensions.GetTop(UnityEngine.RectTransform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetTop
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 77
      syntax:
        content:
          CSharp: public static float GetTop(this RectTransform trans)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetTop(trans As RectTransform) As Single
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        return:
          type: System.Single
      overload: AstarLibrary.Core.RectTransformExtensions.GetTop*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.GetBottom(UnityEngine.RectTransform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.GetBottom(UnityEngine.RectTransform)
      language: CSharp
      name:
        CSharp: GetBottom(RectTransform)
        VB: GetBottom(RectTransform)
      nameWithType:
        CSharp: RectTransformExtensions.GetBottom(RectTransform)
        VB: RectTransformExtensions.GetBottom(RectTransform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.GetBottom(UnityEngine.RectTransform)
        VB: AstarLibrary.Core.RectTransformExtensions.GetBottom(UnityEngine.RectTransform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetBottom
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 81
      syntax:
        content:
          CSharp: public static float GetBottom(this RectTransform trans)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetBottom(trans As RectTransform) As Single
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        return:
          type: System.Single
      overload: AstarLibrary.Core.RectTransformExtensions.GetBottom*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.SetSize(UnityEngine.RectTransform,UnityEngine.Vector2)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.SetSize(UnityEngine.RectTransform,UnityEngine.Vector2)
      language: CSharp
      name:
        CSharp: SetSize(RectTransform, Vector2)
        VB: SetSize(RectTransform, Vector2)
      nameWithType:
        CSharp: RectTransformExtensions.SetSize(RectTransform, Vector2)
        VB: RectTransformExtensions.SetSize(RectTransform, Vector2)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.SetSize(UnityEngine.RectTransform, UnityEngine.Vector2)
        VB: AstarLibrary.Core.RectTransformExtensions.SetSize(UnityEngine.RectTransform, UnityEngine.Vector2)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetSize
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 85
      syntax:
        content:
          CSharp: public static void SetSize(this RectTransform trans, Vector2 newSize)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetSize(trans As RectTransform, newSize As Vector2)
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        - id: newSize
          type: UnityEngine.Vector2
      overload: AstarLibrary.Core.RectTransformExtensions.SetSize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.SetWidth(UnityEngine.RectTransform,System.Single)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.SetWidth(UnityEngine.RectTransform,System.Single)
      language: CSharp
      name:
        CSharp: SetWidth(RectTransform, Single)
        VB: SetWidth(RectTransform, Single)
      nameWithType:
        CSharp: RectTransformExtensions.SetWidth(RectTransform, Single)
        VB: RectTransformExtensions.SetWidth(RectTransform, Single)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.SetWidth(UnityEngine.RectTransform, System.Single)
        VB: AstarLibrary.Core.RectTransformExtensions.SetWidth(UnityEngine.RectTransform, System.Single)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetWidth
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 92
      syntax:
        content:
          CSharp: public static void SetWidth(this RectTransform trans, float newSize)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetWidth(trans As RectTransform, newSize As Single)
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        - id: newSize
          type: System.Single
      overload: AstarLibrary.Core.RectTransformExtensions.SetWidth*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.SetHeight(UnityEngine.RectTransform,System.Single)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.SetHeight(UnityEngine.RectTransform,System.Single)
      language: CSharp
      name:
        CSharp: SetHeight(RectTransform, Single)
        VB: SetHeight(RectTransform, Single)
      nameWithType:
        CSharp: RectTransformExtensions.SetHeight(RectTransform, Single)
        VB: RectTransformExtensions.SetHeight(RectTransform, Single)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.SetHeight(UnityEngine.RectTransform, System.Single)
        VB: AstarLibrary.Core.RectTransformExtensions.SetHeight(UnityEngine.RectTransform, System.Single)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetHeight
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 96
      syntax:
        content:
          CSharp: public static void SetHeight(this RectTransform trans, float newSize)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetHeight(trans As RectTransform, newSize As Single)
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        - id: newSize
          type: System.Single
      overload: AstarLibrary.Core.RectTransformExtensions.SetHeight*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition(UnityEngine.RectTransform,UnityEngine.Vector2)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition(UnityEngine.RectTransform,UnityEngine.Vector2)
      language: CSharp
      name:
        CSharp: SetBottomLeftPosition(RectTransform, Vector2)
        VB: SetBottomLeftPosition(RectTransform, Vector2)
      nameWithType:
        CSharp: RectTransformExtensions.SetBottomLeftPosition(RectTransform, Vector2)
        VB: RectTransformExtensions.SetBottomLeftPosition(RectTransform, Vector2)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition(UnityEngine.RectTransform, UnityEngine.Vector2)
        VB: AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition(UnityEngine.RectTransform, UnityEngine.Vector2)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetBottomLeftPosition
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 100
      syntax:
        content:
          CSharp: public static void SetBottomLeftPosition(this RectTransform trans, Vector2 newPos)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetBottomLeftPosition(trans As RectTransform, newPos As Vector2)
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        - id: newPos
          type: UnityEngine.Vector2
      overload: AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition(UnityEngine.RectTransform,UnityEngine.Vector2)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition(UnityEngine.RectTransform,UnityEngine.Vector2)
      language: CSharp
      name:
        CSharp: SetTopLeftPosition(RectTransform, Vector2)
        VB: SetTopLeftPosition(RectTransform, Vector2)
      nameWithType:
        CSharp: RectTransformExtensions.SetTopLeftPosition(RectTransform, Vector2)
        VB: RectTransformExtensions.SetTopLeftPosition(RectTransform, Vector2)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition(UnityEngine.RectTransform, UnityEngine.Vector2)
        VB: AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition(UnityEngine.RectTransform, UnityEngine.Vector2)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetTopLeftPosition
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 104
      syntax:
        content:
          CSharp: public static void SetTopLeftPosition(this RectTransform trans, Vector2 newPos)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetTopLeftPosition(trans As RectTransform, newPos As Vector2)
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        - id: newPos
          type: UnityEngine.Vector2
      overload: AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition(UnityEngine.RectTransform,UnityEngine.Vector2)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition(UnityEngine.RectTransform,UnityEngine.Vector2)
      language: CSharp
      name:
        CSharp: SetBottomRightPosition(RectTransform, Vector2)
        VB: SetBottomRightPosition(RectTransform, Vector2)
      nameWithType:
        CSharp: RectTransformExtensions.SetBottomRightPosition(RectTransform, Vector2)
        VB: RectTransformExtensions.SetBottomRightPosition(RectTransform, Vector2)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition(UnityEngine.RectTransform, UnityEngine.Vector2)
        VB: AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition(UnityEngine.RectTransform, UnityEngine.Vector2)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetBottomRightPosition
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 108
      syntax:
        content:
          CSharp: public static void SetBottomRightPosition(this RectTransform trans, Vector2 newPos)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetBottomRightPosition(trans As RectTransform, newPos As Vector2)
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        - id: newPos
          type: UnityEngine.Vector2
      overload: AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition(UnityEngine.RectTransform,UnityEngine.Vector2)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition(UnityEngine.RectTransform,UnityEngine.Vector2)
      language: CSharp
      name:
        CSharp: SetRightTopPosition(RectTransform, Vector2)
        VB: SetRightTopPosition(RectTransform, Vector2)
      nameWithType:
        CSharp: RectTransformExtensions.SetRightTopPosition(RectTransform, Vector2)
        VB: RectTransformExtensions.SetRightTopPosition(RectTransform, Vector2)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition(UnityEngine.RectTransform, UnityEngine.Vector2)
        VB: AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition(UnityEngine.RectTransform, UnityEngine.Vector2)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetRightTopPosition
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 112
      syntax:
        content:
          CSharp: public static void SetRightTopPosition(this RectTransform trans, Vector2 newPos)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetRightTopPosition(trans As RectTransform, newPos As Vector2)
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        - id: newPos
          type: UnityEngine.Vector2
      overload: AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas(UnityEngine.RectTransform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas(UnityEngine.RectTransform)
      language: CSharp
      name:
        CSharp: GetTopRectTransformOfCanvas(RectTransform)
        VB: GetTopRectTransformOfCanvas(RectTransform)
      nameWithType:
        CSharp: RectTransformExtensions.GetTopRectTransformOfCanvas(RectTransform)
        VB: RectTransformExtensions.GetTopRectTransformOfCanvas(RectTransform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas(UnityEngine.RectTransform)
        VB: AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas(UnityEngine.RectTransform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetTopRectTransformOfCanvas
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 116
      syntax:
        content:
          CSharp: public static RectTransform GetTopRectTransformOfCanvas(this RectTransform trans)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetTopRectTransformOfCanvas(trans As RectTransform) As RectTransform
        parameters:
        - id: trans
          type: UnityEngine.RectTransform
        return:
          type: UnityEngine.RectTransform
      overload: AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched(UnityEngine.RectTransform,AstarLibrary.Core.RectTransformExtensions.RectSide,System.Single)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched(UnityEngine.RectTransform,AstarLibrary.Core.RectTransformExtensions.RectSide,System.Single)
      language: CSharp
      name:
        CSharp: ChangeRectStretched(RectTransform, RectTransformExtensions.RectSide, Single)
        VB: ChangeRectStretched(RectTransform, RectTransformExtensions.RectSide, Single)
      nameWithType:
        CSharp: RectTransformExtensions.ChangeRectStretched(RectTransform, RectTransformExtensions.RectSide, Single)
        VB: RectTransformExtensions.ChangeRectStretched(RectTransform, RectTransformExtensions.RectSide, Single)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched(UnityEngine.RectTransform, AstarLibrary.Core.RectTransformExtensions.RectSide, System.Single)
        VB: AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched(UnityEngine.RectTransform, AstarLibrary.Core.RectTransformExtensions.RectSide, System.Single)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: ChangeRectStretched
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 123
      syntax:
        content:
          CSharp: public static RectTransform ChangeRectStretched(this RectTransform obj, RectTransformExtensions.RectSide side, float number)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ChangeRectStretched(obj As RectTransform, side As RectTransformExtensions.RectSide, number As Single) As RectTransform
        parameters:
        - id: obj
          type: UnityEngine.RectTransform
        - id: side
          type: AstarLibrary.Core.RectTransformExtensions.RectSide
        - id: number
          type: System.Single
        return:
          type: UnityEngine.RectTransform
      overload: AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.RectTransformExtensions.FindComponentInParents``1(UnityEngine.Transform)
      commentId: M:AstarLibrary.Core.RectTransformExtensions.FindComponentInParents``1(UnityEngine.Transform)
      language: CSharp
      name:
        CSharp: FindComponentInParents<T>(Transform)
        VB: FindComponentInParents(Of T)(Transform)
      nameWithType:
        CSharp: RectTransformExtensions.FindComponentInParents<T>(Transform)
        VB: RectTransformExtensions.FindComponentInParents(Of T)(Transform)
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.FindComponentInParents<T>(UnityEngine.Transform)
        VB: AstarLibrary.Core.RectTransformExtensions.FindComponentInParents(Of T)(UnityEngine.Transform)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: FindComponentInParents
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 146
      syntax:
        content:
          CSharp: >-
            public static T FindComponentInParents<T>(this Transform transform)

                where T : Component
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FindComponentInParents(Of T As Component)(transform As Transform) As T
        parameters:
        - id: transform
          type: UnityEngine.Transform
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: AstarLibrary.Core.RectTransformExtensions.FindComponentInParents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AstarLibrary.Core.RectTransformExtensions.AnchorType
    commentId: T:AstarLibrary.Core.RectTransformExtensions.AnchorType
    language: CSharp
    name:
      CSharp: RectTransformExtensions.AnchorType
      VB: RectTransformExtensions.AnchorType
    nameWithType:
      CSharp: RectTransformExtensions.AnchorType
      VB: RectTransformExtensions.AnchorType
    qualifiedName:
      CSharp: AstarLibrary.Core.RectTransformExtensions.AnchorType
      VB: AstarLibrary.Core.RectTransformExtensions.AnchorType
    type: Enum
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: AnchorType
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
      startLine: 163
    syntax:
      content:
        CSharp: public enum AnchorType
        VB: Public Enum AnchorType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AstarLibrary.Core.RectTransformExtensions.AnchorType.Normal
      commentId: F:AstarLibrary.Core.RectTransformExtensions.AnchorType.Normal
      language: CSharp
      name:
        CSharp: Normal
        VB: Normal
      nameWithType:
        CSharp: RectTransformExtensions.AnchorType.Normal
        VB: RectTransformExtensions.AnchorType.Normal
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.AnchorType.Normal
        VB: AstarLibrary.Core.RectTransformExtensions.AnchorType.Normal
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Normal
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 165
      syntax:
        content:
          CSharp: Normal = 0
          VB: Normal = 0
        return:
          type: AstarLibrary.Core.RectTransformExtensions.AnchorType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.RectTransformExtensions.AnchorType.Fullscale
      commentId: F:AstarLibrary.Core.RectTransformExtensions.AnchorType.Fullscale
      language: CSharp
      name:
        CSharp: Fullscale
        VB: Fullscale
      nameWithType:
        CSharp: RectTransformExtensions.AnchorType.Fullscale
        VB: RectTransformExtensions.AnchorType.Fullscale
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.AnchorType.Fullscale
        VB: AstarLibrary.Core.RectTransformExtensions.AnchorType.Fullscale
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Fullscale
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 166
      syntax:
        content:
          CSharp: Fullscale = 1
          VB: Fullscale = 1
        return:
          type: AstarLibrary.Core.RectTransformExtensions.AnchorType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.RectTransformExtensions.AnchorType.StrechHorizontal
      commentId: F:AstarLibrary.Core.RectTransformExtensions.AnchorType.StrechHorizontal
      language: CSharp
      name:
        CSharp: StrechHorizontal
        VB: StrechHorizontal
      nameWithType:
        CSharp: RectTransformExtensions.AnchorType.StrechHorizontal
        VB: RectTransformExtensions.AnchorType.StrechHorizontal
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.AnchorType.StrechHorizontal
        VB: AstarLibrary.Core.RectTransformExtensions.AnchorType.StrechHorizontal
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: StrechHorizontal
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 167
      syntax:
        content:
          CSharp: StrechHorizontal = 2
          VB: StrechHorizontal = 2
        return:
          type: AstarLibrary.Core.RectTransformExtensions.AnchorType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.RectTransformExtensions.AnchorType.StrechVertical
      commentId: F:AstarLibrary.Core.RectTransformExtensions.AnchorType.StrechVertical
      language: CSharp
      name:
        CSharp: StrechVertical
        VB: StrechVertical
      nameWithType:
        CSharp: RectTransformExtensions.AnchorType.StrechVertical
        VB: RectTransformExtensions.AnchorType.StrechVertical
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.AnchorType.StrechVertical
        VB: AstarLibrary.Core.RectTransformExtensions.AnchorType.StrechVertical
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: StrechVertical
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 168
      syntax:
        content:
          CSharp: StrechVertical = 3
          VB: StrechVertical = 3
        return:
          type: AstarLibrary.Core.RectTransformExtensions.AnchorType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AstarLibrary.Core.RectTransformExtensions.RectSide
    commentId: T:AstarLibrary.Core.RectTransformExtensions.RectSide
    language: CSharp
    name:
      CSharp: RectTransformExtensions.RectSide
      VB: RectTransformExtensions.RectSide
    nameWithType:
      CSharp: RectTransformExtensions.RectSide
      VB: RectTransformExtensions.RectSide
    qualifiedName:
      CSharp: AstarLibrary.Core.RectTransformExtensions.RectSide
      VB: AstarLibrary.Core.RectTransformExtensions.RectSide
    type: Enum
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: RectSide
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
      startLine: 170
    syntax:
      content:
        CSharp: public enum RectSide
        VB: Public Enum RectSide
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AstarLibrary.Core.RectTransformExtensions.RectSide.Left
      commentId: F:AstarLibrary.Core.RectTransformExtensions.RectSide.Left
      language: CSharp
      name:
        CSharp: Left
        VB: Left
      nameWithType:
        CSharp: RectTransformExtensions.RectSide.Left
        VB: RectTransformExtensions.RectSide.Left
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.RectSide.Left
        VB: AstarLibrary.Core.RectTransformExtensions.RectSide.Left
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Left
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 172
      syntax:
        content:
          CSharp: Left = 0
          VB: Left = 0
        return:
          type: AstarLibrary.Core.RectTransformExtensions.RectSide
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.RectTransformExtensions.RectSide.Right
      commentId: F:AstarLibrary.Core.RectTransformExtensions.RectSide.Right
      language: CSharp
      name:
        CSharp: Right
        VB: Right
      nameWithType:
        CSharp: RectTransformExtensions.RectSide.Right
        VB: RectTransformExtensions.RectSide.Right
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.RectSide.Right
        VB: AstarLibrary.Core.RectTransformExtensions.RectSide.Right
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Right
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 173
      syntax:
        content:
          CSharp: Right = 1
          VB: Right = 1
        return:
          type: AstarLibrary.Core.RectTransformExtensions.RectSide
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.RectTransformExtensions.RectSide.Top
      commentId: F:AstarLibrary.Core.RectTransformExtensions.RectSide.Top
      language: CSharp
      name:
        CSharp: Top
        VB: Top
      nameWithType:
        CSharp: RectTransformExtensions.RectSide.Top
        VB: RectTransformExtensions.RectSide.Top
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.RectSide.Top
        VB: AstarLibrary.Core.RectTransformExtensions.RectSide.Top
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Top
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 174
      syntax:
        content:
          CSharp: Top = 2
          VB: Top = 2
        return:
          type: AstarLibrary.Core.RectTransformExtensions.RectSide
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AstarLibrary.Core.RectTransformExtensions.RectSide.Bottom
      commentId: F:AstarLibrary.Core.RectTransformExtensions.RectSide.Bottom
      language: CSharp
      name:
        CSharp: Bottom
        VB: Bottom
      nameWithType:
        CSharp: RectTransformExtensions.RectSide.Bottom
        VB: RectTransformExtensions.RectSide.Bottom
      qualifiedName:
        CSharp: AstarLibrary.Core.RectTransformExtensions.RectSide.Bottom
        VB: AstarLibrary.Core.RectTransformExtensions.RectSide.Bottom
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Bottom
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\RectTransformExtensions.cs
        startLine: 175
      syntax:
        content:
          CSharp: Bottom = 3
          VB: Bottom = 3
        return:
          type: AstarLibrary.Core.RectTransformExtensions.RectSide
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AstarLibrary.Core.SerializableDictionaryBase
    commentId: T:AstarLibrary.Core.SerializableDictionaryBase
    language: CSharp
    name:
      CSharp: SerializableDictionaryBase
      VB: SerializableDictionaryBase
    nameWithType:
      CSharp: SerializableDictionaryBase
      VB: SerializableDictionaryBase
    qualifiedName:
      CSharp: AstarLibrary.Core.SerializableDictionaryBase
      VB: AstarLibrary.Core.SerializableDictionaryBase
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: SerializableDictionaryBase
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
      startLine: 12
    syntax:
      content:
        CSharp: public abstract class SerializableDictionaryBase
        VB: Public MustInherit Class SerializableDictionaryBase
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items: []
  - id: AstarLibrary.Core.SerializableDictionaryBase.Storage
    commentId: T:AstarLibrary.Core.SerializableDictionaryBase.Storage
    language: CSharp
    name:
      CSharp: SerializableDictionaryBase.Storage
      VB: SerializableDictionaryBase.Storage
    nameWithType:
      CSharp: SerializableDictionaryBase.Storage
      VB: SerializableDictionaryBase.Storage
    qualifiedName:
      CSharp: AstarLibrary.Core.SerializableDictionaryBase.Storage
      VB: AstarLibrary.Core.SerializableDictionaryBase.Storage
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Storage
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
      startLine: 14
    syntax:
      content:
        CSharp: public abstract class Storage
        VB: Public MustInherit Class Storage
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items: []
  - id: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2
    commentId: T:AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2
    language: CSharp
    name:
      CSharp: SerializableDictionaryBase.Dictionary<TKey, TValue>
      VB: SerializableDictionaryBase.Dictionary(Of TKey, TValue)
    nameWithType:
      CSharp: SerializableDictionaryBase.Dictionary<TKey, TValue>
      VB: SerializableDictionaryBase.Dictionary(Of TKey, TValue)
    qualifiedName:
      CSharp: AstarLibrary.Core.SerializableDictionaryBase.Dictionary<TKey, TValue>
      VB: AstarLibrary.Core.SerializableDictionaryBase.Dictionary(Of TKey, TValue)
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Dictionary
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
      startLine: 16
    syntax:
      content:
        CSharp: 'protected class Dictionary<TKey, TValue> : Dictionary<TKey, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, ISerializable, IDeserializationCallback'
        VB: >-
          Protected Class Dictionary(Of TKey, TValue)

              Inherits Dictionary(Of TKey, TValue)

              Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IReadOnlyDictionary(Of TKey, TValue), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEnumerable, ISerializable, IDeserializationCallback
      typeParameters:
      - id: TKey
      - id: TValue
    inheritance:
    - System.Object
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}
    implements:
    - System.Collections.Generic.IDictionary{{TKey},{TValue}}
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    - System.Collections.IDictionary
    - System.Collections.ICollection
    - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
    - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    - System.Collections.IEnumerable
    - System.Runtime.Serialization.ISerializable
    - System.Runtime.Serialization.IDeserializationCallback
    inheritedMembers:
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.Add({TKey},{TValue})
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.Clear
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.ContainsKey({TKey})
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.ContainsValue({TValue})
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.GetEnumerator
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.OnDeserialization(System.Object)
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.Remove({TKey})
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IEnumerable#GetEnumerator
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#get_Item(System.Object)
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Add(System.Object,System.Object)
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Contains(System.Object)
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#GetEnumerator
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Remove(System.Object)
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.Comparer
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.Count
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.Keys
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.Values
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.Item({TKey})
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#ICollection#IsSynchronized
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#ICollection#SyncRoot
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#IsFixedSize
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#IsReadOnly
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Keys
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Values
    - System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Item(System.Object)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - protected
      - class
      VB:
      - Protected
      - Class
    items:
    - id: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor
      language: CSharp
      name:
        CSharp: Dictionary()
        VB: Dictionary()
      nameWithType:
        CSharp: SerializableDictionaryBase.Dictionary<TKey, TValue>.Dictionary()
        VB: SerializableDictionaryBase.Dictionary(Of TKey, TValue).Dictionary()
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase.Dictionary<TKey, TValue>.Dictionary()
        VB: AstarLibrary.Core.SerializableDictionaryBase.Dictionary(Of TKey, TValue).Dictionary()
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 19
      syntax:
        content:
          CSharp: public Dictionary()
          VB: Public Sub New
      overload: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
      language: CSharp
      name:
        CSharp: Dictionary(IDictionary<TKey, TValue>)
        VB: Dictionary(IDictionary(Of TKey, TValue))
      nameWithType:
        CSharp: SerializableDictionaryBase.Dictionary<TKey, TValue>.Dictionary(IDictionary<TKey, TValue>)
        VB: SerializableDictionaryBase.Dictionary(Of TKey, TValue).Dictionary(IDictionary(Of TKey, TValue))
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)
        VB: AstarLibrary.Core.SerializableDictionaryBase.Dictionary(Of TKey, TValue).Dictionary(System.Collections.Generic.IDictionary(Of TKey, TValue))
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 20
      syntax:
        content:
          CSharp: public Dictionary(IDictionary<TKey, TValue> dict)
          VB: Public Sub New(dict As IDictionary(Of TKey, TValue))
        parameters:
        - id: dict
          type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      overload: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      language: CSharp
      name:
        CSharp: Dictionary(SerializationInfo, StreamingContext)
        VB: Dictionary(SerializationInfo, StreamingContext)
      nameWithType:
        CSharp: SerializableDictionaryBase.Dictionary<TKey, TValue>.Dictionary(SerializationInfo, StreamingContext)
        VB: SerializableDictionaryBase.Dictionary(Of TKey, TValue).Dictionary(SerializationInfo, StreamingContext)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase.Dictionary<TKey, TValue>.Dictionary(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
        VB: AstarLibrary.Core.SerializableDictionaryBase.Dictionary(Of TKey, TValue).Dictionary(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 21
      syntax:
        content:
          CSharp: public Dictionary(SerializationInfo info, StreamingContext context)
          VB: Public Sub New(info As SerializationInfo, context As StreamingContext)
        parameters:
        - id: info
          type: System.Runtime.Serialization.SerializationInfo
        - id: context
          type: System.Runtime.Serialization.StreamingContext
      overload: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.SerializableDictionaryBase`3
    commentId: T:AstarLibrary.Core.SerializableDictionaryBase`3
    language: CSharp
    name:
      CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>
      VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
    nameWithType:
      CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>
      VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
    qualifiedName:
      CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>
      VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage)
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: SerializableDictionaryBase
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
      startLine: 25
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : SerializableDictionaryBase, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
        VB: >-
          <Serializable>

          Public MustInherit Class SerializableDictionaryBase(Of TKey, TValue, TValueStorage)

              Inherits SerializableDictionaryBase

              Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IEnumerable, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
      typeParameters:
      - id: TKey
      - id: TValue
      - id: TValueStorage
    inheritance:
    - System.Object
    - AstarLibrary.Core.SerializableDictionaryBase
    implements:
    - System.Collections.Generic.IDictionary{{TKey},{TValue}}
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    - System.Collections.IDictionary
    - System.Collections.ICollection
    - System.Collections.IEnumerable
    - UnityEngine.ISerializationCallbackReceiver
    - System.Runtime.Serialization.IDeserializationCallback
    - System.Runtime.Serialization.ISerializable
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.#ctor
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.#ctor
      language: CSharp
      name:
        CSharp: SerializableDictionaryBase()
        VB: SerializableDictionaryBase()
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase()
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase()
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase()
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase()
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 34
      syntax:
        content:
          CSharp: public SerializableDictionaryBase()
          VB: Public Sub New
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.#ctor(System.Collections.Generic.IDictionary{`0,`1})
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.#ctor(System.Collections.Generic.IDictionary{`0,`1})
      language: CSharp
      name:
        CSharp: SerializableDictionaryBase(IDictionary<TKey, TValue>)
        VB: SerializableDictionaryBase(IDictionary(Of TKey, TValue))
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase(IDictionary<TKey, TValue>)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase(IDictionary(Of TKey, TValue))
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase(System.Collections.Generic.IDictionary<TKey, TValue>)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase(System.Collections.Generic.IDictionary(Of TKey, TValue))
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 39
      syntax:
        content:
          CSharp: public SerializableDictionaryBase(IDictionary<TKey, TValue> dict)
          VB: Public Sub New(dict As IDictionary(Of TKey, TValue))
        parameters:
        - id: dict
          type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
      language: CSharp
      name:
        CSharp: SetValue(TValueStorage[], Int32, TValue)
        VB: SetValue(TValueStorage(), Int32, TValue)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], Int32, TValue)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), Int32, TValue)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], System.Int32, TValue)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), System.Int32, TValue)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 44
      syntax:
        content:
          CSharp: protected abstract void SetValue(TValueStorage[] storage, int i, TValue value)
          VB: Protected MustOverride Sub SetValue(storage As TValueStorage(), i As Integer, value As TValue)
        parameters:
        - id: storage
          type: '{TValueStorage}[]'
        - id: i
          type: System.Int32
        - id: value
          type: '{TValue}'
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
      language: CSharp
      name:
        CSharp: GetValue(TValueStorage[], Int32)
        VB: GetValue(TValueStorage(), Int32)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], Int32)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], System.Int32)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 45
      syntax:
        content:
          CSharp: protected abstract TValue GetValue(TValueStorage[] storage, int i)
          VB: Protected MustOverride Function GetValue(storage As TValueStorage(), i As Integer) As TValue
        parameters:
        - id: storage
          type: '{TValueStorage}[]'
        - id: i
          type: System.Int32
        return:
          type: '{TValue}'
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
      language: CSharp
      name:
        CSharp: CopyFrom(IDictionary<TKey, TValue>)
        VB: CopyFrom(IDictionary(Of TKey, TValue))
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(IDictionary<TKey, TValue>)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom(IDictionary(Of TKey, TValue))
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(System.Collections.Generic.IDictionary<TKey, TValue>)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom(System.Collections.Generic.IDictionary(Of TKey, TValue))
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: CopyFrom
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 47
      syntax:
        content:
          CSharp: public void CopyFrom(IDictionary<TKey, TValue> dict)
          VB: Public Sub CopyFrom(dict As IDictionary(Of TKey, TValue))
        parameters:
        - id: dict
          type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
      language: CSharp
      name:
        CSharp: OnAfterDeserialize()
        VB: OnAfterDeserialize()
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize()
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize()
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize()
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: OnAfterDeserialize
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 55
      syntax:
        content:
          CSharp: public void OnAfterDeserialize()
          VB: Public Sub OnAfterDeserialize
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize*
      implements:
      - UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
      language: CSharp
      name:
        CSharp: OnBeforeSerialize()
        VB: OnBeforeSerialize()
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize()
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize()
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize()
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: OnBeforeSerialize
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 70
      syntax:
        content:
          CSharp: public void OnBeforeSerialize()
          VB: Public Sub OnBeforeSerialize
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize*
      implements:
      - UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Keys
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.Keys
      language: CSharp
      name:
        CSharp: Keys
        VB: Keys
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Keys
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Keys
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Keys
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Keys
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Keys
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 87
      syntax:
        content:
          CSharp: public ICollection<TKey> Keys { get; }
          VB: Public ReadOnly Property Keys As ICollection(Of TKey)
        parameters: []
        return:
          type: System.Collections.Generic.ICollection{{TKey}}
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Keys*
      implements:
      - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Values
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.Values
      language: CSharp
      name:
        CSharp: Values
        VB: Values
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Values
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Values
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Values
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Values
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Values
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 88
      syntax:
        content:
          CSharp: public ICollection<TValue> Values { get; }
          VB: Public ReadOnly Property Values As ICollection(Of TValue)
        parameters: []
        return:
          type: System.Collections.Generic.ICollection{{TValue}}
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Values*
      implements:
      - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Count
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Count
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Count
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Count
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Count
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Count
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 89
      syntax:
        content:
          CSharp: public int Count { get; }
          VB: Public ReadOnly Property Count As Integer
        parameters: []
        return:
          type: System.Int32
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Count*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
      - System.Collections.ICollection.Count
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
      language: CSharp
      name:
        CSharp: IsReadOnly
        VB: IsReadOnly
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsReadOnly
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsReadOnly
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsReadOnly
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsReadOnly
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: IsReadOnly
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 90
      syntax:
        content:
          CSharp: public bool IsReadOnly { get; }
          VB: Public ReadOnly Property IsReadOnly As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
      - System.Collections.IDictionary.IsReadOnly
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
      language: CSharp
      name:
        CSharp: Item[TKey]
        VB: Item(TKey)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item[TKey]
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item(TKey)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item[TKey]
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item(TKey)
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: this[]
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 92
      syntax:
        content:
          CSharp: public TValue this[TKey key] { get; set; }
          VB: Public Property Item(key As TKey) As TValue
        parameters:
        - id: key
          type: '{TKey}'
        return:
          type: '{TValue}'
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Item*
      implements:
      - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
      language: CSharp
      name:
        CSharp: Add(TKey, TValue)
        VB: Add(TKey, TValue)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add(TKey, TValue)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add(TKey, TValue)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add(TKey, TValue)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add(TKey, TValue)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Add
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 98
      syntax:
        content:
          CSharp: public void Add(TKey key, TValue value)
          VB: Public Sub Add(key As TKey, value As TValue)
        parameters:
        - id: key
          type: '{TKey}'
        - id: value
          type: '{TValue}'
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Add*
      implements:
      - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
      language: CSharp
      name:
        CSharp: ContainsKey(TKey)
        VB: ContainsKey(TKey)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.ContainsKey(TKey)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).ContainsKey(TKey)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.ContainsKey(TKey)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).ContainsKey(TKey)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: ContainsKey
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 103
      syntax:
        content:
          CSharp: public bool ContainsKey(TKey key)
          VB: Public Function ContainsKey(key As TKey) As Boolean
        parameters:
        - id: key
          type: '{TKey}'
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey*
      implements:
      - System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
      language: CSharp
      name:
        CSharp: Remove(TKey)
        VB: Remove(TKey)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove(TKey)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove(TKey)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove(TKey)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove(TKey)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Remove
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 108
      syntax:
        content:
          CSharp: public bool Remove(TKey key)
          VB: Public Function Remove(key As TKey) As Boolean
        parameters:
        - id: key
          type: '{TKey}'
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Remove*
      implements:
      - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
      language: CSharp
      name:
        CSharp: TryGetValue(TKey, out TValue)
        VB: TryGetValue(TKey, ByRef TValue)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.TryGetValue(TKey, out TValue)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).TryGetValue(TKey, ByRef TValue)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.TryGetValue(TKey, out TValue)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).TryGetValue(TKey, ByRef TValue)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: TryGetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 113
      syntax:
        content:
          CSharp: public bool TryGetValue(TKey key, out TValue value)
          VB: Public Function TryGetValue(key As TKey, ByRef value As TValue) As Boolean
        parameters:
        - id: key
          type: '{TKey}'
        - id: value
          type: '{TValue}'
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue*
      implements:
      - System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
      language: CSharp
      name:
        CSharp: Add(KeyValuePair<TKey, TValue>)
        VB: Add(KeyValuePair(Of TKey, TValue))
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add(KeyValuePair<TKey, TValue>)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add(KeyValuePair(Of TKey, TValue))
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Add
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 118
      syntax:
        content:
          CSharp: public void Add(KeyValuePair<TKey, TValue> item)
          VB: Public Sub Add(item As KeyValuePair(Of TKey, TValue))
        parameters:
        - id: item
          type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Add*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Clear
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Clear()
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Clear()
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Clear()
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Clear()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Clear
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 123
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Clear*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear
      - System.Collections.IDictionary.Clear
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
      language: CSharp
      name:
        CSharp: Contains(KeyValuePair<TKey, TValue>)
        VB: Contains(KeyValuePair(Of TKey, TValue))
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains(KeyValuePair<TKey, TValue>)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains(KeyValuePair(Of TKey, TValue))
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Contains
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 128
      syntax:
        content:
          CSharp: public bool Contains(KeyValuePair<TKey, TValue> item)
          VB: Public Function Contains(item As KeyValuePair(Of TKey, TValue)) As Boolean
        parameters:
        - id: item
          type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Contains*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
      language: CSharp
      name:
        CSharp: CopyTo(KeyValuePair<TKey, TValue>[], Int32)
        VB: CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: CopyTo
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 133
      syntax:
        content:
          CSharp: public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
          VB: Public Sub CopyTo(array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer)
        parameters:
        - id: array
          type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
        - id: arrayIndex
          type: System.Int32
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
      language: CSharp
      name:
        CSharp: Remove(KeyValuePair<TKey, TValue>)
        VB: Remove(KeyValuePair(Of TKey, TValue))
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove(KeyValuePair<TKey, TValue>)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove(KeyValuePair(Of TKey, TValue))
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Remove
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 138
      syntax:
        content:
          CSharp: public bool Remove(KeyValuePair<TKey, TValue> item)
          VB: Public Function Remove(item As KeyValuePair(Of TKey, TValue)) As Boolean
        parameters:
        - id: item
          type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Remove*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetEnumerator()
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetEnumerator()
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetEnumerator()
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetEnumerator()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetEnumerator
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 143
      syntax:
        content:
          CSharp: public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of TKey, TValue))
        return:
          type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator*
      implements:
      - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - isEii: true
      id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
      language: CSharp
      name:
        CSharp: IEnumerable.GetEnumerator()
        VB: System.Collections.IEnumerable.GetEnumerator()
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IEnumerable.GetEnumerator()
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IEnumerable.GetEnumerator()
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IEnumerable.GetEnumerator()
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IEnumerable.GetEnumerator()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: System.Collections.IEnumerable.GetEnumerator
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 148
      syntax:
        content:
          CSharp: IEnumerator IEnumerable.GetEnumerator()
          VB: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator*
      implements:
      - System.Collections.IEnumerable.GetEnumerator
      modifiers:
        CSharp: []
        VB: []
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
      language: CSharp
      name:
        CSharp: IsFixedSize
        VB: IsFixedSize
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsFixedSize
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsFixedSize
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsFixedSize
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsFixedSize
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: IsFixedSize
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 157
      syntax:
        content:
          CSharp: public bool IsFixedSize { get; }
          VB: Public ReadOnly Property IsFixedSize As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize*
      implements:
      - System.Collections.IDictionary.IsFixedSize
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - isEii: true
      id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
      language: CSharp
      name:
        CSharp: IDictionary.Keys
        VB: System.Collections.IDictionary.Keys
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.Keys
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Keys
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.Keys
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Keys
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: System.Collections.IDictionary.Keys
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 158
      syntax:
        content:
          CSharp: ICollection IDictionary.Keys { get; }
          VB: ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys
        parameters: []
        return:
          type: System.Collections.ICollection
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys*
      implements:
      - System.Collections.IDictionary.Keys
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - isEii: true
      id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
      language: CSharp
      name:
        CSharp: IDictionary.Values
        VB: System.Collections.IDictionary.Values
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.Values
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Values
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.Values
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Values
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: System.Collections.IDictionary.Values
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 159
      syntax:
        content:
          CSharp: ICollection IDictionary.Values { get; }
          VB: ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values
        parameters: []
        return:
          type: System.Collections.ICollection
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values*
      implements:
      - System.Collections.IDictionary.Values
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
      language: CSharp
      name:
        CSharp: IsSynchronized
        VB: IsSynchronized
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsSynchronized
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsSynchronized
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsSynchronized
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsSynchronized
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: IsSynchronized
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 160
      syntax:
        content:
          CSharp: public bool IsSynchronized { get; }
          VB: Public ReadOnly Property IsSynchronized As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized*
      implements:
      - System.Collections.ICollection.IsSynchronized
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
      language: CSharp
      name:
        CSharp: SyncRoot
        VB: SyncRoot
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SyncRoot
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SyncRoot
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SyncRoot
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SyncRoot
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SyncRoot
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 161
      syntax:
        content:
          CSharp: public object SyncRoot { get; }
          VB: Public ReadOnly Property SyncRoot As Object
        parameters: []
        return:
          type: System.Object
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot*
      implements:
      - System.Collections.ICollection.SyncRoot
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
      commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
      language: CSharp
      name:
        CSharp: Item[Object]
        VB: Item(Object)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item[Object]
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item[System.Object]
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item(System.Object)
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: this[]
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 163
      syntax:
        content:
          CSharp: public object this[object key] { get; set; }
          VB: Public Property Item(key As Object) As Object
        parameters:
        - id: key
          type: System.Object
        return:
          type: System.Object
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Item*
      implements:
      - System.Collections.IDictionary.Item(System.Object)
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
      language: CSharp
      name:
        CSharp: Add(Object, Object)
        VB: Add(Object, Object)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add(Object, Object)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add(Object, Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add(System.Object, System.Object)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add(System.Object, System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Add
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 169
      syntax:
        content:
          CSharp: public void Add(object key, object value)
          VB: Public Sub Add(key As Object, value As Object)
        parameters:
        - id: key
          type: System.Object
        - id: value
          type: System.Object
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Add*
      implements:
      - System.Collections.IDictionary.Add(System.Object,System.Object)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
      language: CSharp
      name:
        CSharp: Contains(Object)
        VB: Contains(Object)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains(Object)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains(System.Object)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Contains
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 174
      syntax:
        content:
          CSharp: public bool Contains(object key)
          VB: Public Function Contains(key As Object) As Boolean
        parameters:
        - id: key
          type: System.Object
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Contains*
      implements:
      - System.Collections.IDictionary.Contains(System.Object)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - isEii: true
      id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
      language: CSharp
      name:
        CSharp: IDictionary.GetEnumerator()
        VB: System.Collections.IDictionary.GetEnumerator()
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.GetEnumerator()
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.GetEnumerator()
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.GetEnumerator()
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.GetEnumerator()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: System.Collections.IDictionary.GetEnumerator
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 179
      syntax:
        content:
          CSharp: IDictionaryEnumerator IDictionary.GetEnumerator()
          VB: Function System.Collections.IDictionary.GetEnumerator As IDictionaryEnumerator Implements IDictionary.GetEnumerator
        return:
          type: System.Collections.IDictionaryEnumerator
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator*
      implements:
      - System.Collections.IDictionary.GetEnumerator
      modifiers:
        CSharp: []
        VB: []
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
      language: CSharp
      name:
        CSharp: Remove(Object)
        VB: Remove(Object)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove(Object)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove(System.Object)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Remove
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 184
      syntax:
        content:
          CSharp: public void Remove(object key)
          VB: Public Sub Remove(key As Object)
        parameters:
        - id: key
          type: System.Object
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.Remove*
      implements:
      - System.Collections.IDictionary.Remove(System.Object)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
      language: CSharp
      name:
        CSharp: CopyTo(Array, Int32)
        VB: CopyTo(Array, Int32)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo(Array, Int32)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo(Array, Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo(System.Array, System.Int32)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo(System.Array, System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: CopyTo
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 189
      syntax:
        content:
          CSharp: public void CopyTo(Array array, int index)
          VB: Public Sub CopyTo(array As Array, index As Integer)
        parameters:
        - id: array
          type: System.Array
        - id: index
          type: System.Int32
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo*
      implements:
      - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
      language: CSharp
      name:
        CSharp: OnDeserialization(Object)
        VB: OnDeserialization(Object)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnDeserialization(Object)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnDeserialization(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnDeserialization(System.Object)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnDeserialization(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: OnDeserialization
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 198
      syntax:
        content:
          CSharp: public void OnDeserialization(object sender)
          VB: Public Sub OnDeserialization(sender As Object)
        parameters:
        - id: sender
          type: System.Object
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization*
      implements:
      - System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      language: CSharp
      name:
        CSharp: SerializableDictionaryBase(SerializationInfo, StreamingContext)
        VB: SerializableDictionaryBase(SerializationInfo, StreamingContext)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase(SerializationInfo, StreamingContext)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase(SerializationInfo, StreamingContext)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 207
      syntax:
        content:
          CSharp: protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context)
          VB: Protected Sub New(info As SerializationInfo, context As StreamingContext)
        parameters:
        - id: info
          type: System.Runtime.Serialization.SerializationInfo
        - id: context
          type: System.Runtime.Serialization.StreamingContext
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      language: CSharp
      name:
        CSharp: GetObjectData(SerializationInfo, StreamingContext)
        VB: GetObjectData(SerializationInfo, StreamingContext)
      nameWithType:
        CSharp: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetObjectData(SerializationInfo, StreamingContext)
        VB: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetObjectData(SerializationInfo, StreamingContext)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
        VB: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetObjectData
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 212
      syntax:
        content:
          CSharp: public void GetObjectData(SerializationInfo info, StreamingContext context)
          VB: Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
        parameters:
        - id: info
          type: System.Runtime.Serialization.SerializationInfo
        - id: context
          type: System.Runtime.Serialization.StreamingContext
      overload: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData*
      implements:
      - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.SerializableDictionary
    commentId: T:AstarLibrary.Core.SerializableDictionary
    language: CSharp
    name:
      CSharp: SerializableDictionary
      VB: SerializableDictionary
    nameWithType:
      CSharp: SerializableDictionary
      VB: SerializableDictionary
    qualifiedName:
      CSharp: AstarLibrary.Core.SerializableDictionary
      VB: AstarLibrary.Core.SerializableDictionary
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: SerializableDictionary
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
      startLine: 219
    syntax:
      content:
        CSharp: public static class SerializableDictionary
        VB: Public Module SerializableDictionary
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items: []
  - id: AstarLibrary.Core.SerializableDictionary.Storage`1
    commentId: T:AstarLibrary.Core.SerializableDictionary.Storage`1
    language: CSharp
    name:
      CSharp: SerializableDictionary.Storage<T>
      VB: SerializableDictionary.Storage(Of T)
    nameWithType:
      CSharp: SerializableDictionary.Storage<T>
      VB: SerializableDictionary.Storage(Of T)
    qualifiedName:
      CSharp: AstarLibrary.Core.SerializableDictionary.Storage<T>
      VB: AstarLibrary.Core.SerializableDictionary.Storage(Of T)
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Storage
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
      startLine: 221
    syntax:
      content:
        CSharp: 'public class Storage<T> : SerializableDictionaryBase.Storage'
        VB: >-
          Public Class Storage(Of T)

              Inherits SerializableDictionaryBase.Storage
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    - AstarLibrary.Core.SerializableDictionaryBase.Storage
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AstarLibrary.Core.SerializableDictionary.Storage`1.data
      commentId: F:AstarLibrary.Core.SerializableDictionary.Storage`1.data
      language: CSharp
      name:
        CSharp: data
        VB: data
      nameWithType:
        CSharp: SerializableDictionary.Storage<T>.data
        VB: SerializableDictionary.Storage(Of T).data
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary.Storage<T>.data
        VB: AstarLibrary.Core.SerializableDictionary.Storage(Of T).data
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: data
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 223
      syntax:
        content:
          CSharp: public T data
          VB: Public data As T
        return:
          type: '{T}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.SerializableDictionary`2
    commentId: T:AstarLibrary.Core.SerializableDictionary`2
    language: CSharp
    name:
      CSharp: SerializableDictionary<TKey, TValue>
      VB: SerializableDictionary(Of TKey, TValue)
    nameWithType:
      CSharp: SerializableDictionary<TKey, TValue>
      VB: SerializableDictionary(Of TKey, TValue)
    qualifiedName:
      CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue>
      VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue)
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: SerializableDictionary
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
      startLine: 226
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
        VB: >-
          <Serializable>

          Public Class SerializableDictionary(Of TKey, TValue)

              Inherits SerializableDictionaryBase(Of TKey, TValue, TValue)

              Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IEnumerable, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
      typeParameters:
      - id: TKey
      - id: TValue
    inheritance:
    - System.Object
    - AstarLibrary.Core.SerializableDictionaryBase
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    implements:
    - System.Collections.Generic.IDictionary{{TKey},{TValue}}
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    - System.Collections.IDictionary
    - System.Collections.ICollection
    - System.Collections.IEnumerable
    - UnityEngine.ISerializationCallbackReceiver
    - System.Runtime.Serialization.IDeserializationCallback
    - System.Runtime.Serialization.ISerializable
    inheritedMembers:
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.SetValue({TValue}[],System.Int32,{TValue})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.GetValue({TValue}[],System.Int32)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.CopyFrom(System.Collections.Generic.IDictionary{{TKey},{TValue}})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.OnAfterDeserialize
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.OnBeforeSerialize
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Keys
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Values
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Count
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.IsReadOnly
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Item({TKey})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Add({TKey},{TValue})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.ContainsKey({TKey})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Remove({TKey})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.TryGetValue({TKey},{TValue}@)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Clear
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.GetEnumerator
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.System#Collections#IEnumerable#GetEnumerator
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.IsFixedSize
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.System#Collections#IDictionary#Keys
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.System#Collections#IDictionary#Values
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.IsSynchronized
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.SyncRoot
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Item(System.Object)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Add(System.Object,System.Object)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Contains(System.Object)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.System#Collections#IDictionary#GetEnumerator
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Remove(System.Object)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.CopyTo(System.Array,System.Int32)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.OnDeserialization(System.Object)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AstarLibrary.Core.SerializableDictionary`2.#ctor
      commentId: M:AstarLibrary.Core.SerializableDictionary`2.#ctor
      language: CSharp
      name:
        CSharp: SerializableDictionary()
        VB: SerializableDictionary()
      nameWithType:
        CSharp: SerializableDictionary<TKey, TValue>.SerializableDictionary()
        VB: SerializableDictionary(Of TKey, TValue).SerializableDictionary()
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue>.SerializableDictionary()
        VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue).SerializableDictionary()
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 229
      syntax:
        content:
          CSharp: public SerializableDictionary()
          VB: Public Sub New
      overload: AstarLibrary.Core.SerializableDictionary`2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
      commentId: M:AstarLibrary.Core.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
      language: CSharp
      name:
        CSharp: SerializableDictionary(IDictionary<TKey, TValue>)
        VB: SerializableDictionary(IDictionary(Of TKey, TValue))
      nameWithType:
        CSharp: SerializableDictionary<TKey, TValue>.SerializableDictionary(IDictionary<TKey, TValue>)
        VB: SerializableDictionary(Of TKey, TValue).SerializableDictionary(IDictionary(Of TKey, TValue))
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue>.SerializableDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)
        VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue).SerializableDictionary(System.Collections.Generic.IDictionary(Of TKey, TValue))
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 230
      syntax:
        content:
          CSharp: public SerializableDictionary(IDictionary<TKey, TValue> dict)
          VB: Public Sub New(dict As IDictionary(Of TKey, TValue))
        parameters:
        - id: dict
          type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      overload: AstarLibrary.Core.SerializableDictionary`2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      commentId: M:AstarLibrary.Core.SerializableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      language: CSharp
      name:
        CSharp: SerializableDictionary(SerializationInfo, StreamingContext)
        VB: SerializableDictionary(SerializationInfo, StreamingContext)
      nameWithType:
        CSharp: SerializableDictionary<TKey, TValue>.SerializableDictionary(SerializationInfo, StreamingContext)
        VB: SerializableDictionary(Of TKey, TValue).SerializableDictionary(SerializationInfo, StreamingContext)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue>.SerializableDictionary(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
        VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue).SerializableDictionary(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 231
      syntax:
        content:
          CSharp: protected SerializableDictionary(SerializationInfo info, StreamingContext context)
          VB: Protected Sub New(info As SerializationInfo, context As StreamingContext)
        parameters:
        - id: info
          type: System.Runtime.Serialization.SerializationInfo
        - id: context
          type: System.Runtime.Serialization.StreamingContext
      overload: AstarLibrary.Core.SerializableDictionary`2.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AstarLibrary.Core.SerializableDictionary`2.GetValue(`1[],System.Int32)
      commentId: M:AstarLibrary.Core.SerializableDictionary`2.GetValue(`1[],System.Int32)
      language: CSharp
      name:
        CSharp: GetValue(TValue[], Int32)
        VB: GetValue(TValue(), Int32)
      nameWithType:
        CSharp: SerializableDictionary<TKey, TValue>.GetValue(TValue[], Int32)
        VB: SerializableDictionary(Of TKey, TValue).GetValue(TValue(), Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue>.GetValue(TValue[], System.Int32)
        VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue).GetValue(TValue(), System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 233
      syntax:
        content:
          CSharp: protected override TValue GetValue(TValue[] storage, int i)
          VB: Protected Overrides Function GetValue(storage As TValue(), i As Integer) As TValue
        parameters:
        - id: storage
          type: '{TValue}[]'
        - id: i
          type: System.Int32
        return:
          type: '{TValue}'
      overload: AstarLibrary.Core.SerializableDictionary`2.GetValue*
      overridden: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.GetValue({TValue}[],System.Int32)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: AstarLibrary.Core.SerializableDictionary`2.SetValue(`1[],System.Int32,`1)
      commentId: M:AstarLibrary.Core.SerializableDictionary`2.SetValue(`1[],System.Int32,`1)
      language: CSharp
      name:
        CSharp: SetValue(TValue[], Int32, TValue)
        VB: SetValue(TValue(), Int32, TValue)
      nameWithType:
        CSharp: SerializableDictionary<TKey, TValue>.SetValue(TValue[], Int32, TValue)
        VB: SerializableDictionary(Of TKey, TValue).SetValue(TValue(), Int32, TValue)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue>.SetValue(TValue[], System.Int32, TValue)
        VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue).SetValue(TValue(), System.Int32, TValue)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 238
      syntax:
        content:
          CSharp: protected override void SetValue(TValue[] storage, int i, TValue value)
          VB: Protected Overrides Sub SetValue(storage As TValue(), i As Integer, value As TValue)
        parameters:
        - id: storage
          type: '{TValue}[]'
        - id: i
          type: System.Int32
        - id: value
          type: '{TValue}'
      overload: AstarLibrary.Core.SerializableDictionary`2.SetValue*
      overridden: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.SetValue({TValue}[],System.Int32,{TValue})
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: AstarLibrary.Core.SerializableDictionary`3
    commentId: T:AstarLibrary.Core.SerializableDictionary`3
    language: CSharp
    name:
      CSharp: SerializableDictionary<TKey, TValue, TValueStorage>
      VB: SerializableDictionary(Of TKey, TValue, TValueStorage)
    nameWithType:
      CSharp: SerializableDictionary<TKey, TValue, TValueStorage>
      VB: SerializableDictionary(Of TKey, TValue, TValueStorage)
    qualifiedName:
      CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue, TValueStorage>
      VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue, TValueStorage)
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: SerializableDictionary
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
      startLine: 243
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable where TValueStorage : SerializableDictionary.Storage<TValue>, new()
        VB: >-
          <Serializable>

          Public Class SerializableDictionary(Of TKey, TValue, TValueStorage As {SerializableDictionary.Storage(Of TValue), New})

              Inherits SerializableDictionaryBase(Of TKey, TValue, TValueStorage)

              Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IEnumerable, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
      typeParameters:
      - id: TKey
      - id: TValue
      - id: TValueStorage
    inheritance:
    - System.Object
    - AstarLibrary.Core.SerializableDictionaryBase
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    implements:
    - System.Collections.Generic.IDictionary{{TKey},{TValue}}
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    - System.Collections.IDictionary
    - System.Collections.ICollection
    - System.Collections.IEnumerable
    - UnityEngine.ISerializationCallbackReceiver
    - System.Runtime.Serialization.IDeserializationCallback
    - System.Runtime.Serialization.ISerializable
    inheritedMembers:
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.SetValue({TValueStorage}[],System.Int32,{TValue})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.GetValue({TValueStorage}[],System.Int32)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.CopyFrom(System.Collections.Generic.IDictionary{{TKey},{TValue}})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.OnAfterDeserialize
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.OnBeforeSerialize
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Keys
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Values
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Count
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.IsReadOnly
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Item({TKey})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Add({TKey},{TValue})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.ContainsKey({TKey})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Remove({TKey})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.TryGetValue({TKey},{TValue}@)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Clear
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.GetEnumerator
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.System#Collections#IEnumerable#GetEnumerator
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.IsFixedSize
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.System#Collections#IDictionary#Keys
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.System#Collections#IDictionary#Values
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.IsSynchronized
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.SyncRoot
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Item(System.Object)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Add(System.Object,System.Object)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Contains(System.Object)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.System#Collections#IDictionary#GetEnumerator
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Remove(System.Object)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.CopyTo(System.Array,System.Int32)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.OnDeserialization(System.Object)
    - AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AstarLibrary.Core.SerializableDictionary`3.#ctor
      commentId: M:AstarLibrary.Core.SerializableDictionary`3.#ctor
      language: CSharp
      name:
        CSharp: SerializableDictionary()
        VB: SerializableDictionary()
      nameWithType:
        CSharp: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary()
        VB: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary()
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary()
        VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary()
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 246
      syntax:
        content:
          CSharp: public SerializableDictionary()
          VB: Public Sub New
      overload: AstarLibrary.Core.SerializableDictionary`3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionary`3.#ctor(System.Collections.Generic.IDictionary{`0,`1})
      commentId: M:AstarLibrary.Core.SerializableDictionary`3.#ctor(System.Collections.Generic.IDictionary{`0,`1})
      language: CSharp
      name:
        CSharp: SerializableDictionary(IDictionary<TKey, TValue>)
        VB: SerializableDictionary(IDictionary(Of TKey, TValue))
      nameWithType:
        CSharp: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary(IDictionary<TKey, TValue>)
        VB: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary(IDictionary(Of TKey, TValue))
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)
        VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary(System.Collections.Generic.IDictionary(Of TKey, TValue))
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 247
      syntax:
        content:
          CSharp: public SerializableDictionary(IDictionary<TKey, TValue> dict)
          VB: Public Sub New(dict As IDictionary(Of TKey, TValue))
        parameters:
        - id: dict
          type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      overload: AstarLibrary.Core.SerializableDictionary`3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.SerializableDictionary`3.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      commentId: M:AstarLibrary.Core.SerializableDictionary`3.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      language: CSharp
      name:
        CSharp: SerializableDictionary(SerializationInfo, StreamingContext)
        VB: SerializableDictionary(SerializationInfo, StreamingContext)
      nameWithType:
        CSharp: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary(SerializationInfo, StreamingContext)
        VB: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary(SerializationInfo, StreamingContext)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
        VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 248
      syntax:
        content:
          CSharp: protected SerializableDictionary(SerializationInfo info, StreamingContext context)
          VB: Protected Sub New(info As SerializationInfo, context As StreamingContext)
        parameters:
        - id: info
          type: System.Runtime.Serialization.SerializationInfo
        - id: context
          type: System.Runtime.Serialization.StreamingContext
      overload: AstarLibrary.Core.SerializableDictionary`3.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AstarLibrary.Core.SerializableDictionary`3.GetValue(`2[],System.Int32)
      commentId: M:AstarLibrary.Core.SerializableDictionary`3.GetValue(`2[],System.Int32)
      language: CSharp
      name:
        CSharp: GetValue(TValueStorage[], Int32)
        VB: GetValue(TValueStorage(), Int32)
      nameWithType:
        CSharp: SerializableDictionary<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], Int32)
        VB: SerializableDictionary(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], System.Int32)
        VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue, TValueStorage).GetValue(TValueStorage(), System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 250
      syntax:
        content:
          CSharp: protected override TValue GetValue(TValueStorage[] storage, int i)
          VB: Protected Overrides Function GetValue(storage As TValueStorage(), i As Integer) As TValue
        parameters:
        - id: storage
          type: '{TValueStorage}[]'
        - id: i
          type: System.Int32
        return:
          type: '{TValue}'
      overload: AstarLibrary.Core.SerializableDictionary`3.GetValue*
      overridden: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.GetValue({TValueStorage}[],System.Int32)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: AstarLibrary.Core.SerializableDictionary`3.SetValue(`2[],System.Int32,`1)
      commentId: M:AstarLibrary.Core.SerializableDictionary`3.SetValue(`2[],System.Int32,`1)
      language: CSharp
      name:
        CSharp: SetValue(TValueStorage[], Int32, TValue)
        VB: SetValue(TValueStorage(), Int32, TValue)
      nameWithType:
        CSharp: SerializableDictionary<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], Int32, TValue)
        VB: SerializableDictionary(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), Int32, TValue)
      qualifiedName:
        CSharp: AstarLibrary.Core.SerializableDictionary<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], System.Int32, TValue)
        VB: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue, TValueStorage).SetValue(TValueStorage(), System.Int32, TValue)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetValue
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\SerializableDictionary.cs
        startLine: 255
      syntax:
        content:
          CSharp: protected override void SetValue(TValueStorage[] storage, int i, TValue value)
          VB: Protected Overrides Sub SetValue(storage As TValueStorage(), i As Integer, value As TValue)
        parameters:
        - id: storage
          type: '{TValueStorage}[]'
        - id: i
          type: System.Int32
        - id: value
          type: '{TValue}'
      overload: AstarLibrary.Core.SerializableDictionary`3.SetValue*
      overridden: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.SetValue({TValueStorage}[],System.Int32,{TValue})
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: AstarLibrary.Core.StringsExtensions
    commentId: T:AstarLibrary.Core.StringsExtensions
    language: CSharp
    name:
      CSharp: StringsExtensions
      VB: StringsExtensions
    nameWithType:
      CSharp: StringsExtensions
      VB: StringsExtensions
    qualifiedName:
      CSharp: AstarLibrary.Core.StringsExtensions
      VB: AstarLibrary.Core.StringsExtensions
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: StringsExtensions
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\StringsExtensions.cs
      startLine: 8
    syntax:
      content:
        CSharp: public static class StringsExtensions
        VB: Public Module StringsExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: AstarLibrary.Core.StringsExtensions.ReplaceValues(System.String[],System.String[])
      commentId: M:AstarLibrary.Core.StringsExtensions.ReplaceValues(System.String[],System.String[])
      language: CSharp
      name:
        CSharp: ReplaceValues(String[], String[])
        VB: ReplaceValues(String(), String())
      nameWithType:
        CSharp: StringsExtensions.ReplaceValues(String[], String[])
        VB: StringsExtensions.ReplaceValues(String(), String())
      qualifiedName:
        CSharp: AstarLibrary.Core.StringsExtensions.ReplaceValues(System.String[], System.String[])
        VB: AstarLibrary.Core.StringsExtensions.ReplaceValues(System.String(), System.String())
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: ReplaceValues
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\StringsExtensions.cs
        startLine: 17
      summary: "\nReplace Values of this array with New Array\n"
      example: []
      syntax:
        content:
          CSharp: public static string[] ReplaceValues(this string[] line, string[] newArray)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ReplaceValues(line As String(), newArray As String()) As String()
        parameters:
        - id: line
          type: System.String[]
          description: ''
        - id: newArray
          type: System.String[]
          description: ''
        return:
          type: System.String[]
          description: ''
      overload: AstarLibrary.Core.StringsExtensions.ReplaceValues*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.StringsExtensions.StringSplitter(System.String,System.Char[])
      commentId: M:AstarLibrary.Core.StringsExtensions.StringSplitter(System.String,System.Char[])
      language: CSharp
      name:
        CSharp: StringSplitter(String, Char[])
        VB: StringSplitter(String, Char())
      nameWithType:
        CSharp: StringsExtensions.StringSplitter(String, Char[])
        VB: StringsExtensions.StringSplitter(String, Char())
      qualifiedName:
        CSharp: AstarLibrary.Core.StringsExtensions.StringSplitter(System.String, System.Char[])
        VB: AstarLibrary.Core.StringsExtensions.StringSplitter(System.String, System.Char())
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: StringSplitter
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\StringsExtensions.cs
        startLine: 32
      summary: "\nSplit string based on Characters\n"
      example: []
      syntax:
        content:
          CSharp: public static string[] StringSplitter(this string tosplit, char[] chars)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function StringSplitter(tosplit As String, chars As Char()) As String()
        parameters:
        - id: tosplit
          type: System.String
          description: ''
        - id: chars
          type: System.Char[]
          description: ''
        return:
          type: System.String[]
          description: ''
      overload: AstarLibrary.Core.StringsExtensions.StringSplitter*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.StringsExtensions.StringCut(System.String,System.Int32,System.Int32)
      commentId: M:AstarLibrary.Core.StringsExtensions.StringCut(System.String,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: StringCut(String, Int32, Int32)
        VB: StringCut(String, Int32, Int32)
      nameWithType:
        CSharp: StringsExtensions.StringCut(String, Int32, Int32)
        VB: StringsExtensions.StringCut(String, Int32, Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.StringsExtensions.StringCut(System.String, System.Int32, System.Int32)
        VB: AstarLibrary.Core.StringsExtensions.StringCut(System.String, System.Int32, System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: StringCut
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\StringsExtensions.cs
        startLine: 43
      summary: "\nCut string based on letter position\n"
      example: []
      syntax:
        content:
          CSharp: public static string StringCut(this string toCut, int initialCharLength, int finalCharLength)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function StringCut(toCut As String, initialCharLength As Integer, finalCharLength As Integer) As String
        parameters:
        - id: toCut
          type: System.String
          description: ''
        - id: initialCharLength
          type: System.Int32
          description: ''
        - id: finalCharLength
          type: System.Int32
          description: ''
        return:
          type: System.String
          description: ''
      overload: AstarLibrary.Core.StringsExtensions.StringCut*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.StringsExtensions.AddCharacterToString(System.String,System.Char)
      commentId: M:AstarLibrary.Core.StringsExtensions.AddCharacterToString(System.String,System.Char)
      language: CSharp
      name:
        CSharp: AddCharacterToString(String, Char)
        VB: AddCharacterToString(String, Char)
      nameWithType:
        CSharp: StringsExtensions.AddCharacterToString(String, Char)
        VB: StringsExtensions.AddCharacterToString(String, Char)
      qualifiedName:
        CSharp: AstarLibrary.Core.StringsExtensions.AddCharacterToString(System.String, System.Char)
        VB: AstarLibrary.Core.StringsExtensions.AddCharacterToString(System.String, System.Char)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: AddCharacterToString
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\StringsExtensions.cs
        startLine: 56
      summary: "\nAdd char to a string\n"
      example: []
      syntax:
        content:
          CSharp: public static string AddCharacterToString(this string toModify, char toAdd)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function AddCharacterToString(toModify As String, toAdd As Char) As String
        parameters:
        - id: toModify
          type: System.String
          description: ''
        - id: toAdd
          type: System.Char
          description: ''
        return:
          type: System.String
          description: ''
      overload: AstarLibrary.Core.StringsExtensions.AddCharacterToString*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters(System.String,System.String)
      commentId: M:AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters(System.String,System.String)
      language: CSharp
      name:
        CSharp: RemoveSpecialCharacters(String, String)
        VB: RemoveSpecialCharacters(String, String)
      nameWithType:
        CSharp: StringsExtensions.RemoveSpecialCharacters(String, String)
        VB: StringsExtensions.RemoveSpecialCharacters(String, String)
      qualifiedName:
        CSharp: AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters(System.String, System.String)
        VB: AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters(System.String, System.String)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: RemoveSpecialCharacters
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Extends\StringsExtensions.cs
        startLine: 71
      summary: "\nRemove special characters\n"
      example: []
      syntax:
        content:
          CSharp: public static string RemoveSpecialCharacters(this string str, string regex)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function RemoveSpecialCharacters(str As String, regex As String) As String
        parameters:
        - id: str
          type: System.String
          description: ''
        - id: regex
          type: System.String
        return:
          type: System.String
          description: ''
      overload: AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AstarLibrary.Core.ICacheHandler
    commentId: T:AstarLibrary.Core.ICacheHandler
    language: CSharp
    name:
      CSharp: ICacheHandler
      VB: ICacheHandler
    nameWithType:
      CSharp: ICacheHandler
      VB: ICacheHandler
    qualifiedName:
      CSharp: AstarLibrary.Core.ICacheHandler
      VB: AstarLibrary.Core.ICacheHandler
    type: Interface
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: ICacheHandler
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Interfaces\ICacheHandler.cs
      startLine: 7
    syntax:
      content:
        CSharp: public interface ICacheHandler
        VB: Public Interface ICacheHandler
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: AstarLibrary.Core.ICacheHandler.Save``1(System.String,``0)
      commentId: M:AstarLibrary.Core.ICacheHandler.Save``1(System.String,``0)
      language: CSharp
      name:
        CSharp: Save<T>(String, T)
        VB: Save(Of T)(String, T)
      nameWithType:
        CSharp: ICacheHandler.Save<T>(String, T)
        VB: ICacheHandler.Save(Of T)(String, T)
      qualifiedName:
        CSharp: AstarLibrary.Core.ICacheHandler.Save<T>(System.String, T)
        VB: AstarLibrary.Core.ICacheHandler.Save(Of T)(System.String, T)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Save
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Interfaces\ICacheHandler.cs
        startLine: 9
      syntax:
        content:
          CSharp: void Save<T>(string path, T obj)
          VB: Sub Save(Of T)(path As String, obj As T)
        parameters:
        - id: path
          type: System.String
        - id: obj
          type: '{T}'
        typeParameters:
        - id: T
      overload: AstarLibrary.Core.ICacheHandler.Save*
      modifiers:
        CSharp: []
        VB: []
    - id: AstarLibrary.Core.ICacheHandler.Load``1(System.String)
      commentId: M:AstarLibrary.Core.ICacheHandler.Load``1(System.String)
      language: CSharp
      name:
        CSharp: Load<T>(String)
        VB: Load(Of T)(String)
      nameWithType:
        CSharp: ICacheHandler.Load<T>(String)
        VB: ICacheHandler.Load(Of T)(String)
      qualifiedName:
        CSharp: AstarLibrary.Core.ICacheHandler.Load<T>(System.String)
        VB: AstarLibrary.Core.ICacheHandler.Load(Of T)(System.String)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Load
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Interfaces\ICacheHandler.cs
        startLine: 10
      syntax:
        content:
          CSharp: T Load<T>(string path)
          VB: Function Load(Of T)(path As String) As T
        parameters:
        - id: path
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: AstarLibrary.Core.ICacheHandler.Load*
      modifiers:
        CSharp: []
        VB: []
    - id: AstarLibrary.Core.ICacheHandler.Exist(System.String)
      commentId: M:AstarLibrary.Core.ICacheHandler.Exist(System.String)
      language: CSharp
      name:
        CSharp: Exist(String)
        VB: Exist(String)
      nameWithType:
        CSharp: ICacheHandler.Exist(String)
        VB: ICacheHandler.Exist(String)
      qualifiedName:
        CSharp: AstarLibrary.Core.ICacheHandler.Exist(System.String)
        VB: AstarLibrary.Core.ICacheHandler.Exist(System.String)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Exist
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Interfaces\ICacheHandler.cs
        startLine: 11
      syntax:
        content:
          CSharp: bool Exist(string path)
          VB: Function Exist(path As String) As Boolean
        parameters:
        - id: path
          type: System.String
        return:
          type: System.Boolean
      overload: AstarLibrary.Core.ICacheHandler.Exist*
      modifiers:
        CSharp: []
        VB: []
  - id: AstarLibrary.Core.IOverseerHandler
    commentId: T:AstarLibrary.Core.IOverseerHandler
    language: CSharp
    name:
      CSharp: IOverseerHandler
      VB: IOverseerHandler
    nameWithType:
      CSharp: IOverseerHandler
      VB: IOverseerHandler
    qualifiedName:
      CSharp: AstarLibrary.Core.IOverseerHandler
      VB: AstarLibrary.Core.IOverseerHandler
    type: Interface
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: IOverseerHandler
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Interfaces\IOverseerHandler.cs
      startLine: 7
    syntax:
      content:
        CSharp: public interface IOverseerHandler
        VB: Public Interface IOverseerHandler
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: AstarLibrary.Core.IOverseerHandler.Notify(System.Object)
      commentId: M:AstarLibrary.Core.IOverseerHandler.Notify(System.Object)
      language: CSharp
      name:
        CSharp: Notify(Object)
        VB: Notify(Object)
      nameWithType:
        CSharp: IOverseerHandler.Notify(Object)
        VB: IOverseerHandler.Notify(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.IOverseerHandler.Notify(System.Object)
        VB: AstarLibrary.Core.IOverseerHandler.Notify(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Notify
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Interfaces\IOverseerHandler.cs
        startLine: 9
      syntax:
        content:
          CSharp: void Notify(object message)
          VB: Sub Notify(message As Object)
        parameters:
        - id: message
          type: System.Object
      overload: AstarLibrary.Core.IOverseerHandler.Notify*
      modifiers:
        CSharp: []
        VB: []
  - id: AstarLibrary.Core.IRecordHandler
    commentId: T:AstarLibrary.Core.IRecordHandler
    language: CSharp
    name:
      CSharp: IRecordHandler
      VB: IRecordHandler
    nameWithType:
      CSharp: IRecordHandler
      VB: IRecordHandler
    qualifiedName:
      CSharp: AstarLibrary.Core.IRecordHandler
      VB: AstarLibrary.Core.IRecordHandler
    type: Interface
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: IRecordHandler
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Interfaces\IRecordHandler.cs
      startLine: 7
    syntax:
      content:
        CSharp: public interface IRecordHandler
        VB: Public Interface IRecordHandler
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: AstarLibrary.Core.IRecordHandler.Log(System.Object)
      commentId: M:AstarLibrary.Core.IRecordHandler.Log(System.Object)
      language: CSharp
      name:
        CSharp: Log(Object)
        VB: Log(Object)
      nameWithType:
        CSharp: IRecordHandler.Log(Object)
        VB: IRecordHandler.Log(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.IRecordHandler.Log(System.Object)
        VB: AstarLibrary.Core.IRecordHandler.Log(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Log
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Interfaces\IRecordHandler.cs
        startLine: 9
      syntax:
        content:
          CSharp: void Log(object message)
          VB: Sub Log(message As Object)
        parameters:
        - id: message
          type: System.Object
      overload: AstarLibrary.Core.IRecordHandler.Log*
      modifiers:
        CSharp: []
        VB: []
  - id: AstarLibrary.Core.IWorkerHandler
    commentId: T:AstarLibrary.Core.IWorkerHandler
    language: CSharp
    name:
      CSharp: IWorkerHandler
      VB: IWorkerHandler
    nameWithType:
      CSharp: IWorkerHandler
      VB: IWorkerHandler
    qualifiedName:
      CSharp: AstarLibrary.Core.IWorkerHandler
      VB: AstarLibrary.Core.IWorkerHandler
    type: Interface
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: IWorkerHandler
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Interfaces\IWorkerHandler.cs
      startLine: 7
    syntax:
      content:
        CSharp: public interface IWorkerHandler
        VB: Public Interface IWorkerHandler
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: AstarLibrary.Core.IWorkerHandler.Execute
      commentId: M:AstarLibrary.Core.IWorkerHandler.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: IWorkerHandler.Execute()
        VB: IWorkerHandler.Execute()
      qualifiedName:
        CSharp: AstarLibrary.Core.IWorkerHandler.Execute()
        VB: AstarLibrary.Core.IWorkerHandler.Execute()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Execute
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Interfaces\IWorkerHandler.cs
        startLine: 9
      syntax:
        content:
          CSharp: void Execute()
          VB: Sub Execute
      overload: AstarLibrary.Core.IWorkerHandler.Execute*
      modifiers:
        CSharp: []
        VB: []
  - id: AstarLibrary.Core.Cipher
    commentId: T:AstarLibrary.Core.Cipher
    language: CSharp
    name:
      CSharp: Cipher
      VB: Cipher
    nameWithType:
      CSharp: Cipher
      VB: Cipher
    qualifiedName:
      CSharp: AstarLibrary.Core.Cipher
      VB: AstarLibrary.Core.Cipher
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Cipher
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
      startLine: 14
    summary: "\nInterface of Cipher\n"
    example: []
    syntax:
      content:
        CSharp: public static class Cipher
        VB: Public Module Cipher
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AstarLibrary.Core.Cipher.GenerateKey
      commentId: M:AstarLibrary.Core.Cipher.GenerateKey
      language: CSharp
      name:
        CSharp: GenerateKey()
        VB: GenerateKey()
      nameWithType:
        CSharp: Cipher.GenerateKey()
        VB: Cipher.GenerateKey()
      qualifiedName:
        CSharp: AstarLibrary.Core.Cipher.GenerateKey()
        VB: AstarLibrary.Core.Cipher.GenerateKey()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GenerateKey
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
        startLine: 32
      summary: "\nGenerate a new key each time its called\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] GenerateKey()
          VB: Public Shared Function GenerateKey As Byte()
        return:
          type: System.Byte[]
          description: ''
      overload: AstarLibrary.Core.Cipher.GenerateKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.Cipher.GeneratePassword
      commentId: M:AstarLibrary.Core.Cipher.GeneratePassword
      language: CSharp
      name:
        CSharp: GeneratePassword()
        VB: GeneratePassword()
      nameWithType:
        CSharp: Cipher.GeneratePassword()
        VB: Cipher.GeneratePassword()
      qualifiedName:
        CSharp: AstarLibrary.Core.Cipher.GeneratePassword()
        VB: AstarLibrary.Core.Cipher.GeneratePassword()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: GeneratePassword
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
        startLine: 42
      summary: "\nGenerate a new password for strings\n"
      example: []
      syntax:
        content:
          CSharp: public static string GeneratePassword()
          VB: Public Shared Function GeneratePassword As String
        return:
          type: System.String
          description: ''
      overload: AstarLibrary.Core.Cipher.GeneratePassword*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.Cipher.Encrypt(System.String,System.Byte[],System.Byte[],System.Byte[])
      commentId: M:AstarLibrary.Core.Cipher.Encrypt(System.String,System.Byte[],System.Byte[],System.Byte[])
      language: CSharp
      name:
        CSharp: Encrypt(String, Byte[], Byte[], Byte[])
        VB: Encrypt(String, Byte(), Byte(), Byte())
      nameWithType:
        CSharp: Cipher.Encrypt(String, Byte[], Byte[], Byte[])
        VB: Cipher.Encrypt(String, Byte(), Byte(), Byte())
      qualifiedName:
        CSharp: AstarLibrary.Core.Cipher.Encrypt(System.String, System.Byte[], System.Byte[], System.Byte[])
        VB: AstarLibrary.Core.Cipher.Encrypt(System.String, System.Byte(), System.Byte(), System.Byte())
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Encrypt
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
        startLine: 62
      summary: "\nAdvanced Encryption System (AES) then Authentication (HMAC) for a UTF8 Message.\n"
      remarks: "\nAdds overhead of (Optional-Payload + BlockSize(16) + Message-Padded-To-Blocksize +  HMac-Tag(32)) * 1.33 Base64\n"
      example: []
      syntax:
        content:
          CSharp: public static string Encrypt(string secretMessage, byte[] cryptKey, byte[] authKey, byte[] nonSecretPayload = null)
          VB: Public Shared Function Encrypt(secretMessage As String, cryptKey As Byte(), authKey As Byte(), nonSecretPayload As Byte() = Nothing) As String
        parameters:
        - id: secretMessage
          type: System.String
          description: The secret message.
        - id: cryptKey
          type: System.Byte[]
          description: The crypt key.
        - id: authKey
          type: System.Byte[]
          description: The auth key.
        - id: nonSecretPayload
          type: System.Byte[]
          description: (Optional) Non-Secret Payload.
        return:
          type: System.String
          description: "\nEncrypted Message\n"
      overload: AstarLibrary.Core.Cipher.Encrypt*
      exceptions:
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: Secret Message Required!;secretMessage
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.ArgumentException: 
    - id: AstarLibrary.Core.Cipher.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
      commentId: M:AstarLibrary.Core.Cipher.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
      language: CSharp
      name:
        CSharp: Encrypt(Byte[], Byte[], Byte[], Byte[])
        VB: Encrypt(Byte(), Byte(), Byte(), Byte())
      nameWithType:
        CSharp: Cipher.Encrypt(Byte[], Byte[], Byte[], Byte[])
        VB: Cipher.Encrypt(Byte(), Byte(), Byte(), Byte())
      qualifiedName:
        CSharp: AstarLibrary.Core.Cipher.Encrypt(System.Byte[], System.Byte[], System.Byte[], System.Byte[])
        VB: AstarLibrary.Core.Cipher.Encrypt(System.Byte(), System.Byte(), System.Byte(), System.Byte())
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Encrypt
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
        startLine: 79
      summary: "\nAdvanced Encryption System (AES) then Athenthication (HMAC) with bytes\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] Encrypt(byte[] secretMessage, byte[] cryptKey, byte[] authKey, byte[] nonSecretPayload = null)
          VB: Public Shared Function Encrypt(secretMessage As Byte(), cryptKey As Byte(), authKey As Byte(), nonSecretPayload As Byte() = Nothing) As Byte()
        parameters:
        - id: secretMessage
          type: System.Byte[]
          description: ''
        - id: cryptKey
          type: System.Byte[]
          description: ''
        - id: authKey
          type: System.Byte[]
          description: ''
        - id: nonSecretPayload
          type: System.Byte[]
          description: ''
        return:
          type: System.Byte[]
          description: ''
      overload: AstarLibrary.Core.Cipher.Encrypt*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.Cipher.EncryptWithPassword(System.String,System.String,System.Byte[])
      commentId: M:AstarLibrary.Core.Cipher.EncryptWithPassword(System.String,System.String,System.Byte[])
      language: CSharp
      name:
        CSharp: EncryptWithPassword(String, String, Byte[])
        VB: EncryptWithPassword(String, String, Byte())
      nameWithType:
        CSharp: Cipher.EncryptWithPassword(String, String, Byte[])
        VB: Cipher.EncryptWithPassword(String, String, Byte())
      qualifiedName:
        CSharp: AstarLibrary.Core.Cipher.EncryptWithPassword(System.String, System.String, System.Byte[])
        VB: AstarLibrary.Core.Cipher.EncryptWithPassword(System.String, System.String, System.Byte())
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: EncryptWithPassword
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
        startLine: 163
      summary: "\nAdvanced Encryption System (AES) then Authentication (HMAC) of a UTF8 message\nusing Keys derived from a Password (PBKDF2).\n"
      remarks: "\nSignificantly less secure than using random binary keys.\nAdds additional non secret payload for key generation parameters.\n"
      example: []
      syntax:
        content:
          CSharp: public static string EncryptWithPassword(string secretMessage, string password, byte[] nonSecretPayload = null)
          VB: Public Shared Function EncryptWithPassword(secretMessage As String, password As String, nonSecretPayload As Byte() = Nothing) As String
        parameters:
        - id: secretMessage
          type: System.String
          description: The secret message.
        - id: password
          type: System.String
          description: The password.
        - id: nonSecretPayload
          type: System.Byte[]
          description: The non secret payload.
        return:
          type: System.String
          description: "\nEncrypted Message\n"
      overload: AstarLibrary.Core.Cipher.EncryptWithPassword*
      exceptions:
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: password
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.ArgumentException: 
    - id: AstarLibrary.Core.Cipher.EncryptWithPassword(System.Byte[],System.String,System.Byte[])
      commentId: M:AstarLibrary.Core.Cipher.EncryptWithPassword(System.Byte[],System.String,System.Byte[])
      language: CSharp
      name:
        CSharp: EncryptWithPassword(Byte[], String, Byte[])
        VB: EncryptWithPassword(Byte(), String, Byte())
      nameWithType:
        CSharp: Cipher.EncryptWithPassword(Byte[], String, Byte[])
        VB: Cipher.EncryptWithPassword(Byte(), String, Byte())
      qualifiedName:
        CSharp: AstarLibrary.Core.Cipher.EncryptWithPassword(System.Byte[], System.String, System.Byte[])
        VB: AstarLibrary.Core.Cipher.EncryptWithPassword(System.Byte(), System.String, System.Byte())
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: EncryptWithPassword
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
        startLine: 187
      summary: "\nAdvanced Encryption System (AES) then Authentication (HMAC) of a byte array\nusing Keys derived from a Password (PBKDF2).\n"
      remarks: "\nSignificantly less secure than using random binary keys.\nAdds additional non secret payload for key generation parameters.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] EncryptWithPassword(byte[] secretMessage, string password, byte[] nonSecretPayload = null)
          VB: Public Shared Function EncryptWithPassword(secretMessage As Byte(), password As String, nonSecretPayload As Byte() = Nothing) As Byte()
        parameters:
        - id: secretMessage
          type: System.Byte[]
          description: The secret message.
        - id: password
          type: System.String
          description: The password.
        - id: nonSecretPayload
          type: System.Byte[]
          description: The non secret payload.
        return:
          type: System.Byte[]
          description: "\nEncrypted Message\n"
      overload: AstarLibrary.Core.Cipher.EncryptWithPassword*
      exceptions:
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: password
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.ArgumentException: 
    - id: AstarLibrary.Core.Cipher.Decrypt(System.String,System.Byte[],System.Byte[],System.Int32)
      commentId: M:AstarLibrary.Core.Cipher.Decrypt(System.String,System.Byte[],System.Byte[],System.Int32)
      language: CSharp
      name:
        CSharp: Decrypt(String, Byte[], Byte[], Int32)
        VB: Decrypt(String, Byte(), Byte(), Int32)
      nameWithType:
        CSharp: Cipher.Decrypt(String, Byte[], Byte[], Int32)
        VB: Cipher.Decrypt(String, Byte(), Byte(), Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.Cipher.Decrypt(System.String, System.Byte[], System.Byte[], System.Int32)
        VB: AstarLibrary.Core.Cipher.Decrypt(System.String, System.Byte(), System.Byte(), System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Decrypt
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
        startLine: 244
      summary: "\nAuthentication (HMAC) then Decryption (AES) for a secrets UTF8 Message.\n"
      example: []
      syntax:
        content:
          CSharp: public static string Decrypt(string encryptedMessage, byte[] cryptKey, byte[] authKey, int nonSecretPayloadLength = 0)
          VB: Public Shared Function Decrypt(encryptedMessage As String, cryptKey As Byte(), authKey As Byte(), nonSecretPayloadLength As Integer = 0) As String
        parameters:
        - id: encryptedMessage
          type: System.String
          description: The encrypted message.
        - id: cryptKey
          type: System.Byte[]
          description: The crypt key.
        - id: authKey
          type: System.Byte[]
          description: The auth key.
        - id: nonSecretPayloadLength
          type: System.Int32
          description: Length of the non secret payload.
        return:
          type: System.String
          description: "\nDecrypted Message\n"
      overload: AstarLibrary.Core.Cipher.Decrypt*
      exceptions:
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: Encrypted Message Required!;encryptedMessage
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.ArgumentException: 
    - id: AstarLibrary.Core.Cipher.DecryptWithPassword(System.String,System.String,System.Int32)
      commentId: M:AstarLibrary.Core.Cipher.DecryptWithPassword(System.String,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: DecryptWithPassword(String, String, Int32)
        VB: DecryptWithPassword(String, String, Int32)
      nameWithType:
        CSharp: Cipher.DecryptWithPassword(String, String, Int32)
        VB: Cipher.DecryptWithPassword(String, String, Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.Cipher.DecryptWithPassword(System.String, System.String, System.Int32)
        VB: AstarLibrary.Core.Cipher.DecryptWithPassword(System.String, System.String, System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: DecryptWithPassword
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
        startLine: 267
      summary: "\nAuthentication (HMAC) and then Descryption (AES) of a UTF8 Message\nusing keys derived from a password (PBKDF2). \n"
      remarks: "\nSignificantly less secure than using random binary keys.\n"
      example: []
      syntax:
        content:
          CSharp: public static string DecryptWithPassword(string encryptedMessage, string password, int nonSecretPayloadLength = 0)
          VB: Public Shared Function DecryptWithPassword(encryptedMessage As String, password As String, nonSecretPayloadLength As Integer = 0) As String
        parameters:
        - id: encryptedMessage
          type: System.String
          description: The encrypted message.
        - id: password
          type: System.String
          description: The password.
        - id: nonSecretPayloadLength
          type: System.Int32
          description: Length of the non secret payload.
        return:
          type: System.String
          description: "\nDecrypted Message\n"
      overload: AstarLibrary.Core.Cipher.DecryptWithPassword*
      exceptions:
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: Encrypted Message Required!;encryptedMessage
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.ArgumentException: 
    - id: AstarLibrary.Core.Cipher.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.Int32)
      commentId: M:AstarLibrary.Core.Cipher.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.Int32)
      language: CSharp
      name:
        CSharp: Decrypt(Byte[], Byte[], Byte[], Int32)
        VB: Decrypt(Byte(), Byte(), Byte(), Int32)
      nameWithType:
        CSharp: Cipher.Decrypt(Byte[], Byte[], Byte[], Int32)
        VB: Cipher.Decrypt(Byte(), Byte(), Byte(), Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.Cipher.Decrypt(System.Byte[], System.Byte[], System.Byte[], System.Int32)
        VB: AstarLibrary.Core.Cipher.Decrypt(System.Byte(), System.Byte(), System.Byte(), System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Decrypt
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
        startLine: 287
      summary: "\nAuthentication (HMAC) then Decryption (AES) for a secrets byte.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] Decrypt(byte[] encryptedMessage, byte[] cryptKey, byte[] authKey, int nonSecretPayloadLength = 0)
          VB: Public Shared Function Decrypt(encryptedMessage As Byte(), cryptKey As Byte(), authKey As Byte(), nonSecretPayloadLength As Integer = 0) As Byte()
        parameters:
        - id: encryptedMessage
          type: System.Byte[]
          description: The encrypted message.
        - id: cryptKey
          type: System.Byte[]
          description: The crypt key.
        - id: authKey
          type: System.Byte[]
          description: The auth key.
        - id: nonSecretPayloadLength
          type: System.Int32
          description: Length of the non secret payload.
        return:
          type: System.Byte[]
          description: "\nDecrypted Message\n"
      overload: AstarLibrary.Core.Cipher.Decrypt*
      exceptions:
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: Encrypted Message Required!;encryptedMessage
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.ArgumentException: 
    - id: AstarLibrary.Core.Cipher.DecryptWithPassword(System.Byte[],System.String,System.Int32)
      commentId: M:AstarLibrary.Core.Cipher.DecryptWithPassword(System.Byte[],System.String,System.Int32)
      language: CSharp
      name:
        CSharp: DecryptWithPassword(Byte[], String, Int32)
        VB: DecryptWithPassword(Byte(), String, Int32)
      nameWithType:
        CSharp: Cipher.DecryptWithPassword(Byte[], String, Int32)
        VB: Cipher.DecryptWithPassword(Byte(), String, Int32)
      qualifiedName:
        CSharp: AstarLibrary.Core.Cipher.DecryptWithPassword(System.Byte[], System.String, System.Int32)
        VB: AstarLibrary.Core.Cipher.DecryptWithPassword(System.Byte(), System.String, System.Int32)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: DecryptWithPassword
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Cipher.cs
        startLine: 366
      summary: "\nAuthentication (HMAC) then Decryption (AES) for a secrets byte.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] DecryptWithPassword(byte[] encryptedMessage, string password, int nonSecretPayloadLength = 0)
          VB: Public Shared Function DecryptWithPassword(encryptedMessage As Byte(), password As String, nonSecretPayloadLength As Integer = 0) As Byte()
        parameters:
        - id: encryptedMessage
          type: System.Byte[]
          description: The encrypted message.
        - id: password
          type: System.String
        - id: nonSecretPayloadLength
          type: System.Int32
          description: Length of the non secret payload.
        return:
          type: System.Byte[]
          description: "\nDecrypted Message\n"
      overload: AstarLibrary.Core.Cipher.DecryptWithPassword*
      exceptions:
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: Encrypted Message Required!;encryptedMessage
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.ArgumentException: 
  - id: AstarLibrary.Core.Load
    commentId: T:AstarLibrary.Core.Load
    language: CSharp
    name:
      CSharp: Load
      VB: Load
    nameWithType:
      CSharp: Load
      VB: Load
    qualifiedName:
      CSharp: AstarLibrary.Core.Load
      VB: AstarLibrary.Core.Load
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Load
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Load.cs
      startLine: 18
    summary: "\nInterface of Load\n"
    example: []
    syntax:
      content:
        CSharp: public static class Load
        VB: Public Module Load
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items: []
  - id: AstarLibrary.Core.Load.LoadHandler
    commentId: T:AstarLibrary.Core.Load.LoadHandler
    language: CSharp
    name:
      CSharp: Load.LoadHandler
      VB: Load.LoadHandler
    nameWithType:
      CSharp: Load.LoadHandler
      VB: Load.LoadHandler
    qualifiedName:
      CSharp: AstarLibrary.Core.Load.LoadHandler
      VB: AstarLibrary.Core.Load.LoadHandler
    type: Delegate
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: LoadHandler
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Load.cs
      startLine: 21
    syntax:
      content:
        CSharp: public delegate void LoadHandler(string message);
        VB: Public Delegate Sub LoadHandler(message As String)
      parameters:
      - id: message
        type: System.String
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: AstarLibrary.Core.Memo
    commentId: T:AstarLibrary.Core.Memo
    language: CSharp
    name:
      CSharp: Memo
      VB: Memo
    nameWithType:
      CSharp: Memo
      VB: Memo
    qualifiedName:
      CSharp: AstarLibrary.Core.Memo
      VB: AstarLibrary.Core.Memo
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Memo
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Memo
        VB: >-
          <Serializable>

          Public Class Memo
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AstarLibrary.Core.Memo.message
      commentId: P:AstarLibrary.Core.Memo.message
      language: CSharp
      name:
        CSharp: message
        VB: message
      nameWithType:
        CSharp: Memo.message
        VB: Memo.message
      qualifiedName:
        CSharp: AstarLibrary.Core.Memo.message
        VB: AstarLibrary.Core.Memo.message
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: message
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
        startLine: 13
      syntax:
        content:
          CSharp: public string message { get; set; }
          VB: Public Property message As String
        parameters: []
        return:
          type: System.String
      overload: AstarLibrary.Core.Memo.message*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AstarLibrary.Core.Memo.addional
      commentId: P:AstarLibrary.Core.Memo.addional
      language: CSharp
      name:
        CSharp: addional
        VB: addional
      nameWithType:
        CSharp: Memo.addional
        VB: Memo.addional
      qualifiedName:
        CSharp: AstarLibrary.Core.Memo.addional
        VB: AstarLibrary.Core.Memo.addional
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: addional
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
        startLine: 14
      syntax:
        content:
          CSharp: public string addional { get; set; }
          VB: Public Property addional As String
        parameters: []
        return:
          type: System.String
      overload: AstarLibrary.Core.Memo.addional*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AstarLibrary.Core.Memo.code
      commentId: P:AstarLibrary.Core.Memo.code
      language: CSharp
      name:
        CSharp: code
        VB: code
      nameWithType:
        CSharp: Memo.code
        VB: Memo.code
      qualifiedName:
        CSharp: AstarLibrary.Core.Memo.code
        VB: AstarLibrary.Core.Memo.code
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: code
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
        startLine: 15
      syntax:
        content:
          CSharp: public string code { get; set; }
          VB: Public Property code As String
        parameters: []
        return:
          type: System.String
      overload: AstarLibrary.Core.Memo.code*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AstarLibrary.Core.Memo.group
      commentId: P:AstarLibrary.Core.Memo.group
      language: CSharp
      name:
        CSharp: group
        VB: group
      nameWithType:
        CSharp: Memo.group
        VB: Memo.group
      qualifiedName:
        CSharp: AstarLibrary.Core.Memo.group
        VB: AstarLibrary.Core.Memo.group
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: group
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
        startLine: 16
      syntax:
        content:
          CSharp: public string group { get; set; }
          VB: Public Property group As String
        parameters: []
        return:
          type: System.String
      overload: AstarLibrary.Core.Memo.group*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AstarLibrary.Core.Memo.name
      commentId: P:AstarLibrary.Core.Memo.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: Memo.name
        VB: Memo.name
      qualifiedName:
        CSharp: AstarLibrary.Core.Memo.name
        VB: AstarLibrary.Core.Memo.name
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: name
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
        startLine: 17
      syntax:
        content:
          CSharp: public string name { get; set; }
          VB: Public Property name As String
        parameters: []
        return:
          type: System.String
      overload: AstarLibrary.Core.Memo.name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AstarLibrary.Core.Memo.Color
      commentId: P:AstarLibrary.Core.Memo.Color
      language: CSharp
      name:
        CSharp: Color
        VB: Color
      nameWithType:
        CSharp: Memo.Color
        VB: Memo.Color
      qualifiedName:
        CSharp: AstarLibrary.Core.Memo.Color
        VB: AstarLibrary.Core.Memo.Color
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Color
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
        startLine: 18
      syntax:
        content:
          CSharp: public Color Color { get; set; }
          VB: Public Property Color As Color
        parameters: []
        return:
          type: UnityEngine.Color
      overload: AstarLibrary.Core.Memo.Color*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AstarLibrary.Core.Memo.Source
      commentId: P:AstarLibrary.Core.Memo.Source
      language: CSharp
      name:
        CSharp: Source
        VB: Source
      nameWithType:
        CSharp: Memo.Source
        VB: Memo.Source
      qualifiedName:
        CSharp: AstarLibrary.Core.Memo.Source
        VB: AstarLibrary.Core.Memo.Source
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Source
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
        startLine: 19
      syntax:
        content:
          CSharp: public ReportSource Source { get; set; }
          VB: Public Property Source As ReportSource
        parameters: []
        return:
          type: AstarLibrary.Core.ReportSource
      overload: AstarLibrary.Core.Memo.Source*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AstarLibrary.Core.Memo.Type
      commentId: P:AstarLibrary.Core.Memo.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: Memo.Type
        VB: Memo.Type
      qualifiedName:
        CSharp: AstarLibrary.Core.Memo.Type
        VB: AstarLibrary.Core.Memo.Type
      type: Property
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Type
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
        startLine: 20
      syntax:
        content:
          CSharp: public ReportType Type { get; set; }
          VB: Public Property Type As ReportType
        parameters: []
        return:
          type: AstarLibrary.Core.ReportType
      overload: AstarLibrary.Core.Memo.Type*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AstarLibrary.Core.Memo.#ctor
      commentId: M:AstarLibrary.Core.Memo.#ctor
      language: CSharp
      name:
        CSharp: Memo()
        VB: Memo()
      nameWithType:
        CSharp: Memo.Memo()
        VB: Memo.Memo()
      qualifiedName:
        CSharp: AstarLibrary.Core.Memo.Memo()
        VB: AstarLibrary.Core.Memo.Memo()
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
        startLine: 24
      syntax:
        content:
          CSharp: public Memo()
          VB: Public Sub New
      overload: AstarLibrary.Core.Memo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AstarLibrary.Core.Memo.#ctor(System.String,System.String,System.String,System.String,System.String,UnityEngine.Color,AstarLibrary.Core.ReportSource,AstarLibrary.Core.ReportType)
      commentId: M:AstarLibrary.Core.Memo.#ctor(System.String,System.String,System.String,System.String,System.String,UnityEngine.Color,AstarLibrary.Core.ReportSource,AstarLibrary.Core.ReportType)
      language: CSharp
      name:
        CSharp: Memo(String, String, String, String, String, Color, ReportSource, ReportType)
        VB: Memo(String, String, String, String, String, Color, ReportSource, ReportType)
      nameWithType:
        CSharp: Memo.Memo(String, String, String, String, String, Color, ReportSource, ReportType)
        VB: Memo.Memo(String, String, String, String, String, Color, ReportSource, ReportType)
      qualifiedName:
        CSharp: AstarLibrary.Core.Memo.Memo(System.String, System.String, System.String, System.String, System.String, UnityEngine.Color, AstarLibrary.Core.ReportSource, AstarLibrary.Core.ReportType)
        VB: AstarLibrary.Core.Memo.Memo(System.String, System.String, System.String, System.String, System.String, UnityEngine.Color, AstarLibrary.Core.ReportSource, AstarLibrary.Core.ReportType)
      type: Constructor
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: .ctor
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Memo.cs
        startLine: 26
      syntax:
        content:
          CSharp: public Memo(string message, string addional, string code, string group, string name, Color color, ReportSource source, ReportType type)
          VB: Public Sub New(message As String, addional As String, code As String, group As String, name As String, color As Color, source As ReportSource, type As ReportType)
        parameters:
        - id: message
          type: System.String
        - id: addional
          type: System.String
        - id: code
          type: System.String
        - id: group
          type: System.String
        - id: name
          type: System.String
        - id: color
          type: UnityEngine.Color
        - id: source
          type: AstarLibrary.Core.ReportSource
        - id: type
          type: AstarLibrary.Core.ReportType
      overload: AstarLibrary.Core.Memo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AstarLibrary.Core.PlayerPref
    commentId: T:AstarLibrary.Core.PlayerPref
    language: CSharp
    name:
      CSharp: PlayerPref
      VB: PlayerPref
    nameWithType:
      CSharp: PlayerPref
      VB: PlayerPref
    qualifiedName:
      CSharp: AstarLibrary.Core.PlayerPref
      VB: AstarLibrary.Core.PlayerPref
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: PlayerPref
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\PlayerPref.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public static class PlayerPref
        VB: >-
          <Serializable>

          Public Module PlayerPref
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AstarLibrary.Core.PlayerPref.Set``1(System.String,``0)
      commentId: M:AstarLibrary.Core.PlayerPref.Set``1(System.String,``0)
      language: CSharp
      name:
        CSharp: Set<T>(String, T)
        VB: Set(Of T)(String, T)
      nameWithType:
        CSharp: PlayerPref.Set<T>(String, T)
        VB: PlayerPref.Set(Of T)(String, T)
      qualifiedName:
        CSharp: AstarLibrary.Core.PlayerPref.Set<T>(System.String, T)
        VB: AstarLibrary.Core.PlayerPref.Set(Of T)(System.String, T)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Set
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\PlayerPref.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static void Set<T>(string key, T value)
          VB: Public Shared Sub Set(Of T)(key As String, value As T)
        parameters:
        - id: key
          type: System.String
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: AstarLibrary.Core.PlayerPref.Set*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.PlayerPref.Get``1(System.String,``0)
      commentId: M:AstarLibrary.Core.PlayerPref.Get``1(System.String,``0)
      language: CSharp
      name:
        CSharp: Get<T>(String, T)
        VB: Get(Of T)(String, T)
      nameWithType:
        CSharp: PlayerPref.Get<T>(String, T)
        VB: PlayerPref.Get(Of T)(String, T)
      qualifiedName:
        CSharp: AstarLibrary.Core.PlayerPref.Get<T>(System.String, T)
        VB: AstarLibrary.Core.PlayerPref.Get(Of T)(System.String, T)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Get
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\PlayerPref.cs
        startLine: 45
      syntax:
        content:
          CSharp: public static T Get<T>(string key, T defaultValue = null)
          VB: Public Shared Function Get(Of T)(key As String, defaultValue As T = Nothing) As T
        parameters:
        - id: key
          type: System.String
        - id: defaultValue
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: AstarLibrary.Core.PlayerPref.Get*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AstarLibrary.Core.Report
    commentId: T:AstarLibrary.Core.Report
    language: CSharp
    name:
      CSharp: Report
      VB: Report
    nameWithType:
      CSharp: Report
      VB: Report
    qualifiedName:
      CSharp: AstarLibrary.Core.Report
      VB: AstarLibrary.Core.Report
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Report
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Report.cs
      startLine: 14
    syntax:
      content:
        CSharp: public static class Report
        VB: Public Module Report
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AstarLibrary.Core.Report.SetPath(System.String)
      commentId: M:AstarLibrary.Core.Report.SetPath(System.String)
      language: CSharp
      name:
        CSharp: SetPath(String)
        VB: SetPath(String)
      nameWithType:
        CSharp: Report.SetPath(String)
        VB: Report.SetPath(String)
      qualifiedName:
        CSharp: AstarLibrary.Core.Report.SetPath(System.String)
        VB: AstarLibrary.Core.Report.SetPath(System.String)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetPath
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Report.cs
        startLine: 81
      syntax:
        content:
          CSharp: public static void SetPath(string path)
          VB: Public Shared Sub SetPath(path As String)
        parameters:
        - id: path
          type: System.String
      overload: AstarLibrary.Core.Report.SetPath*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.Report.SetRegister(System.Boolean)
      commentId: M:AstarLibrary.Core.Report.SetRegister(System.Boolean)
      language: CSharp
      name:
        CSharp: SetRegister(Boolean)
        VB: SetRegister(Boolean)
      nameWithType:
        CSharp: Report.SetRegister(Boolean)
        VB: Report.SetRegister(Boolean)
      qualifiedName:
        CSharp: AstarLibrary.Core.Report.SetRegister(System.Boolean)
        VB: AstarLibrary.Core.Report.SetRegister(System.Boolean)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SetRegister
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Report.cs
        startLine: 82
      syntax:
        content:
          CSharp: public static void SetRegister(bool isOn)
          VB: Public Shared Sub SetRegister(isOn As Boolean)
        parameters:
        - id: isOn
          type: System.Boolean
      overload: AstarLibrary.Core.Report.SetRegister*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AstarLibrary.Core.Stamp
    commentId: T:AstarLibrary.Core.Stamp
    language: CSharp
    name:
      CSharp: Stamp
      VB: Stamp
    nameWithType:
      CSharp: Stamp
      VB: Stamp
    qualifiedName:
      CSharp: AstarLibrary.Core.Stamp
      VB: AstarLibrary.Core.Stamp
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Stamp
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Stamp.cs
      startLine: 9
    syntax:
      content:
        CSharp: public static class Stamp
        VB: Public Module Stamp
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AstarLibrary.Core.Stamp.SystemInitializeSequency
      commentId: M:AstarLibrary.Core.Stamp.SystemInitializeSequency
      language: CSharp
      name:
        CSharp: SystemInitializeSequency()
        VB: SystemInitializeSequency()
      nameWithType:
        CSharp: Stamp.SystemInitializeSequency()
        VB: Stamp.SystemInitializeSequency()
      qualifiedName:
        CSharp: AstarLibrary.Core.Stamp.SystemInitializeSequency()
        VB: AstarLibrary.Core.Stamp.SystemInitializeSequency()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: SystemInitializeSequency
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Stamp.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static float SystemInitializeSequency()
          VB: Public Shared Function SystemInitializeSequency As Single
        return:
          type: System.Single
      overload: AstarLibrary.Core.Stamp.SystemInitializeSequency*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.Stamp.Clock
      commentId: F:AstarLibrary.Core.Stamp.Clock
      language: CSharp
      name:
        CSharp: Clock
        VB: Clock
      nameWithType:
        CSharp: Stamp.Clock
        VB: Stamp.Clock
      qualifiedName:
        CSharp: AstarLibrary.Core.Stamp.Clock
        VB: AstarLibrary.Core.Stamp.Clock
      type: Field
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: Clock
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Stamp.cs
        startLine: 18
      syntax:
        content:
          CSharp: public static Stopwatch Clock
          VB: Public Shared Clock As Stopwatch
        return:
          type: System.Diagnostics.Stopwatch
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.Stamp.StartTimer
      commentId: M:AstarLibrary.Core.Stamp.StartTimer
      language: CSharp
      name:
        CSharp: StartTimer()
        VB: StartTimer()
      nameWithType:
        CSharp: Stamp.StartTimer()
        VB: Stamp.StartTimer()
      qualifiedName:
        CSharp: AstarLibrary.Core.Stamp.StartTimer()
        VB: AstarLibrary.Core.Stamp.StartTimer()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: StartTimer
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Stamp.cs
        startLine: 22
      syntax:
        content:
          CSharp: public static string StartTimer()
          VB: Public Shared Function StartTimer As String
        return:
          type: System.String
      overload: AstarLibrary.Core.Stamp.StartTimer*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.Stamp.MarktTime
      commentId: M:AstarLibrary.Core.Stamp.MarktTime
      language: CSharp
      name:
        CSharp: MarktTime()
        VB: MarktTime()
      nameWithType:
        CSharp: Stamp.MarktTime()
        VB: Stamp.MarktTime()
      qualifiedName:
        CSharp: AstarLibrary.Core.Stamp.MarktTime()
        VB: AstarLibrary.Core.Stamp.MarktTime()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: MarktTime
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Stamp.cs
        startLine: 28
      syntax:
        content:
          CSharp: public static string MarktTime()
          VB: Public Shared Function MarktTime As String
        return:
          type: System.String
      overload: AstarLibrary.Core.Stamp.MarktTime*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.Stamp.FinishTimer
      commentId: M:AstarLibrary.Core.Stamp.FinishTimer
      language: CSharp
      name:
        CSharp: FinishTimer()
        VB: FinishTimer()
      nameWithType:
        CSharp: Stamp.FinishTimer()
        VB: Stamp.FinishTimer()
      qualifiedName:
        CSharp: AstarLibrary.Core.Stamp.FinishTimer()
        VB: AstarLibrary.Core.Stamp.FinishTimer()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: FinishTimer
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Stamp.cs
        startLine: 29
      syntax:
        content:
          CSharp: public static string FinishTimer()
          VB: Public Shared Function FinishTimer As String
        return:
          type: System.String
      overload: AstarLibrary.Core.Stamp.FinishTimer*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.Stamp.MarkTimeNow
      commentId: M:AstarLibrary.Core.Stamp.MarkTimeNow
      language: CSharp
      name:
        CSharp: MarkTimeNow()
        VB: MarkTimeNow()
      nameWithType:
        CSharp: Stamp.MarkTimeNow()
        VB: Stamp.MarkTimeNow()
      qualifiedName:
        CSharp: AstarLibrary.Core.Stamp.MarkTimeNow()
        VB: AstarLibrary.Core.Stamp.MarkTimeNow()
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: MarkTimeNow
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Stamp.cs
        startLine: 35
      syntax:
        content:
          CSharp: public static string MarkTimeNow()
          VB: Public Shared Function MarkTimeNow As String
        return:
          type: System.String
      overload: AstarLibrary.Core.Stamp.MarkTimeNow*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AstarLibrary.Core.Utility
    commentId: T:AstarLibrary.Core.Utility
    language: CSharp
    name:
      CSharp: Utility
      VB: Utility
    nameWithType:
      CSharp: Utility
      VB: Utility
    qualifiedName:
      CSharp: AstarLibrary.Core.Utility
      VB: AstarLibrary.Core.Utility
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Utility
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Utility.cs
      startLine: 9
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public static class Utility
        VB: >-
          <Serializable>

          Public Module Utility
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items: []
  - id: AstarLibrary.Core.Utility.Cast
    commentId: T:AstarLibrary.Core.Utility.Cast
    language: CSharp
    name:
      CSharp: Utility.Cast
      VB: Utility.Cast
    nameWithType:
      CSharp: Utility.Cast
      VB: Utility.Cast
    qualifiedName:
      CSharp: AstarLibrary.Core.Utility.Cast
      VB: AstarLibrary.Core.Utility.Cast
    type: Class
    assemblies:
    - EssencialTools_Core
    namespace: AstarLibrary.Core
    source:
      id: Cast
      path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Utility.cs
      startLine: 15
    summary: "\nConverts a data type to another data type.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Cast
        VB: Public Module Cast
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AstarLibrary.Core.Utility.Cast.To``1(System.Object,``0)
      commentId: M:AstarLibrary.Core.Utility.Cast.To``1(System.Object,``0)
      language: CSharp
      name:
        CSharp: To<T>(Object, T)
        VB: To(Of T)(Object, T)
      nameWithType:
        CSharp: Utility.Cast.To<T>(Object, T)
        VB: Utility.Cast.To(Of T)(Object, T)
      qualifiedName:
        CSharp: AstarLibrary.Core.Utility.Cast.To<T>(System.Object, T)
        VB: AstarLibrary.Core.Utility.Cast.To(Of T)(System.Object, T)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: To
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Utility.cs
        startLine: 25
      summary: "\nConverts input to Type of default value or given as typeparam T\n"
      example: []
      syntax:
        content:
          CSharp: public static T To<T>(object input, T defaultValue)
          VB: Public Shared Function To(Of T)(input As Object, defaultValue As T) As T
        parameters:
        - id: input
          type: System.Object
          description: Input that need to be converted to specified type
        - id: defaultValue
          type: '{T}'
          description: defaultValue will be returned in case of value is null or any exception occures
        typeParameters:
        - id: T
          description: typeparam is the type in which value will be returned, it could be any type eg. int, string, bool, decimal etc.
        return:
          type: '{T}'
          description: Input is converted in Type of default value or given as typeparam T and returned
      overload: AstarLibrary.Core.Utility.Cast.To*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AstarLibrary.Core.Utility.Cast.To``1(System.Object)
      commentId: M:AstarLibrary.Core.Utility.Cast.To``1(System.Object)
      language: CSharp
      name:
        CSharp: To<T>(Object)
        VB: To(Of T)(Object)
      nameWithType:
        CSharp: Utility.Cast.To<T>(Object)
        VB: Utility.Cast.To(Of T)(Object)
      qualifiedName:
        CSharp: AstarLibrary.Core.Utility.Cast.To<T>(System.Object)
        VB: AstarLibrary.Core.Utility.Cast.To(Of T)(System.Object)
      type: Method
      assemblies:
      - EssencialTools_Core
      namespace: AstarLibrary.Core
      source:
        id: To
        path: C:\Users\rafae\OneDrive\Desktop\Organizar\Creation\EssencialTools_Core\EssencialTools_Core\Utilitary\Utility.cs
        startLine: 54
      summary: "\nConverts input to Type of typeparam T\n"
      example: []
      syntax:
        content:
          CSharp: public static T To<T>(object input)
          VB: Public Shared Function To(Of T)(input As Object) As T
        parameters:
        - id: input
          type: System.Object
          description: Input that need to be converted to specified type
        typeParameters:
        - id: T
          description: typeparam is the type in which value will be returned, it could be any type eg. int, string, bool, decimal etc.
        return:
          type: '{T}'
          description: Input is converted in Type of default value or given as typeparam T and returned
      overload: AstarLibrary.Core.Utility.Cast.To*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  UnityEngine:
    name:
      CSharp:
      - name: UnityEngine
        nameWithType: UnityEngine
        qualifiedName: UnityEngine
        isExternal: true
      VB:
      - name: UnityEngine
        nameWithType: UnityEngine
        qualifiedName: UnityEngine
    isDefinition: true
    commentId: N:UnityEngine
  UnityEngine.PropertyAttribute:
    name:
      CSharp:
      - id: UnityEngine.PropertyAttribute
        name: PropertyAttribute
        nameWithType: PropertyAttribute
        qualifiedName: UnityEngine.PropertyAttribute
        isExternal: true
      VB:
      - id: UnityEngine.PropertyAttribute
        name: PropertyAttribute
        nameWithType: PropertyAttribute
        qualifiedName: UnityEngine.PropertyAttribute
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.PropertyAttribute
  UnityEngine.PropertyAttribute.order:
    name:
      CSharp:
      - id: UnityEngine.PropertyAttribute.order
        name: order
        nameWithType: PropertyAttribute.order
        qualifiedName: UnityEngine.PropertyAttribute.order
        isExternal: true
      VB:
      - id: UnityEngine.PropertyAttribute.order
        name: order
        nameWithType: PropertyAttribute.order
        qualifiedName: UnityEngine.PropertyAttribute.order
        isExternal: true
    isDefinition: true
    parent: UnityEngine.PropertyAttribute
    commentId: P:UnityEngine.PropertyAttribute.order
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Attribute:
    name:
      CSharp:
      - id: System.Attribute
        name: Attribute
        nameWithType: Attribute
        qualifiedName: System.Attribute
        isExternal: true
      VB:
      - id: System.Attribute
        name: Attribute
        nameWithType: Attribute
        qualifiedName: System.Attribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Attribute
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.Module):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.Equals(System.Object):
    name:
      CSharp:
      - id: System.Attribute.Equals(System.Object)
        name: Equals
        nameWithType: Attribute.Equals
        qualifiedName: System.Attribute.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.Equals(System.Object)
        name: Equals
        nameWithType: Attribute.Equals
        qualifiedName: System.Attribute.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.Equals(System.Object)
  System.Attribute.GetHashCode:
    name:
      CSharp:
      - id: System.Attribute.GetHashCode
        name: GetHashCode
        nameWithType: Attribute.GetHashCode
        qualifiedName: System.Attribute.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetHashCode
        name: GetHashCode
        nameWithType: Attribute.GetHashCode
        qualifiedName: System.Attribute.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetHashCode
  System.Attribute.Match(System.Object):
    name:
      CSharp:
      - id: System.Attribute.Match(System.Object)
        name: Match
        nameWithType: Attribute.Match
        qualifiedName: System.Attribute.Match
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.Match(System.Object)
        name: Match
        nameWithType: Attribute.Match
        qualifiedName: System.Attribute.Match
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.Match(System.Object)
  System.Attribute.IsDefaultAttribute:
    name:
      CSharp:
      - id: System.Attribute.IsDefaultAttribute
        name: IsDefaultAttribute
        nameWithType: Attribute.IsDefaultAttribute
        qualifiedName: System.Attribute.IsDefaultAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefaultAttribute
        name: IsDefaultAttribute
        nameWithType: Attribute.IsDefaultAttribute
        qualifiedName: System.Attribute.IsDefaultAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefaultAttribute
  System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@):
    name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
        name: _Attribute.GetTypeInfoCount
        nameWithType: Attribute._Attribute.GetTypeInfoCount
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
        name: System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr):
    name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
        name: _Attribute.GetTypeInfo
        nameWithType: Attribute._Attribute.GetTypeInfo
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
        name: System.Runtime.InteropServices._Attribute.GetTypeInfo
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  ? System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  : name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
        name: _Attribute.GetIDsOfNames
        nameWithType: Attribute._Attribute.GetIDsOfNames
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
        name: System.Runtime.InteropServices._Attribute.GetIDsOfNames
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  ? System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  : name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
        name: _Attribute.Invoke
        nameWithType: Attribute._Attribute.Invoke
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
        name: System.Runtime.InteropServices._Attribute.Invoke
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.Invoke
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  System.Attribute.TypeId:
    name:
      CSharp:
      - id: System.Attribute.TypeId
        name: TypeId
        nameWithType: Attribute.TypeId
        qualifiedName: System.Attribute.TypeId
        isExternal: true
      VB:
      - id: System.Attribute.TypeId
        name: TypeId
        nameWithType: Attribute.TypeId
        qualifiedName: System.Attribute.TypeId
        isExternal: true
    isDefinition: true
    parent: System.Attribute
    commentId: P:System.Attribute.TypeId
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Runtime.InteropServices:
    name:
      CSharp:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
        isExternal: true
      VB:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
    isDefinition: true
    commentId: N:System.Runtime.InteropServices
  System.Runtime.InteropServices._Attribute:
    name:
      CSharp:
      - id: System.Runtime.InteropServices._Attribute
        name: _Attribute
        nameWithType: _Attribute
        qualifiedName: System.Runtime.InteropServices._Attribute
        isExternal: true
      VB:
      - id: System.Runtime.InteropServices._Attribute
        name: _Attribute
        nameWithType: _Attribute
        qualifiedName: System.Runtime.InteropServices._Attribute
        isExternal: true
    isDefinition: true
    parent: System.Runtime.InteropServices
    commentId: T:System.Runtime.InteropServices._Attribute
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  AstarLibrary.Core.ConditionalFieldAttribute.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.ConditionalFieldAttribute.#ctor*
        name: ConditionalFieldAttribute
        nameWithType: ConditionalFieldAttribute.ConditionalFieldAttribute
        qualifiedName: AstarLibrary.Core.ConditionalFieldAttribute.ConditionalFieldAttribute
      VB:
      - id: AstarLibrary.Core.ConditionalFieldAttribute.#ctor*
        name: ConditionalFieldAttribute
        nameWithType: ConditionalFieldAttribute.ConditionalFieldAttribute
        qualifiedName: AstarLibrary.Core.ConditionalFieldAttribute.ConditionalFieldAttribute
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.ConditionalFieldAttribute.#ctor
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  UnityEngine.MonoBehaviour:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: UnityEngine.MonoBehaviour
        isExternal: true
      VB:
      - id: UnityEngine.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: UnityEngine.MonoBehaviour
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.MonoBehaviour
  AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible*:
    name:
      CSharp:
      - id: AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible*
        name: CheckBehaviourPropertyVisible
        nameWithType: ConditionalFieldAttribute.CheckBehaviourPropertyVisible
        qualifiedName: AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible
      VB:
      - id: AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible*
        name: CheckBehaviourPropertyVisible
        nameWithType: ConditionalFieldAttribute.CheckBehaviourPropertyVisible
        qualifiedName: AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.ConditionalFieldAttribute.CheckBehaviourPropertyVisible
  UnityEditor:
    name:
      CSharp:
      - name: UnityEditor
        nameWithType: UnityEditor
        qualifiedName: UnityEditor
        isExternal: true
      VB:
      - name: UnityEditor
        nameWithType: UnityEditor
        qualifiedName: UnityEditor
    isDefinition: true
    commentId: N:UnityEditor
  UnityEditor.SerializedProperty:
    name:
      CSharp:
      - id: UnityEditor.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: UnityEditor.SerializedProperty
        isExternal: true
      VB:
      - id: UnityEditor.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: UnityEditor.SerializedProperty
        isExternal: true
    isDefinition: true
    parent: UnityEditor
    commentId: T:UnityEditor.SerializedProperty
  AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible*:
    name:
      CSharp:
      - id: AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible*
        name: CheckPropertyVisible
        nameWithType: ConditionalFieldAttribute.CheckPropertyVisible
        qualifiedName: AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible
      VB:
      - id: AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible*
        name: CheckPropertyVisible
        nameWithType: ConditionalFieldAttribute.CheckPropertyVisible
        qualifiedName: AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.ConditionalFieldAttribute.CheckPropertyVisible
  AstarLibrary.Core.ConditionalFieldAttribute:
    name:
      CSharp:
      - id: AstarLibrary.Core.ConditionalFieldAttribute
        name: ConditionalFieldAttribute
        nameWithType: ConditionalFieldAttribute
        qualifiedName: AstarLibrary.Core.ConditionalFieldAttribute
      VB:
      - id: AstarLibrary.Core.ConditionalFieldAttribute
        name: ConditionalFieldAttribute
        nameWithType: ConditionalFieldAttribute
        qualifiedName: AstarLibrary.Core.ConditionalFieldAttribute
    isDefinition: true
    commentId: T:AstarLibrary.Core.ConditionalFieldAttribute
  System.AttributeUsageAttribute:
    name:
      CSharp:
      - id: System.AttributeUsageAttribute
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute
        isExternal: true
      VB:
      - id: System.AttributeUsageAttribute
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.AttributeUsageAttribute
  System.AttributeUsageAttribute.#ctor(System.AttributeTargets):
    name:
      CSharp:
      - id: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute.AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute.AttributeUsageAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute.AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute.AttributeUsageAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.AttributeUsageAttribute
    commentId: M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
  System.AttributeTargets:
    name:
      CSharp:
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      VB:
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.AttributeTargets
  AstarLibrary.Core.EnumToToolbarAttribute:
    name:
      CSharp:
      - id: AstarLibrary.Core.EnumToToolbarAttribute
        name: EnumToToolbarAttribute
        nameWithType: EnumToToolbarAttribute
        qualifiedName: AstarLibrary.Core.EnumToToolbarAttribute
      VB:
      - id: AstarLibrary.Core.EnumToToolbarAttribute
        name: EnumToToolbarAttribute
        nameWithType: EnumToToolbarAttribute
        qualifiedName: AstarLibrary.Core.EnumToToolbarAttribute
    isDefinition: true
    commentId: T:AstarLibrary.Core.EnumToToolbarAttribute
  AstarLibrary.Core.HideScriptFieldAttribute:
    name:
      CSharp:
      - id: AstarLibrary.Core.HideScriptFieldAttribute
        name: HideScriptFieldAttribute
        nameWithType: HideScriptFieldAttribute
        qualifiedName: AstarLibrary.Core.HideScriptFieldAttribute
      VB:
      - id: AstarLibrary.Core.HideScriptFieldAttribute
        name: HideScriptFieldAttribute
        nameWithType: HideScriptFieldAttribute
        qualifiedName: AstarLibrary.Core.HideScriptFieldAttribute
    isDefinition: true
    commentId: T:AstarLibrary.Core.HideScriptFieldAttribute
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AstarLibrary.Core.LabeledArrayAttribute.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.LabeledArrayAttribute.#ctor*
        name: LabeledArrayAttribute
        nameWithType: LabeledArrayAttribute.LabeledArrayAttribute
        qualifiedName: AstarLibrary.Core.LabeledArrayAttribute.LabeledArrayAttribute
      VB:
      - id: AstarLibrary.Core.LabeledArrayAttribute.#ctor*
        name: LabeledArrayAttribute
        nameWithType: LabeledArrayAttribute.LabeledArrayAttribute
        qualifiedName: AstarLibrary.Core.LabeledArrayAttribute.LabeledArrayAttribute
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.LabeledArrayAttribute.#ctor
  System.Type:
    name:
      CSharp:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      VB:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Type
  AstarLibrary.Core.LabeledArrayAttribute:
    name:
      CSharp:
      - id: AstarLibrary.Core.LabeledArrayAttribute
        name: LabeledArrayAttribute
        nameWithType: LabeledArrayAttribute
        qualifiedName: AstarLibrary.Core.LabeledArrayAttribute
      VB:
      - id: AstarLibrary.Core.LabeledArrayAttribute
        name: LabeledArrayAttribute
        nameWithType: LabeledArrayAttribute
        qualifiedName: AstarLibrary.Core.LabeledArrayAttribute
    isDefinition: true
    commentId: T:AstarLibrary.Core.LabeledArrayAttribute
  AstarLibrary.Core.LabeledAttribute.Name*:
    name:
      CSharp:
      - id: AstarLibrary.Core.LabeledAttribute.Name*
        name: Name
        nameWithType: LabeledAttribute.Name
        qualifiedName: AstarLibrary.Core.LabeledAttribute.Name
      VB:
      - id: AstarLibrary.Core.LabeledAttribute.Name*
        name: Name
        nameWithType: LabeledAttribute.Name
        qualifiedName: AstarLibrary.Core.LabeledAttribute.Name
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.LabeledAttribute.Name
  AstarLibrary.Core.LabeledAttribute.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.LabeledAttribute.#ctor*
        name: LabeledAttribute
        nameWithType: LabeledAttribute.LabeledAttribute
        qualifiedName: AstarLibrary.Core.LabeledAttribute.LabeledAttribute
      VB:
      - id: AstarLibrary.Core.LabeledAttribute.#ctor*
        name: LabeledAttribute
        nameWithType: LabeledAttribute.LabeledAttribute
        qualifiedName: AstarLibrary.Core.LabeledAttribute.LabeledAttribute
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.LabeledAttribute.#ctor
  AstarLibrary.Core.LabeledAttribute:
    name:
      CSharp:
      - id: AstarLibrary.Core.LabeledAttribute
        name: LabeledAttribute
        nameWithType: LabeledAttribute
        qualifiedName: AstarLibrary.Core.LabeledAttribute
      VB:
      - id: AstarLibrary.Core.LabeledAttribute
        name: LabeledAttribute
        nameWithType: LabeledAttribute
        qualifiedName: AstarLibrary.Core.LabeledAttribute
    isDefinition: true
    commentId: T:AstarLibrary.Core.LabeledAttribute
  AstarLibrary.Core.OnValueChangedAttribute.CallbackName*:
    name:
      CSharp:
      - id: AstarLibrary.Core.OnValueChangedAttribute.CallbackName*
        name: CallbackName
        nameWithType: OnValueChangedAttribute.CallbackName
        qualifiedName: AstarLibrary.Core.OnValueChangedAttribute.CallbackName
      VB:
      - id: AstarLibrary.Core.OnValueChangedAttribute.CallbackName*
        name: CallbackName
        nameWithType: OnValueChangedAttribute.CallbackName
        qualifiedName: AstarLibrary.Core.OnValueChangedAttribute.CallbackName
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.OnValueChangedAttribute.CallbackName
  AstarLibrary.Core.OnValueChangedAttribute.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.OnValueChangedAttribute.#ctor*
        name: OnValueChangedAttribute
        nameWithType: OnValueChangedAttribute.OnValueChangedAttribute
        qualifiedName: AstarLibrary.Core.OnValueChangedAttribute.OnValueChangedAttribute
      VB:
      - id: AstarLibrary.Core.OnValueChangedAttribute.#ctor*
        name: OnValueChangedAttribute
        nameWithType: OnValueChangedAttribute.OnValueChangedAttribute
        qualifiedName: AstarLibrary.Core.OnValueChangedAttribute.OnValueChangedAttribute
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.OnValueChangedAttribute.#ctor
  AstarLibrary.Core.OnValueChangedAttribute:
    name:
      CSharp:
      - id: AstarLibrary.Core.OnValueChangedAttribute
        name: OnValueChangedAttribute
        nameWithType: OnValueChangedAttribute
        qualifiedName: AstarLibrary.Core.OnValueChangedAttribute
      VB:
      - id: AstarLibrary.Core.OnValueChangedAttribute
        name: OnValueChangedAttribute
        nameWithType: OnValueChangedAttribute
        qualifiedName: AstarLibrary.Core.OnValueChangedAttribute
    isDefinition: true
    commentId: T:AstarLibrary.Core.OnValueChangedAttribute
  AstarLibrary.Core.ReadOnlyAttribute:
    name:
      CSharp:
      - id: AstarLibrary.Core.ReadOnlyAttribute
        name: ReadOnlyAttribute
        nameWithType: ReadOnlyAttribute
        qualifiedName: AstarLibrary.Core.ReadOnlyAttribute
      VB:
      - id: AstarLibrary.Core.ReadOnlyAttribute
        name: ReadOnlyAttribute
        nameWithType: ReadOnlyAttribute
        qualifiedName: AstarLibrary.Core.ReadOnlyAttribute
    isDefinition: true
    commentId: T:AstarLibrary.Core.ReadOnlyAttribute
  AstarLibrary.Core.SearchObjectAttribute.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SearchObjectAttribute.#ctor*
        name: SearchObjectAttribute
        nameWithType: SearchObjectAttribute.SearchObjectAttribute
        qualifiedName: AstarLibrary.Core.SearchObjectAttribute.SearchObjectAttribute
      VB:
      - id: AstarLibrary.Core.SearchObjectAttribute.#ctor*
        name: SearchObjectAttribute
        nameWithType: SearchObjectAttribute.SearchObjectAttribute
        qualifiedName: AstarLibrary.Core.SearchObjectAttribute.SearchObjectAttribute
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SearchObjectAttribute.#ctor
  AstarLibrary.Core.SearchObjectAttribute:
    name:
      CSharp:
      - id: AstarLibrary.Core.SearchObjectAttribute
        name: SearchObjectAttribute
        nameWithType: SearchObjectAttribute
        qualifiedName: AstarLibrary.Core.SearchObjectAttribute
      VB:
      - id: AstarLibrary.Core.SearchObjectAttribute
        name: SearchObjectAttribute
        nameWithType: SearchObjectAttribute
        qualifiedName: AstarLibrary.Core.SearchObjectAttribute
    isDefinition: true
    commentId: T:AstarLibrary.Core.SearchObjectAttribute
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  UnityEngine.Color:
    name:
      CSharp:
      - id: UnityEngine.Color
        name: Color
        nameWithType: Color
        qualifiedName: UnityEngine.Color
        isExternal: true
      VB:
      - id: UnityEngine.Color
        name: Color
        nameWithType: Color
        qualifiedName: UnityEngine.Color
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Color
  AstarLibrary.Core.SplitAttribute.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SplitAttribute.#ctor*
        name: SplitAttribute
        nameWithType: SplitAttribute.SplitAttribute
        qualifiedName: AstarLibrary.Core.SplitAttribute.SplitAttribute
      VB:
      - id: AstarLibrary.Core.SplitAttribute.#ctor*
        name: SplitAttribute
        nameWithType: SplitAttribute.SplitAttribute
        qualifiedName: AstarLibrary.Core.SplitAttribute.SplitAttribute
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SplitAttribute.#ctor
  AstarLibrary.Core.SplitAttribute:
    name:
      CSharp:
      - id: AstarLibrary.Core.SplitAttribute
        name: SplitAttribute
        nameWithType: SplitAttribute
        qualifiedName: AstarLibrary.Core.SplitAttribute
      VB:
      - id: AstarLibrary.Core.SplitAttribute
        name: SplitAttribute
        nameWithType: SplitAttribute
        qualifiedName: AstarLibrary.Core.SplitAttribute
    isDefinition: true
    commentId: T:AstarLibrary.Core.SplitAttribute
  UnityEngine.MonoBehaviour.IsInvoking:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.IsInvoking
        name: IsInvoking
        nameWithType: MonoBehaviour.IsInvoking
        qualifiedName: UnityEngine.MonoBehaviour.IsInvoking
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.IsInvoking
        name: IsInvoking
        nameWithType: MonoBehaviour.IsInvoking
        qualifiedName: UnityEngine.MonoBehaviour.IsInvoking
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.IsInvoking
  UnityEngine.MonoBehaviour.CancelInvoke:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.CancelInvoke
        name: CancelInvoke
        nameWithType: MonoBehaviour.CancelInvoke
        qualifiedName: UnityEngine.MonoBehaviour.CancelInvoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.CancelInvoke
        name: CancelInvoke
        nameWithType: MonoBehaviour.CancelInvoke
        qualifiedName: UnityEngine.MonoBehaviour.CancelInvoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.CancelInvoke
  UnityEngine.MonoBehaviour.Invoke(System.String,System.Single):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
        name: Invoke
        nameWithType: MonoBehaviour.Invoke
        qualifiedName: UnityEngine.MonoBehaviour.Invoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
        name: Invoke
        nameWithType: MonoBehaviour.Invoke
        qualifiedName: UnityEngine.MonoBehaviour.Invoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
        name: InvokeRepeating
        nameWithType: MonoBehaviour.InvokeRepeating
        qualifiedName: UnityEngine.MonoBehaviour.InvokeRepeating
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
        name: InvokeRepeating
        nameWithType: MonoBehaviour.InvokeRepeating
        qualifiedName: UnityEngine.MonoBehaviour.InvokeRepeating
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  UnityEngine.MonoBehaviour.CancelInvoke(System.String):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
        name: CancelInvoke
        nameWithType: MonoBehaviour.CancelInvoke
        qualifiedName: UnityEngine.MonoBehaviour.CancelInvoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
        name: CancelInvoke
        nameWithType: MonoBehaviour.CancelInvoke
        qualifiedName: UnityEngine.MonoBehaviour.CancelInvoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  UnityEngine.MonoBehaviour.IsInvoking(System.String):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.IsInvoking(System.String)
        name: IsInvoking
        nameWithType: MonoBehaviour.IsInvoking
        qualifiedName: UnityEngine.MonoBehaviour.IsInvoking
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.IsInvoking(System.String)
        name: IsInvoking
        nameWithType: MonoBehaviour.IsInvoking
        qualifiedName: UnityEngine.MonoBehaviour.IsInvoking
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.IsInvoking(System.String)
  UnityEngine.MonoBehaviour.StartCoroutine(System.String):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
        name: StartCoroutine_Auto
        nameWithType: MonoBehaviour.StartCoroutine_Auto
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine_Auto
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
        name: StartCoroutine_Auto
        nameWithType: MonoBehaviour.StartCoroutine_Auto
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine_Auto
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: UnityEngine.Coroutine
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: UnityEngine.Coroutine
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  UnityEngine.MonoBehaviour.StopCoroutine(System.String):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  UnityEngine.MonoBehaviour.StopAllCoroutines:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StopAllCoroutines
        name: StopAllCoroutines
        nameWithType: MonoBehaviour.StopAllCoroutines
        qualifiedName: UnityEngine.MonoBehaviour.StopAllCoroutines
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StopAllCoroutines
        name: StopAllCoroutines
        nameWithType: MonoBehaviour.StopAllCoroutines
        qualifiedName: UnityEngine.MonoBehaviour.StopAllCoroutines
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StopAllCoroutines
  UnityEngine.MonoBehaviour.print(System.Object):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.print(System.Object)
        name: print
        nameWithType: MonoBehaviour.print
        qualifiedName: UnityEngine.MonoBehaviour.print
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.print(System.Object)
        name: print
        nameWithType: MonoBehaviour.print
        qualifiedName: UnityEngine.MonoBehaviour.print
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.print(System.Object)
  UnityEngine.MonoBehaviour.destroyCancellationToken:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.destroyCancellationToken
        name: destroyCancellationToken
        nameWithType: MonoBehaviour.destroyCancellationToken
        qualifiedName: UnityEngine.MonoBehaviour.destroyCancellationToken
        isExternal: true
      VB:
      - id: UnityEngine.MonoBehaviour.destroyCancellationToken
        name: destroyCancellationToken
        nameWithType: MonoBehaviour.destroyCancellationToken
        qualifiedName: UnityEngine.MonoBehaviour.destroyCancellationToken
        isExternal: true
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: P:UnityEngine.MonoBehaviour.destroyCancellationToken
  UnityEngine.MonoBehaviour.useGUILayout:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.useGUILayout
        name: useGUILayout
        nameWithType: MonoBehaviour.useGUILayout
        qualifiedName: UnityEngine.MonoBehaviour.useGUILayout
        isExternal: true
      VB:
      - id: UnityEngine.MonoBehaviour.useGUILayout
        name: useGUILayout
        nameWithType: MonoBehaviour.useGUILayout
        qualifiedName: UnityEngine.MonoBehaviour.useGUILayout
        isExternal: true
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: P:UnityEngine.MonoBehaviour.useGUILayout
  UnityEngine.MonoBehaviour.runInEditMode:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.runInEditMode
        name: runInEditMode
        nameWithType: MonoBehaviour.runInEditMode
        qualifiedName: UnityEngine.MonoBehaviour.runInEditMode
        isExternal: true
      VB:
      - id: UnityEngine.MonoBehaviour.runInEditMode
        name: runInEditMode
        nameWithType: MonoBehaviour.runInEditMode
        qualifiedName: UnityEngine.MonoBehaviour.runInEditMode
        isExternal: true
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: P:UnityEngine.MonoBehaviour.runInEditMode
  UnityEngine.Behaviour:
    name:
      CSharp:
      - id: UnityEngine.Behaviour
        name: Behaviour
        nameWithType: Behaviour
        qualifiedName: UnityEngine.Behaviour
        isExternal: true
      VB:
      - id: UnityEngine.Behaviour
        name: Behaviour
        nameWithType: Behaviour
        qualifiedName: UnityEngine.Behaviour
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Behaviour
  UnityEngine.Behaviour.enabled:
    name:
      CSharp:
      - id: UnityEngine.Behaviour.enabled
        name: enabled
        nameWithType: Behaviour.enabled
        qualifiedName: UnityEngine.Behaviour.enabled
        isExternal: true
      VB:
      - id: UnityEngine.Behaviour.enabled
        name: enabled
        nameWithType: Behaviour.enabled
        qualifiedName: UnityEngine.Behaviour.enabled
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Behaviour
    commentId: P:UnityEngine.Behaviour.enabled
  UnityEngine.Behaviour.isActiveAndEnabled:
    name:
      CSharp:
      - id: UnityEngine.Behaviour.isActiveAndEnabled
        name: isActiveAndEnabled
        nameWithType: Behaviour.isActiveAndEnabled
        qualifiedName: UnityEngine.Behaviour.isActiveAndEnabled
        isExternal: true
      VB:
      - id: UnityEngine.Behaviour.isActiveAndEnabled
        name: isActiveAndEnabled
        nameWithType: Behaviour.isActiveAndEnabled
        qualifiedName: UnityEngine.Behaviour.isActiveAndEnabled
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Behaviour
    commentId: P:UnityEngine.Behaviour.isActiveAndEnabled
  UnityEngine.Component:
    name:
      CSharp:
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
      VB:
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Component
  UnityEngine.Component.GetComponent(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponent(System.Type)
        name: GetComponent
        nameWithType: Component.GetComponent
        qualifiedName: UnityEngine.Component.GetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponent(System.Type)
        name: GetComponent
        nameWithType: Component.GetComponent
        qualifiedName: UnityEngine.Component.GetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponent(System.Type)
  UnityEngine.Component.GetComponent``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponent``1
        name: GetComponent<T>
        nameWithType: Component.GetComponent<T>
        qualifiedName: UnityEngine.Component.GetComponent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponent``1
        name: GetComponent(Of T)
        nameWithType: Component.GetComponent(Of T)
        qualifiedName: UnityEngine.Component.GetComponent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponent``1
  UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@):
    name:
      CSharp:
      - id: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
        name: TryGetComponent
        nameWithType: Component.TryGetComponent
        qualifiedName: UnityEngine.Component.TryGetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
        name: TryGetComponent
        nameWithType: Component.TryGetComponent
        qualifiedName: UnityEngine.Component.TryGetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  UnityEngine.Component.TryGetComponent``1(``0@):
    name:
      CSharp:
      - id: UnityEngine.Component.TryGetComponent``1(``0@)
        name: TryGetComponent<T>
        nameWithType: Component.TryGetComponent<T>
        qualifiedName: UnityEngine.Component.TryGetComponent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.TryGetComponent``1(``0@)
        name: TryGetComponent(Of T)
        nameWithType: Component.TryGetComponent(Of T)
        qualifiedName: UnityEngine.Component.TryGetComponent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  UnityEngine.Component.TryGetComponent``1({T}@):
    name:
      CSharp:
      - id: UnityEngine.Component.TryGetComponent``1(``0@)
        name: TryGetComponent<T>
        nameWithType: Component.TryGetComponent<T>
        qualifiedName: UnityEngine.Component.TryGetComponent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.TryGetComponent``1(``0@)
        name: TryGetComponent(Of T)
        nameWithType: Component.TryGetComponent(Of T)
        qualifiedName: UnityEngine.Component.TryGetComponent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Component.TryGetComponent``1(``0@)
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  UnityEngine.Component.GetComponent(System.String):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponent(System.String)
        name: GetComponent
        nameWithType: Component.GetComponent
        qualifiedName: UnityEngine.Component.GetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponent(System.String)
        name: GetComponent
        nameWithType: Component.GetComponent
        qualifiedName: UnityEngine.Component.GetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponent(System.String)
  UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
        name: GetComponentInChildren
        nameWithType: Component.GetComponentInChildren
        qualifiedName: UnityEngine.Component.GetComponentInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
        name: GetComponentInChildren
        nameWithType: Component.GetComponentInChildren
        qualifiedName: UnityEngine.Component.GetComponentInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  UnityEngine.Component.GetComponentInChildren(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInChildren(System.Type)
        name: GetComponentInChildren
        nameWithType: Component.GetComponentInChildren
        qualifiedName: UnityEngine.Component.GetComponentInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInChildren(System.Type)
        name: GetComponentInChildren
        nameWithType: Component.GetComponentInChildren
        qualifiedName: UnityEngine.Component.GetComponentInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type)
  UnityEngine.Component.GetComponentInChildren``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
        name: GetComponentInChildren<T>
        nameWithType: Component.GetComponentInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
        name: GetComponentInChildren(Of T)
        nameWithType: Component.GetComponentInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  UnityEngine.Component.GetComponentInChildren``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInChildren``1
        name: GetComponentInChildren<T>
        nameWithType: Component.GetComponentInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInChildren``1
        name: GetComponentInChildren(Of T)
        nameWithType: Component.GetComponentInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInChildren``1
  UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
        name: GetComponentsInChildren
        nameWithType: Component.GetComponentsInChildren
        qualifiedName: UnityEngine.Component.GetComponentsInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
        name: GetComponentsInChildren
        nameWithType: Component.GetComponentsInChildren
        qualifiedName: UnityEngine.Component.GetComponentsInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  UnityEngine.Component.GetComponentsInChildren(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren(System.Type)
        name: GetComponentsInChildren
        nameWithType: Component.GetComponentsInChildren
        qualifiedName: UnityEngine.Component.GetComponentsInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren(System.Type)
        name: GetComponentsInChildren
        nameWithType: Component.GetComponentsInChildren
        qualifiedName: UnityEngine.Component.GetComponentsInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type)
  UnityEngine.Component.GetComponentsInChildren``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentsInChildren``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1
  UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
        name: GetComponentInParent
        nameWithType: Component.GetComponentInParent
        qualifiedName: UnityEngine.Component.GetComponentInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
        name: GetComponentInParent
        nameWithType: Component.GetComponentInParent
        qualifiedName: UnityEngine.Component.GetComponentInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
  UnityEngine.Component.GetComponentInParent(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInParent(System.Type)
        name: GetComponentInParent
        nameWithType: Component.GetComponentInParent
        qualifiedName: UnityEngine.Component.GetComponentInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInParent(System.Type)
        name: GetComponentInParent
        nameWithType: Component.GetComponentInParent
        qualifiedName: UnityEngine.Component.GetComponentInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInParent(System.Type)
  UnityEngine.Component.GetComponentInParent``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
        name: GetComponentInParent<T>
        nameWithType: Component.GetComponentInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
        name: GetComponentInParent(Of T)
        nameWithType: Component.GetComponentInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInParent``1(System.Boolean)
  UnityEngine.Component.GetComponentInParent``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInParent``1
        name: GetComponentInParent<T>
        nameWithType: Component.GetComponentInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInParent``1
        name: GetComponentInParent(Of T)
        nameWithType: Component.GetComponentInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInParent``1
  UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
        name: GetComponentsInParent
        nameWithType: Component.GetComponentsInParent
        qualifiedName: UnityEngine.Component.GetComponentsInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
        name: GetComponentsInParent
        nameWithType: Component.GetComponentsInParent
        qualifiedName: UnityEngine.Component.GetComponentsInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  UnityEngine.Component.GetComponentsInParent(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent(System.Type)
        name: GetComponentsInParent
        nameWithType: Component.GetComponentsInParent
        qualifiedName: UnityEngine.Component.GetComponentsInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent(System.Type)
        name: GetComponentsInParent
        nameWithType: Component.GetComponentsInParent
        qualifiedName: UnityEngine.Component.GetComponentsInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type)
  UnityEngine.Component.GetComponentsInParent``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
        name: GetComponentsInParent<T>
        nameWithType: Component.GetComponentsInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentsInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
        name: GetComponentsInParent(Of T)
        nameWithType: Component.GetComponentsInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInParent<T>
        nameWithType: Component.GetComponentsInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentsInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInParent(Of T)
        nameWithType: Component.GetComponentsInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInParent<T>
        nameWithType: Component.GetComponentsInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentsInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInParent(Of T)
        nameWithType: Component.GetComponentsInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentsInParent``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent``1
        name: GetComponentsInParent<T>
        nameWithType: Component.GetComponentsInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentsInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent``1
        name: GetComponentsInParent(Of T)
        nameWithType: Component.GetComponentsInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInParent``1
  UnityEngine.Component.GetComponents(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponents(System.Type)
        name: GetComponents
        nameWithType: Component.GetComponents
        qualifiedName: UnityEngine.Component.GetComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponents(System.Type)
        name: GetComponents
        nameWithType: Component.GetComponents
        qualifiedName: UnityEngine.Component.GetComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponents(System.Type)
  UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
        name: GetComponents
        nameWithType: Component.GetComponents
        qualifiedName: UnityEngine.Component.GetComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
        name: GetComponents
        nameWithType: Component.GetComponents
        qualifiedName: UnityEngine.Component.GetComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
        name: GetComponents<T>
        nameWithType: Component.GetComponents<T>
        qualifiedName: UnityEngine.Component.GetComponents<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
        name: GetComponents(Of T)
        nameWithType: Component.GetComponents(Of T)
        qualifiedName: UnityEngine.Component.GetComponents(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
        name: GetComponents<T>
        nameWithType: Component.GetComponents<T>
        qualifiedName: UnityEngine.Component.GetComponents<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
        name: GetComponents(Of T)
        nameWithType: Component.GetComponents(Of T)
        qualifiedName: UnityEngine.Component.GetComponents(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponents``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponents``1
        name: GetComponents<T>
        nameWithType: Component.GetComponents<T>
        qualifiedName: UnityEngine.Component.GetComponents<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponents``1
        name: GetComponents(Of T)
        nameWithType: Component.GetComponents(Of T)
        qualifiedName: UnityEngine.Component.GetComponents(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponents``1
  UnityEngine.Component.CompareTag(System.String):
    name:
      CSharp:
      - id: UnityEngine.Component.CompareTag(System.String)
        name: CompareTag
        nameWithType: Component.CompareTag
        qualifiedName: UnityEngine.Component.CompareTag
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.CompareTag(System.String)
        name: CompareTag
        nameWithType: Component.CompareTag
        qualifiedName: UnityEngine.Component.CompareTag
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.CompareTag(System.String)
  UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  UnityEngine.Component.SendMessageUpwards(System.String,System.Object):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  UnityEngine.Component.SendMessageUpwards(System.String):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessageUpwards(System.String)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessageUpwards(System.String)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessageUpwards(System.String)
  UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  UnityEngine.Component.SendMessage(System.String,System.Object):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessage(System.String,System.Object)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessage(System.String,System.Object)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object)
  UnityEngine.Component.SendMessage(System.String):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessage(System.String)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessage(System.String)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessage(System.String)
  UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  UnityEngine.Component.BroadcastMessage(System.String,System.Object):
    name:
      CSharp:
      - id: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  UnityEngine.Component.BroadcastMessage(System.String):
    name:
      CSharp:
      - id: UnityEngine.Component.BroadcastMessage(System.String)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.BroadcastMessage(System.String)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.BroadcastMessage(System.String)
  UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  UnityEngine.Component.transform:
    name:
      CSharp:
      - id: UnityEngine.Component.transform
        name: transform
        nameWithType: Component.transform
        qualifiedName: UnityEngine.Component.transform
        isExternal: true
      VB:
      - id: UnityEngine.Component.transform
        name: transform
        nameWithType: Component.transform
        qualifiedName: UnityEngine.Component.transform
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Component
    commentId: P:UnityEngine.Component.transform
  UnityEngine.Component.gameObject:
    name:
      CSharp:
      - id: UnityEngine.Component.gameObject
        name: gameObject
        nameWithType: Component.gameObject
        qualifiedName: UnityEngine.Component.gameObject
        isExternal: true
      VB:
      - id: UnityEngine.Component.gameObject
        name: gameObject
        nameWithType: Component.gameObject
        qualifiedName: UnityEngine.Component.gameObject
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Component
    commentId: P:UnityEngine.Component.gameObject
  UnityEngine.Component.tag:
    name:
      CSharp:
      - id: UnityEngine.Component.tag
        name: tag
        nameWithType: Component.tag
        qualifiedName: UnityEngine.Component.tag
        isExternal: true
      VB:
      - id: UnityEngine.Component.tag
        name: tag
        nameWithType: Component.tag
        qualifiedName: UnityEngine.Component.tag
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Component
    commentId: P:UnityEngine.Component.tag
  UnityEngine.Object:
    name:
      CSharp:
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      VB:
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Object
  UnityEngine.Object.GetInstanceID:
    name:
      CSharp:
      - id: UnityEngine.Object.GetInstanceID
        name: GetInstanceID
        nameWithType: Object.GetInstanceID
        qualifiedName: UnityEngine.Object.GetInstanceID
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.GetInstanceID
        name: GetInstanceID
        nameWithType: Object.GetInstanceID
        qualifiedName: UnityEngine.Object.GetInstanceID
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.GetInstanceID
  UnityEngine.Object.GetHashCode:
    name:
      CSharp:
      - id: UnityEngine.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: UnityEngine.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: UnityEngine.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.GetHashCode
  UnityEngine.Object.Equals(System.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: UnityEngine.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: UnityEngine.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Equals(System.Object)
  UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  UnityEngine.Object.Instantiate(UnityEngine.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object)
  UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  UnityEngine.Object.Instantiate``1(``0):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Object.Instantiate``1(``0)
  UnityEngine.Object.Instantiate``1({T}):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Object.Instantiate``1(``0)
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate``1(``0)
  UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  UnityEngine.Object.Destroy(UnityEngine.Object,System.Single):
    name:
      CSharp:
      - id: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
        name: Destroy
        nameWithType: Object.Destroy
        qualifiedName: UnityEngine.Object.Destroy
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
        name: Destroy
        nameWithType: Object.Destroy
        qualifiedName: UnityEngine.Object.Destroy
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  UnityEngine.Object.Destroy(UnityEngine.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.Destroy(UnityEngine.Object)
        name: Destroy
        nameWithType: Object.Destroy
        qualifiedName: UnityEngine.Object.Destroy
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Destroy(UnityEngine.Object)
        name: Destroy
        nameWithType: Object.Destroy
        qualifiedName: UnityEngine.Object.Destroy
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object)
  UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
        name: DestroyImmediate
        nameWithType: Object.DestroyImmediate
        qualifiedName: UnityEngine.Object.DestroyImmediate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
        name: DestroyImmediate
        nameWithType: Object.DestroyImmediate
        qualifiedName: UnityEngine.Object.DestroyImmediate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  UnityEngine.Object.DestroyImmediate(UnityEngine.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
        name: DestroyImmediate
        nameWithType: Object.DestroyImmediate
        qualifiedName: UnityEngine.Object.DestroyImmediate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
        name: DestroyImmediate
        nameWithType: Object.DestroyImmediate
        qualifiedName: UnityEngine.Object.DestroyImmediate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  UnityEngine.Object.FindObjectsOfType(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfType(System.Type)
        name: FindObjectsOfType
        nameWithType: Object.FindObjectsOfType
        qualifiedName: UnityEngine.Object.FindObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfType(System.Type)
        name: FindObjectsOfType
        nameWithType: Object.FindObjectsOfType
        qualifiedName: UnityEngine.Object.FindObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type)
  UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
        name: FindObjectsOfType
        nameWithType: Object.FindObjectsOfType
        qualifiedName: UnityEngine.Object.FindObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
        name: FindObjectsOfType
        nameWithType: Object.FindObjectsOfType
        qualifiedName: UnityEngine.Object.FindObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
        name: FindObjectsByType
        nameWithType: Object.FindObjectsByType
        qualifiedName: UnityEngine.Object.FindObjectsByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsSortMode
        name: FindObjectsSortMode
        nameWithType: FindObjectsSortMode
        qualifiedName: UnityEngine.FindObjectsSortMode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
        name: FindObjectsByType
        nameWithType: Object.FindObjectsByType
        qualifiedName: UnityEngine.Object.FindObjectsByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsSortMode
        name: FindObjectsSortMode
        nameWithType: FindObjectsSortMode
        qualifiedName: UnityEngine.FindObjectsSortMode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
        name: FindObjectsByType
        nameWithType: Object.FindObjectsByType
        qualifiedName: UnityEngine.Object.FindObjectsByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsSortMode
        name: FindObjectsSortMode
        nameWithType: FindObjectsSortMode
        qualifiedName: UnityEngine.FindObjectsSortMode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
        name: FindObjectsByType
        nameWithType: Object.FindObjectsByType
        qualifiedName: UnityEngine.Object.FindObjectsByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsSortMode
        name: FindObjectsSortMode
        nameWithType: FindObjectsSortMode
        qualifiedName: UnityEngine.FindObjectsSortMode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
        name: DontDestroyOnLoad
        nameWithType: Object.DontDestroyOnLoad
        qualifiedName: UnityEngine.Object.DontDestroyOnLoad
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
        name: DontDestroyOnLoad
        nameWithType: Object.DontDestroyOnLoad
        qualifiedName: UnityEngine.Object.DontDestroyOnLoad
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single):
    name:
      CSharp:
      - id: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
        name: DestroyObject
        nameWithType: Object.DestroyObject
        qualifiedName: UnityEngine.Object.DestroyObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
        name: DestroyObject
        nameWithType: Object.DestroyObject
        qualifiedName: UnityEngine.Object.DestroyObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  UnityEngine.Object.DestroyObject(UnityEngine.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.DestroyObject(UnityEngine.Object)
        name: DestroyObject
        nameWithType: Object.DestroyObject
        qualifiedName: UnityEngine.Object.DestroyObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.DestroyObject(UnityEngine.Object)
        name: DestroyObject
        nameWithType: Object.DestroyObject
        qualifiedName: UnityEngine.Object.DestroyObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object)
  UnityEngine.Object.FindSceneObjectsOfType(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
        name: FindSceneObjectsOfType
        nameWithType: Object.FindSceneObjectsOfType
        qualifiedName: UnityEngine.Object.FindSceneObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
        name: FindSceneObjectsOfType
        nameWithType: Object.FindSceneObjectsOfType
        qualifiedName: UnityEngine.Object.FindSceneObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
        name: FindObjectsOfTypeIncludingAssets
        nameWithType: Object.FindObjectsOfTypeIncludingAssets
        qualifiedName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
        name: FindObjectsOfTypeIncludingAssets
        nameWithType: Object.FindObjectsOfTypeIncludingAssets
        qualifiedName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  UnityEngine.Object.FindObjectsOfType``1:
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfType``1
        name: FindObjectsOfType<T>
        nameWithType: Object.FindObjectsOfType<T>
        qualifiedName: UnityEngine.Object.FindObjectsOfType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfType``1
        name: FindObjectsOfType(Of T)
        nameWithType: Object.FindObjectsOfType(Of T)
        qualifiedName: UnityEngine.Object.FindObjectsOfType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfType``1
  UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
        name: FindObjectsByType<T>
        nameWithType: Object.FindObjectsByType<T>
        qualifiedName: UnityEngine.Object.FindObjectsByType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.FindObjectsSortMode
        name: FindObjectsSortMode
        nameWithType: FindObjectsSortMode
        qualifiedName: UnityEngine.FindObjectsSortMode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
        name: FindObjectsByType(Of T)
        nameWithType: Object.FindObjectsByType(Of T)
        qualifiedName: UnityEngine.Object.FindObjectsByType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.FindObjectsSortMode
        name: FindObjectsSortMode
        nameWithType: FindObjectsSortMode
        qualifiedName: UnityEngine.FindObjectsSortMode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  UnityEngine.Object.FindObjectsOfType``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
        name: FindObjectsOfType<T>
        nameWithType: Object.FindObjectsOfType<T>
        qualifiedName: UnityEngine.Object.FindObjectsOfType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
        name: FindObjectsOfType(Of T)
        nameWithType: Object.FindObjectsOfType(Of T)
        qualifiedName: UnityEngine.Object.FindObjectsOfType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
        name: FindObjectsByType<T>
        nameWithType: Object.FindObjectsByType<T>
        qualifiedName: UnityEngine.Object.FindObjectsByType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsSortMode
        name: FindObjectsSortMode
        nameWithType: FindObjectsSortMode
        qualifiedName: UnityEngine.FindObjectsSortMode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
        name: FindObjectsByType(Of T)
        nameWithType: Object.FindObjectsByType(Of T)
        qualifiedName: UnityEngine.Object.FindObjectsByType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsSortMode
        name: FindObjectsSortMode
        nameWithType: FindObjectsSortMode
        qualifiedName: UnityEngine.FindObjectsSortMode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  UnityEngine.Object.FindObjectOfType``1:
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectOfType``1
        name: FindObjectOfType<T>
        nameWithType: Object.FindObjectOfType<T>
        qualifiedName: UnityEngine.Object.FindObjectOfType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectOfType``1
        name: FindObjectOfType(Of T)
        nameWithType: Object.FindObjectOfType(Of T)
        qualifiedName: UnityEngine.Object.FindObjectOfType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectOfType``1
  UnityEngine.Object.FindObjectOfType``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
        name: FindObjectOfType<T>
        nameWithType: Object.FindObjectOfType<T>
        qualifiedName: UnityEngine.Object.FindObjectOfType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
        name: FindObjectOfType(Of T)
        nameWithType: Object.FindObjectOfType(Of T)
        qualifiedName: UnityEngine.Object.FindObjectOfType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  UnityEngine.Object.FindFirstObjectByType``1:
    name:
      CSharp:
      - id: UnityEngine.Object.FindFirstObjectByType``1
        name: FindFirstObjectByType<T>
        nameWithType: Object.FindFirstObjectByType<T>
        qualifiedName: UnityEngine.Object.FindFirstObjectByType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindFirstObjectByType``1
        name: FindFirstObjectByType(Of T)
        nameWithType: Object.FindFirstObjectByType(Of T)
        qualifiedName: UnityEngine.Object.FindFirstObjectByType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindFirstObjectByType``1
  UnityEngine.Object.FindAnyObjectByType``1:
    name:
      CSharp:
      - id: UnityEngine.Object.FindAnyObjectByType``1
        name: FindAnyObjectByType<T>
        nameWithType: Object.FindAnyObjectByType<T>
        qualifiedName: UnityEngine.Object.FindAnyObjectByType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindAnyObjectByType``1
        name: FindAnyObjectByType(Of T)
        nameWithType: Object.FindAnyObjectByType(Of T)
        qualifiedName: UnityEngine.Object.FindAnyObjectByType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindAnyObjectByType``1
  UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive):
    name:
      CSharp:
      - id: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
        name: FindFirstObjectByType<T>
        nameWithType: Object.FindFirstObjectByType<T>
        qualifiedName: UnityEngine.Object.FindFirstObjectByType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
        name: FindFirstObjectByType(Of T)
        nameWithType: Object.FindFirstObjectByType(Of T)
        qualifiedName: UnityEngine.Object.FindFirstObjectByType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive):
    name:
      CSharp:
      - id: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
        name: FindAnyObjectByType<T>
        nameWithType: Object.FindAnyObjectByType<T>
        qualifiedName: UnityEngine.Object.FindAnyObjectByType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
        name: FindAnyObjectByType(Of T)
        nameWithType: Object.FindAnyObjectByType(Of T)
        qualifiedName: UnityEngine.Object.FindAnyObjectByType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  UnityEngine.Object.FindObjectsOfTypeAll(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
        name: FindObjectsOfTypeAll
        nameWithType: Object.FindObjectsOfTypeAll
        qualifiedName: UnityEngine.Object.FindObjectsOfTypeAll
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
        name: FindObjectsOfTypeAll
        nameWithType: Object.FindObjectsOfTypeAll
        qualifiedName: UnityEngine.Object.FindObjectsOfTypeAll
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  UnityEngine.Object.FindObjectOfType(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectOfType(System.Type)
        name: FindObjectOfType
        nameWithType: Object.FindObjectOfType
        qualifiedName: UnityEngine.Object.FindObjectOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectOfType(System.Type)
        name: FindObjectOfType
        nameWithType: Object.FindObjectOfType
        qualifiedName: UnityEngine.Object.FindObjectOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectOfType(System.Type)
  UnityEngine.Object.FindFirstObjectByType(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindFirstObjectByType(System.Type)
        name: FindFirstObjectByType
        nameWithType: Object.FindFirstObjectByType
        qualifiedName: UnityEngine.Object.FindFirstObjectByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindFirstObjectByType(System.Type)
        name: FindFirstObjectByType
        nameWithType: Object.FindFirstObjectByType
        qualifiedName: UnityEngine.Object.FindFirstObjectByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type)
  UnityEngine.Object.FindAnyObjectByType(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindAnyObjectByType(System.Type)
        name: FindAnyObjectByType
        nameWithType: Object.FindAnyObjectByType
        qualifiedName: UnityEngine.Object.FindAnyObjectByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindAnyObjectByType(System.Type)
        name: FindAnyObjectByType
        nameWithType: Object.FindAnyObjectByType
        qualifiedName: UnityEngine.Object.FindAnyObjectByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type)
  UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
        name: FindObjectOfType
        nameWithType: Object.FindObjectOfType
        qualifiedName: UnityEngine.Object.FindObjectOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
        name: FindObjectOfType
        nameWithType: Object.FindObjectOfType
        qualifiedName: UnityEngine.Object.FindObjectOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive):
    name:
      CSharp:
      - id: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
        name: FindFirstObjectByType
        nameWithType: Object.FindFirstObjectByType
        qualifiedName: UnityEngine.Object.FindFirstObjectByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
        name: FindFirstObjectByType
        nameWithType: Object.FindFirstObjectByType
        qualifiedName: UnityEngine.Object.FindFirstObjectByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive):
    name:
      CSharp:
      - id: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
        name: FindAnyObjectByType
        nameWithType: Object.FindAnyObjectByType
        qualifiedName: UnityEngine.Object.FindAnyObjectByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
        name: FindAnyObjectByType
        nameWithType: Object.FindAnyObjectByType
        qualifiedName: UnityEngine.Object.FindAnyObjectByType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.FindObjectsInactive
        name: FindObjectsInactive
        nameWithType: FindObjectsInactive
        qualifiedName: UnityEngine.FindObjectsInactive
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  UnityEngine.Object.ToString:
    name:
      CSharp:
      - id: UnityEngine.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: UnityEngine.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: UnityEngine.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.ToString
  UnityEngine.Object.name:
    name:
      CSharp:
      - id: UnityEngine.Object.name
        name: name
        nameWithType: Object.name
        qualifiedName: UnityEngine.Object.name
        isExternal: true
      VB:
      - id: UnityEngine.Object.name
        name: name
        nameWithType: Object.name
        qualifiedName: UnityEngine.Object.name
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Object
    commentId: P:UnityEngine.Object.name
  UnityEngine.Object.hideFlags:
    name:
      CSharp:
      - id: UnityEngine.Object.hideFlags
        name: hideFlags
        nameWithType: Object.hideFlags
        qualifiedName: UnityEngine.Object.hideFlags
        isExternal: true
      VB:
      - id: UnityEngine.Object.hideFlags
        name: hideFlags
        nameWithType: Object.hideFlags
        qualifiedName: UnityEngine.Object.hideFlags
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Object
    commentId: P:UnityEngine.Object.hideFlags
  AstarLibrary.Core:
    name:
      CSharp:
      - name: AstarLibrary.Core
        nameWithType: AstarLibrary.Core
        qualifiedName: AstarLibrary.Core
      VB:
      - name: AstarLibrary.Core
        nameWithType: AstarLibrary.Core
        qualifiedName: AstarLibrary.Core
    isDefinition: true
    commentId: N:AstarLibrary.Core
  AstarLibrary.Core.IRecordHandler:
    name:
      CSharp:
      - id: AstarLibrary.Core.IRecordHandler
        name: IRecordHandler
        nameWithType: IRecordHandler
        qualifiedName: AstarLibrary.Core.IRecordHandler
      VB:
      - id: AstarLibrary.Core.IRecordHandler
        name: IRecordHandler
        nameWithType: IRecordHandler
        qualifiedName: AstarLibrary.Core.IRecordHandler
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.IRecordHandler
  AstarLibrary.Core.CoroutineExtensions.Begin(UnityEngine.MonoBehaviour,System.Collections.IEnumerator):
    name:
      CSharp:
      - id: AstarLibrary.Core.CoroutineExtensions.Begin(UnityEngine.MonoBehaviour,System.Collections.IEnumerator)
        name: Begin
        nameWithType: CoroutineExtensions.Begin
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Begin
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: UnityEngine.MonoBehaviour
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.CoroutineExtensions.Begin(UnityEngine.MonoBehaviour,System.Collections.IEnumerator)
        name: Begin
        nameWithType: CoroutineExtensions.Begin
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Begin
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: UnityEngine.MonoBehaviour
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.CoroutineExtensions.Begin(UnityEngine.MonoBehaviour,System.Collections.IEnumerator)
  AstarLibrary.Core.CoroutineExtensions:
    name:
      CSharp:
      - id: AstarLibrary.Core.CoroutineExtensions
        name: CoroutineExtensions
        nameWithType: CoroutineExtensions
        qualifiedName: AstarLibrary.Core.CoroutineExtensions
      VB:
      - id: AstarLibrary.Core.CoroutineExtensions
        name: CoroutineExtensions
        nameWithType: CoroutineExtensions
        qualifiedName: AstarLibrary.Core.CoroutineExtensions
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.CoroutineExtensions
  UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator):
    name:
      CSharp:
      - id: AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
        name: Begin
        nameWithType: CoroutineExtensions.Begin
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Begin
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.CoroutineExtensions.Begin(System.Collections.IEnumerator)
        name: Begin
        nameWithType: CoroutineExtensions.Begin
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Begin
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.CoroutineExtensions.Begin(UnityEngine.MonoBehaviour,System.Collections.IEnumerator)
    parent: AstarLibrary.Core.CoroutineExtensions
    commentId: M:AstarLibrary.Core.CoroutineExtensions.Begin(UnityEngine.MonoBehaviour,System.Collections.IEnumerator)
  AstarLibrary.Core.CoroutineExtensions.Pause(UnityEngine.MonoBehaviour):
    name:
      CSharp:
      - id: AstarLibrary.Core.CoroutineExtensions.Pause(UnityEngine.MonoBehaviour)
        name: Pause
        nameWithType: CoroutineExtensions.Pause
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Pause
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: UnityEngine.MonoBehaviour
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.CoroutineExtensions.Pause(UnityEngine.MonoBehaviour)
        name: Pause
        nameWithType: CoroutineExtensions.Pause
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Pause
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: UnityEngine.MonoBehaviour
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.CoroutineExtensions.Pause(UnityEngine.MonoBehaviour)
  UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Pause:
    name:
      CSharp:
      - id: AstarLibrary.Core.CoroutineExtensions.Pause
        name: Pause
        nameWithType: CoroutineExtensions.Pause
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Pause
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.CoroutineExtensions.Pause
        name: Pause
        nameWithType: CoroutineExtensions.Pause
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Pause
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.CoroutineExtensions.Pause(UnityEngine.MonoBehaviour)
    parent: AstarLibrary.Core.CoroutineExtensions
    commentId: M:AstarLibrary.Core.CoroutineExtensions.Pause(UnityEngine.MonoBehaviour)
  AstarLibrary.Core.CoroutineExtensions.Resume(UnityEngine.MonoBehaviour):
    name:
      CSharp:
      - id: AstarLibrary.Core.CoroutineExtensions.Resume(UnityEngine.MonoBehaviour)
        name: Resume
        nameWithType: CoroutineExtensions.Resume
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Resume
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: UnityEngine.MonoBehaviour
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.CoroutineExtensions.Resume(UnityEngine.MonoBehaviour)
        name: Resume
        nameWithType: CoroutineExtensions.Resume
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Resume
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: UnityEngine.MonoBehaviour
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.CoroutineExtensions.Resume(UnityEngine.MonoBehaviour)
  UnityEngine.MonoBehaviour.AstarLibrary.Core.CoroutineExtensions.Resume:
    name:
      CSharp:
      - id: AstarLibrary.Core.CoroutineExtensions.Resume
        name: Resume
        nameWithType: CoroutineExtensions.Resume
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Resume
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.CoroutineExtensions.Resume
        name: Resume
        nameWithType: CoroutineExtensions.Resume
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Resume
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.CoroutineExtensions.Resume(UnityEngine.MonoBehaviour)
    parent: AstarLibrary.Core.CoroutineExtensions
    commentId: M:AstarLibrary.Core.CoroutineExtensions.Resume(UnityEngine.MonoBehaviour)
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  AstarLibrary.Core.Cog`1.Instance*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Instance*
        name: Instance
        nameWithType: Cog<T>.Instance
        qualifiedName: AstarLibrary.Core.Cog<T>.Instance
      VB:
      - id: AstarLibrary.Core.Cog`1.Instance*
        name: Instance
        nameWithType: Cog(Of T).Instance
        qualifiedName: AstarLibrary.Core.Cog(Of T).Instance
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Cog`1.Instance
  AstarLibrary.Core.Cog`1.Initialize*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Initialize*
        name: Initialize
        nameWithType: Cog<T>.Initialize
        qualifiedName: AstarLibrary.Core.Cog<T>.Initialize
      VB:
      - id: AstarLibrary.Core.Cog`1.Initialize*
        name: Initialize
        nameWithType: Cog(Of T).Initialize
        qualifiedName: AstarLibrary.Core.Cog(Of T).Initialize
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Cog`1.Initialize
  AstarLibrary.Core.Cog`1.Setup*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Setup*
        name: Setup
        nameWithType: Cog<T>.Setup
        qualifiedName: AstarLibrary.Core.Cog<T>.Setup
      VB:
      - id: AstarLibrary.Core.Cog`1.Setup*
        name: Setup
        nameWithType: Cog(Of T).Setup
        qualifiedName: AstarLibrary.Core.Cog(Of T).Setup
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Cog`1.Setup
  AstarLibrary.Core.Cog`1.Log*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Log*
        name: Log
        nameWithType: Cog<T>.Log
        qualifiedName: AstarLibrary.Core.Cog<T>.Log
      VB:
      - id: AstarLibrary.Core.Cog`1.Log*
        name: Log
        nameWithType: Cog(Of T).Log
        qualifiedName: AstarLibrary.Core.Cog(Of T).Log
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Cog`1.Log
  AstarLibrary.Core.IRecordHandler.Log(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.IRecordHandler.Log(System.Object)
        name: Log
        nameWithType: IRecordHandler.Log
        qualifiedName: AstarLibrary.Core.IRecordHandler.Log
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.IRecordHandler.Log(System.Object)
        name: Log
        nameWithType: IRecordHandler.Log
        qualifiedName: AstarLibrary.Core.IRecordHandler.Log
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AstarLibrary.Core.IRecordHandler
    commentId: M:AstarLibrary.Core.IRecordHandler.Log(System.Object)
  AstarLibrary.Core.Cog`1:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1
        name: Cog
        nameWithType: Cog
        qualifiedName: AstarLibrary.Core.Cog
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.Cog`1
        name: Cog
        nameWithType: Cog
        qualifiedName: AstarLibrary.Core.Cog
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:AstarLibrary.Core.Cog`1
  AstarLibrary.Core.Module:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module
        name: Module
        nameWithType: Module
        qualifiedName: AstarLibrary.Core.Module
      VB:
      - id: AstarLibrary.Core.Module
        name: Module
        nameWithType: Module
        qualifiedName: AstarLibrary.Core.Module
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.Module
  AstarLibrary.Core.Module.Lock:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.Lock
        name: Lock
        nameWithType: Module.Lock
        qualifiedName: AstarLibrary.Core.Module.Lock
      VB:
      - id: AstarLibrary.Core.Module.Lock
        name: Lock
        nameWithType: Module.Lock
        qualifiedName: AstarLibrary.Core.Module.Lock
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: F:AstarLibrary.Core.Module.Lock
  AstarLibrary.Core.Module.ShowLog:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.ShowLog
        name: ShowLog
        nameWithType: Module.ShowLog
        qualifiedName: AstarLibrary.Core.Module.ShowLog
      VB:
      - id: AstarLibrary.Core.Module.ShowLog
        name: ShowLog
        nameWithType: Module.ShowLog
        qualifiedName: AstarLibrary.Core.Module.ShowLog
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: F:AstarLibrary.Core.Module.ShowLog
  AstarLibrary.Core.Module.PlayMode:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.PlayMode
        name: PlayMode
        nameWithType: Module.PlayMode
        qualifiedName: AstarLibrary.Core.Module.PlayMode
      VB:
      - id: AstarLibrary.Core.Module.PlayMode
        name: PlayMode
        nameWithType: Module.PlayMode
        qualifiedName: AstarLibrary.Core.Module.PlayMode
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: F:AstarLibrary.Core.Module.PlayMode
  AstarLibrary.Core.Module.PlayModeDelay:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.PlayModeDelay
        name: PlayModeDelay
        nameWithType: Module.PlayModeDelay
        qualifiedName: AstarLibrary.Core.Module.PlayModeDelay
      VB:
      - id: AstarLibrary.Core.Module.PlayModeDelay
        name: PlayModeDelay
        nameWithType: Module.PlayModeDelay
        qualifiedName: AstarLibrary.Core.Module.PlayModeDelay
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: F:AstarLibrary.Core.Module.PlayModeDelay
  AstarLibrary.Core.Module.Routine:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.Routine
        name: Routine
        nameWithType: Module.Routine
        qualifiedName: AstarLibrary.Core.Module.Routine
      VB:
      - id: AstarLibrary.Core.Module.Routine
        name: Routine
        nameWithType: Module.Routine
        qualifiedName: AstarLibrary.Core.Module.Routine
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: F:AstarLibrary.Core.Module.Routine
  AstarLibrary.Core.Module.Awake:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.Awake
        name: Awake
        nameWithType: Module.Awake
        qualifiedName: AstarLibrary.Core.Module.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Module.Awake
        name: Awake
        nameWithType: Module.Awake
        qualifiedName: AstarLibrary.Core.Module.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: M:AstarLibrary.Core.Module.Awake
  AstarLibrary.Core.Module.OnEnable:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.OnEnable
        name: OnEnable
        nameWithType: Module.OnEnable
        qualifiedName: AstarLibrary.Core.Module.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Module.OnEnable
        name: OnEnable
        nameWithType: Module.OnEnable
        qualifiedName: AstarLibrary.Core.Module.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: M:AstarLibrary.Core.Module.OnEnable
  AstarLibrary.Core.Module.OnDisable:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.OnDisable
        name: OnDisable
        nameWithType: Module.OnDisable
        qualifiedName: AstarLibrary.Core.Module.OnDisable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Module.OnDisable
        name: OnDisable
        nameWithType: Module.OnDisable
        qualifiedName: AstarLibrary.Core.Module.OnDisable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: M:AstarLibrary.Core.Module.OnDisable
  AstarLibrary.Core.Module.OnApplicationQuit:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.OnApplicationQuit
        name: OnApplicationQuit
        nameWithType: Module.OnApplicationQuit
        qualifiedName: AstarLibrary.Core.Module.OnApplicationQuit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Module.OnApplicationQuit
        name: OnApplicationQuit
        nameWithType: Module.OnApplicationQuit
        qualifiedName: AstarLibrary.Core.Module.OnApplicationQuit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: M:AstarLibrary.Core.Module.OnApplicationQuit
  AstarLibrary.Core.Module.Log(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.Log(System.Object)
        name: Log
        nameWithType: Module.Log
        qualifiedName: AstarLibrary.Core.Module.Log
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Module.Log(System.Object)
        name: Log
        nameWithType: Module.Log
        qualifiedName: AstarLibrary.Core.Module.Log
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: M:AstarLibrary.Core.Module.Log(System.Object)
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{{T}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{`0}
  AstarLibrary.Core.Controller`1.Subscribe*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Controller`1.Subscribe*
        name: Subscribe
        nameWithType: Controller<T>.Subscribe
        qualifiedName: AstarLibrary.Core.Controller<T>.Subscribe
      VB:
      - id: AstarLibrary.Core.Controller`1.Subscribe*
        name: Subscribe
        nameWithType: Controller(Of T).Subscribe
        qualifiedName: AstarLibrary.Core.Controller(Of T).Subscribe
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Controller`1.Subscribe
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
        isExternal: true
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerator
  AstarLibrary.Core.Module.Initialize:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.Initialize
        name: Initialize
        nameWithType: Module.Initialize
        qualifiedName: AstarLibrary.Core.Module.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Module.Initialize
        name: Initialize
        nameWithType: Module.Initialize
        qualifiedName: AstarLibrary.Core.Module.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AstarLibrary.Core.Module
    commentId: M:AstarLibrary.Core.Module.Initialize
  AstarLibrary.Core.Controller`1.Initialize*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Controller`1.Initialize*
        name: Initialize
        nameWithType: Controller<T>.Initialize
        qualifiedName: AstarLibrary.Core.Controller<T>.Initialize
      VB:
      - id: AstarLibrary.Core.Controller`1.Initialize*
        name: Initialize
        nameWithType: Controller(Of T).Initialize
        qualifiedName: AstarLibrary.Core.Controller(Of T).Initialize
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Controller`1.Initialize
  AstarLibrary.Core.Controller`1:
    name:
      CSharp:
      - id: AstarLibrary.Core.Controller`1
        name: Controller
        nameWithType: Controller
        qualifiedName: AstarLibrary.Core.Controller
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.Controller`1
        name: Controller
        nameWithType: Controller
        qualifiedName: AstarLibrary.Core.Controller
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:AstarLibrary.Core.Controller`1
  AstarLibrary.Core.Element.Log*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Element.Log*
        name: Log
        nameWithType: Element.Log
        qualifiedName: AstarLibrary.Core.Element.Log
      VB:
      - id: AstarLibrary.Core.Element.Log*
        name: Log
        nameWithType: Element.Log
        qualifiedName: AstarLibrary.Core.Element.Log
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Element.Log
  AstarLibrary.Core.Element:
    name:
      CSharp:
      - id: AstarLibrary.Core.Element
        name: Element
        nameWithType: Element
        qualifiedName: AstarLibrary.Core.Element
      VB:
      - id: AstarLibrary.Core.Element
        name: Element
        nameWithType: Element
        qualifiedName: AstarLibrary.Core.Element
    isDefinition: true
    commentId: T:AstarLibrary.Core.Element
  UnityEngine.AddComponentMenu:
    name:
      CSharp:
      - id: UnityEngine.AddComponentMenu
        name: AddComponentMenu
        nameWithType: AddComponentMenu
        qualifiedName: UnityEngine.AddComponentMenu
        isExternal: true
      VB:
      - id: UnityEngine.AddComponentMenu
        name: AddComponentMenu
        nameWithType: AddComponentMenu
        qualifiedName: UnityEngine.AddComponentMenu
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.AddComponentMenu
  UnityEngine.AddComponentMenu.#ctor(System.String):
    name:
      CSharp:
      - id: UnityEngine.AddComponentMenu.#ctor(System.String)
        name: AddComponentMenu
        nameWithType: AddComponentMenu.AddComponentMenu
        qualifiedName: UnityEngine.AddComponentMenu.AddComponentMenu
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.AddComponentMenu.#ctor(System.String)
        name: AddComponentMenu
        nameWithType: AddComponentMenu.AddComponentMenu
        qualifiedName: UnityEngine.AddComponentMenu.AddComponentMenu
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.AddComponentMenu
    commentId: M:UnityEngine.AddComponentMenu.#ctor(System.String)
  AstarLibrary.Core.Frame:
    name:
      CSharp:
      - id: AstarLibrary.Core.Frame
        name: Frame
        nameWithType: Frame
        qualifiedName: AstarLibrary.Core.Frame
      VB:
      - id: AstarLibrary.Core.Frame
        name: Frame
        nameWithType: Frame
        qualifiedName: AstarLibrary.Core.Frame
    isDefinition: true
    commentId: T:AstarLibrary.Core.Frame
  UnityEngine.Events:
    name:
      CSharp:
      - name: UnityEngine.Events
        nameWithType: UnityEngine.Events
        qualifiedName: UnityEngine.Events
        isExternal: true
      VB:
      - name: UnityEngine.Events
        nameWithType: UnityEngine.Events
        qualifiedName: UnityEngine.Events
    isDefinition: true
    commentId: N:UnityEngine.Events
  UnityEngine.Events.UnityEvent:
    name:
      CSharp:
      - id: UnityEngine.Events.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEngine.Events.UnityEvent
        isExternal: true
      VB:
      - id: UnityEngine.Events.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEngine.Events.UnityEvent
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Events
    commentId: T:UnityEngine.Events.UnityEvent
  AstarLibrary.Core.Hull:
    name:
      CSharp:
      - id: AstarLibrary.Core.Hull
        name: Hull
        nameWithType: Hull
        qualifiedName: AstarLibrary.Core.Hull
      VB:
      - id: AstarLibrary.Core.Hull
        name: Hull
        nameWithType: Hull
        qualifiedName: AstarLibrary.Core.Hull
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.Hull
  AstarLibrary.Core.Hull.ShowEvents:
    name:
      CSharp:
      - id: AstarLibrary.Core.Hull.ShowEvents
        name: ShowEvents
        nameWithType: Hull.ShowEvents
        qualifiedName: AstarLibrary.Core.Hull.ShowEvents
      VB:
      - id: AstarLibrary.Core.Hull.ShowEvents
        name: ShowEvents
        nameWithType: Hull.ShowEvents
        qualifiedName: AstarLibrary.Core.Hull.ShowEvents
    isDefinition: true
    parent: AstarLibrary.Core.Hull
    commentId: F:AstarLibrary.Core.Hull.ShowEvents
  AstarLibrary.Core.Hull.OnFinish:
    name:
      CSharp:
      - id: AstarLibrary.Core.Hull.OnFinish
        name: OnFinish
        nameWithType: Hull.OnFinish
        qualifiedName: AstarLibrary.Core.Hull.OnFinish
      VB:
      - id: AstarLibrary.Core.Hull.OnFinish
        name: OnFinish
        nameWithType: Hull.OnFinish
        qualifiedName: AstarLibrary.Core.Hull.OnFinish
    isDefinition: true
    parent: AstarLibrary.Core.Hull
    commentId: F:AstarLibrary.Core.Hull.OnFinish
  AstarLibrary.Core.Manager:
    name:
      CSharp:
      - id: AstarLibrary.Core.Manager
        name: Manager
        nameWithType: Manager
        qualifiedName: AstarLibrary.Core.Manager
      VB:
      - id: AstarLibrary.Core.Manager
        name: Manager
        nameWithType: Manager
        qualifiedName: AstarLibrary.Core.Manager
    isDefinition: true
    commentId: T:AstarLibrary.Core.Manager
  AstarLibrary.Core.Cog{{T}}:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1
        name: Cog
        nameWithType: Cog
        qualifiedName: AstarLibrary.Core.Cog
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.Cog`1
        name: Cog
        nameWithType: Cog
        qualifiedName: AstarLibrary.Core.Cog
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.Cog`1
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.Cog{`0}
  AstarLibrary.Core.Cog`1.Lock:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Lock
        name: Lock
        nameWithType: Cog<T>.Lock
        qualifiedName: AstarLibrary.Core.Cog<T>.Lock
      VB:
      - id: AstarLibrary.Core.Cog`1.Lock
        name: Lock
        nameWithType: Cog(Of T).Lock
        qualifiedName: AstarLibrary.Core.Cog(Of T).Lock
    isDefinition: true
    commentId: F:AstarLibrary.Core.Cog`1.Lock
  AstarLibrary.Core.Cog{{T}}.Lock:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Lock
        name: Lock
        nameWithType: Cog<T>.Lock
        qualifiedName: AstarLibrary.Core.Cog<T>.Lock
      VB:
      - id: AstarLibrary.Core.Cog`1.Lock
        name: Lock
        nameWithType: Cog(Of T).Lock
        qualifiedName: AstarLibrary.Core.Cog(Of T).Lock
    isDefinition: false
    definition: AstarLibrary.Core.Cog`1.Lock
    parent: AstarLibrary.Core.Cog{{T}}
    commentId: F:AstarLibrary.Core.Cog{`0}.Lock
  AstarLibrary.Core.Cog`1.ShowLog:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.ShowLog
        name: ShowLog
        nameWithType: Cog<T>.ShowLog
        qualifiedName: AstarLibrary.Core.Cog<T>.ShowLog
      VB:
      - id: AstarLibrary.Core.Cog`1.ShowLog
        name: ShowLog
        nameWithType: Cog(Of T).ShowLog
        qualifiedName: AstarLibrary.Core.Cog(Of T).ShowLog
    isDefinition: true
    commentId: F:AstarLibrary.Core.Cog`1.ShowLog
  AstarLibrary.Core.Cog{{T}}.ShowLog:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.ShowLog
        name: ShowLog
        nameWithType: Cog<T>.ShowLog
        qualifiedName: AstarLibrary.Core.Cog<T>.ShowLog
      VB:
      - id: AstarLibrary.Core.Cog`1.ShowLog
        name: ShowLog
        nameWithType: Cog(Of T).ShowLog
        qualifiedName: AstarLibrary.Core.Cog(Of T).ShowLog
    isDefinition: false
    definition: AstarLibrary.Core.Cog`1.ShowLog
    parent: AstarLibrary.Core.Cog{{T}}
    commentId: F:AstarLibrary.Core.Cog{`0}.ShowLog
  AstarLibrary.Core.Cog`1.persistent:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.persistent
        name: persistent
        nameWithType: Cog<T>.persistent
        qualifiedName: AstarLibrary.Core.Cog<T>.persistent
      VB:
      - id: AstarLibrary.Core.Cog`1.persistent
        name: persistent
        nameWithType: Cog(Of T).persistent
        qualifiedName: AstarLibrary.Core.Cog(Of T).persistent
    isDefinition: true
    commentId: F:AstarLibrary.Core.Cog`1.persistent
  AstarLibrary.Core.Cog{{T}}.persistent:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.persistent
        name: persistent
        nameWithType: Cog<T>.persistent
        qualifiedName: AstarLibrary.Core.Cog<T>.persistent
      VB:
      - id: AstarLibrary.Core.Cog`1.persistent
        name: persistent
        nameWithType: Cog(Of T).persistent
        qualifiedName: AstarLibrary.Core.Cog(Of T).persistent
    isDefinition: false
    definition: AstarLibrary.Core.Cog`1.persistent
    parent: AstarLibrary.Core.Cog{{T}}
    commentId: F:AstarLibrary.Core.Cog{`0}.persistent
  AstarLibrary.Core.Cog`1.Instance:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Instance
        name: Instance
        nameWithType: Cog<T>.Instance
        qualifiedName: AstarLibrary.Core.Cog<T>.Instance
      VB:
      - id: AstarLibrary.Core.Cog`1.Instance
        name: Instance
        nameWithType: Cog(Of T).Instance
        qualifiedName: AstarLibrary.Core.Cog(Of T).Instance
    isDefinition: true
    commentId: P:AstarLibrary.Core.Cog`1.Instance
  AstarLibrary.Core.Cog{{T}}.Instance:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Instance
        name: Instance
        nameWithType: Cog<T>.Instance
        qualifiedName: AstarLibrary.Core.Cog<T>.Instance
      VB:
      - id: AstarLibrary.Core.Cog`1.Instance
        name: Instance
        nameWithType: Cog(Of T).Instance
        qualifiedName: AstarLibrary.Core.Cog(Of T).Instance
    isDefinition: false
    definition: AstarLibrary.Core.Cog`1.Instance
    parent: AstarLibrary.Core.Cog{{T}}
    commentId: P:AstarLibrary.Core.Cog{`0}.Instance
  AstarLibrary.Core.Cog`1.Initialize:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Initialize
        name: Initialize
        nameWithType: Cog<T>.Initialize
        qualifiedName: AstarLibrary.Core.Cog<T>.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Cog`1.Initialize
        name: Initialize
        nameWithType: Cog(Of T).Initialize
        qualifiedName: AstarLibrary.Core.Cog(Of T).Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.Cog`1.Initialize
  AstarLibrary.Core.Cog{{T}}.Initialize:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Initialize
        name: Initialize
        nameWithType: Cog<T>.Initialize
        qualifiedName: AstarLibrary.Core.Cog<T>.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Cog`1.Initialize
        name: Initialize
        nameWithType: Cog(Of T).Initialize
        qualifiedName: AstarLibrary.Core.Cog(Of T).Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.Cog`1.Initialize
    parent: AstarLibrary.Core.Cog{{T}}
    commentId: M:AstarLibrary.Core.Cog{`0}.Initialize
  AstarLibrary.Core.Cog`1.Setup:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Setup
        name: Setup
        nameWithType: Cog<T>.Setup
        qualifiedName: AstarLibrary.Core.Cog<T>.Setup
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Cog`1.Setup
        name: Setup
        nameWithType: Cog(Of T).Setup
        qualifiedName: AstarLibrary.Core.Cog(Of T).Setup
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.Cog`1.Setup
  AstarLibrary.Core.Cog{{T}}.Setup:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Setup
        name: Setup
        nameWithType: Cog<T>.Setup
        qualifiedName: AstarLibrary.Core.Cog<T>.Setup
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Cog`1.Setup
        name: Setup
        nameWithType: Cog(Of T).Setup
        qualifiedName: AstarLibrary.Core.Cog(Of T).Setup
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.Cog`1.Setup
    parent: AstarLibrary.Core.Cog{{T}}
    commentId: M:AstarLibrary.Core.Cog{`0}.Setup
  AstarLibrary.Core.Cog`1.Log(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Log(System.Object)
        name: Log
        nameWithType: Cog<T>.Log
        qualifiedName: AstarLibrary.Core.Cog<T>.Log
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Cog`1.Log(System.Object)
        name: Log
        nameWithType: Cog(Of T).Log
        qualifiedName: AstarLibrary.Core.Cog(Of T).Log
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.Cog`1.Log(System.Object)
  AstarLibrary.Core.Cog{{T}}.Log(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.Cog`1.Log(System.Object)
        name: Log
        nameWithType: Cog<T>.Log
        qualifiedName: AstarLibrary.Core.Cog<T>.Log
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.Cog`1.Log(System.Object)
        name: Log
        nameWithType: Cog(Of T).Log
        qualifiedName: AstarLibrary.Core.Cog(Of T).Log
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.Cog`1.Log(System.Object)
    parent: AstarLibrary.Core.Cog{{T}}
    commentId: M:AstarLibrary.Core.Cog{`0}.Log(System.Object)
  AstarLibrary.Core.Manager`1:
    name:
      CSharp:
      - id: AstarLibrary.Core.Manager`1
        name: Manager
        nameWithType: Manager
        qualifiedName: AstarLibrary.Core.Manager
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.Manager`1
        name: Manager
        nameWithType: Manager
        qualifiedName: AstarLibrary.Core.Manager
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:AstarLibrary.Core.Manager`1
  AstarLibrary.Core.StartType:
    name:
      CSharp:
      - id: AstarLibrary.Core.StartType
        name: StartType
        nameWithType: StartType
        qualifiedName: AstarLibrary.Core.StartType
      VB:
      - id: AstarLibrary.Core.StartType
        name: StartType
        nameWithType: StartType
        qualifiedName: AstarLibrary.Core.StartType
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.StartType
  UnityEngine.Coroutine:
    name:
      CSharp:
      - id: UnityEngine.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: UnityEngine.Coroutine
        isExternal: true
      VB:
      - id: UnityEngine.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: UnityEngine.Coroutine
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Coroutine
  AstarLibrary.Core.Module.Awake*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.Awake*
        name: Awake
        nameWithType: Module.Awake
        qualifiedName: AstarLibrary.Core.Module.Awake
      VB:
      - id: AstarLibrary.Core.Module.Awake*
        name: Awake
        nameWithType: Module.Awake
        qualifiedName: AstarLibrary.Core.Module.Awake
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Module.Awake
  AstarLibrary.Core.Module.OnEnable*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.OnEnable*
        name: OnEnable
        nameWithType: Module.OnEnable
        qualifiedName: AstarLibrary.Core.Module.OnEnable
      VB:
      - id: AstarLibrary.Core.Module.OnEnable*
        name: OnEnable
        nameWithType: Module.OnEnable
        qualifiedName: AstarLibrary.Core.Module.OnEnable
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Module.OnEnable
  AstarLibrary.Core.Module.OnDisable*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.OnDisable*
        name: OnDisable
        nameWithType: Module.OnDisable
        qualifiedName: AstarLibrary.Core.Module.OnDisable
      VB:
      - id: AstarLibrary.Core.Module.OnDisable*
        name: OnDisable
        nameWithType: Module.OnDisable
        qualifiedName: AstarLibrary.Core.Module.OnDisable
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Module.OnDisable
  AstarLibrary.Core.Module.OnApplicationQuit*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: Module.OnApplicationQuit
        qualifiedName: AstarLibrary.Core.Module.OnApplicationQuit
      VB:
      - id: AstarLibrary.Core.Module.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: Module.OnApplicationQuit
        qualifiedName: AstarLibrary.Core.Module.OnApplicationQuit
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Module.OnApplicationQuit
  AstarLibrary.Core.Module.Log*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.Log*
        name: Log
        nameWithType: Module.Log
        qualifiedName: AstarLibrary.Core.Module.Log
      VB:
      - id: AstarLibrary.Core.Module.Log*
        name: Log
        nameWithType: Module.Log
        qualifiedName: AstarLibrary.Core.Module.Log
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Module.Log
  AstarLibrary.Core.Module.Initialize*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Module.Initialize*
        name: Initialize
        nameWithType: Module.Initialize
        qualifiedName: AstarLibrary.Core.Module.Initialize
      VB:
      - id: AstarLibrary.Core.Module.Initialize*
        name: Initialize
        nameWithType: Module.Initialize
        qualifiedName: AstarLibrary.Core.Module.Initialize
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Module.Initialize
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  AstarLibrary.Core.IOverseerHandler:
    name:
      CSharp:
      - id: AstarLibrary.Core.IOverseerHandler
        name: IOverseerHandler
        nameWithType: IOverseerHandler
        qualifiedName: AstarLibrary.Core.IOverseerHandler
      VB:
      - id: AstarLibrary.Core.IOverseerHandler
        name: IOverseerHandler
        nameWithType: IOverseerHandler
        qualifiedName: AstarLibrary.Core.IOverseerHandler
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.IOverseerHandler
  UnityEngine.Events.UnityEvent`1:
    name:
      CSharp:
      - id: UnityEngine.Events.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEngine.Events.UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityEngine.Events.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEngine.Events.UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:UnityEngine.Events.UnityEvent`1
  UnityEngine.Events.UnityEvent{System.String}:
    name:
      CSharp:
      - id: UnityEngine.Events.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEngine.Events.UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityEngine.Events.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEngine.Events.UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Events.UnityEvent`1
    parent: UnityEngine.Events
    commentId: T:UnityEngine.Events.UnityEvent{System.String}
  AstarLibrary.Core.Warden.Setup*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Warden.Setup*
        name: Setup
        nameWithType: Warden.Setup
        qualifiedName: AstarLibrary.Core.Warden.Setup
      VB:
      - id: AstarLibrary.Core.Warden.Setup*
        name: Setup
        nameWithType: Warden.Setup
        qualifiedName: AstarLibrary.Core.Warden.Setup
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Warden.Setup
  AstarLibrary.Core.Warden.Subscription*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Warden.Subscription*
        name: Subscription
        nameWithType: Warden.Subscription
        qualifiedName: AstarLibrary.Core.Warden.Subscription
      VB:
      - id: AstarLibrary.Core.Warden.Subscription*
        name: Subscription
        nameWithType: Warden.Subscription
        qualifiedName: AstarLibrary.Core.Warden.Subscription
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Warden.Subscription
  AstarLibrary.Core.Warden.Watch*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Warden.Watch*
        name: Watch
        nameWithType: Warden.Watch
        qualifiedName: AstarLibrary.Core.Warden.Watch
      VB:
      - id: AstarLibrary.Core.Warden.Watch*
        name: Watch
        nameWithType: Warden.Watch
        qualifiedName: AstarLibrary.Core.Warden.Watch
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Warden.Watch
  AstarLibrary.Core.Warden.Notify*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Warden.Notify*
        name: Notify
        nameWithType: Warden.Notify
        qualifiedName: AstarLibrary.Core.Warden.Notify
      VB:
      - id: AstarLibrary.Core.Warden.Notify*
        name: Notify
        nameWithType: Warden.Notify
        qualifiedName: AstarLibrary.Core.Warden.Notify
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Warden.Notify
  AstarLibrary.Core.IOverseerHandler.Notify(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.IOverseerHandler.Notify(System.Object)
        name: Notify
        nameWithType: IOverseerHandler.Notify
        qualifiedName: AstarLibrary.Core.IOverseerHandler.Notify
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.IOverseerHandler.Notify(System.Object)
        name: Notify
        nameWithType: IOverseerHandler.Notify
        qualifiedName: AstarLibrary.Core.IOverseerHandler.Notify
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AstarLibrary.Core.IOverseerHandler
    commentId: M:AstarLibrary.Core.IOverseerHandler.Notify(System.Object)
  AstarLibrary.Core.Warden:
    name:
      CSharp:
      - id: AstarLibrary.Core.Warden
        name: Warden
        nameWithType: Warden
        qualifiedName: AstarLibrary.Core.Warden
      VB:
      - id: AstarLibrary.Core.Warden
        name: Warden
        nameWithType: Warden
        qualifiedName: AstarLibrary.Core.Warden
    isDefinition: true
    commentId: T:AstarLibrary.Core.Warden
  AstarLibrary.Core.IWorkerHandler:
    name:
      CSharp:
      - id: AstarLibrary.Core.IWorkerHandler
        name: IWorkerHandler
        nameWithType: IWorkerHandler
        qualifiedName: AstarLibrary.Core.IWorkerHandler
      VB:
      - id: AstarLibrary.Core.IWorkerHandler
        name: IWorkerHandler
        nameWithType: IWorkerHandler
        qualifiedName: AstarLibrary.Core.IWorkerHandler
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.IWorkerHandler
  AstarLibrary.Core.Worker`1.Setup*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Worker`1.Setup*
        name: Setup
        nameWithType: Worker<T>.Setup
        qualifiedName: AstarLibrary.Core.Worker<T>.Setup
      VB:
      - id: AstarLibrary.Core.Worker`1.Setup*
        name: Setup
        nameWithType: Worker(Of T).Setup
        qualifiedName: AstarLibrary.Core.Worker(Of T).Setup
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Worker`1.Setup
  AstarLibrary.Core.Worker`1.Subscription*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Worker`1.Subscription*
        name: Subscription
        nameWithType: Worker<T>.Subscription
        qualifiedName: AstarLibrary.Core.Worker<T>.Subscription
      VB:
      - id: AstarLibrary.Core.Worker`1.Subscription*
        name: Subscription
        nameWithType: Worker(Of T).Subscription
        qualifiedName: AstarLibrary.Core.Worker(Of T).Subscription
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Worker`1.Subscription
  AstarLibrary.Core.Worker`1.Execute*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Worker`1.Execute*
        name: Execute
        nameWithType: Worker<T>.Execute
        qualifiedName: AstarLibrary.Core.Worker<T>.Execute
      VB:
      - id: AstarLibrary.Core.Worker`1.Execute*
        name: Execute
        nameWithType: Worker(Of T).Execute
        qualifiedName: AstarLibrary.Core.Worker(Of T).Execute
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Worker`1.Execute
  AstarLibrary.Core.IWorkerHandler.Execute:
    name:
      CSharp:
      - id: AstarLibrary.Core.IWorkerHandler.Execute
        name: Execute
        nameWithType: IWorkerHandler.Execute
        qualifiedName: AstarLibrary.Core.IWorkerHandler.Execute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.IWorkerHandler.Execute
        name: Execute
        nameWithType: IWorkerHandler.Execute
        qualifiedName: AstarLibrary.Core.IWorkerHandler.Execute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AstarLibrary.Core.IWorkerHandler
    commentId: M:AstarLibrary.Core.IWorkerHandler.Execute
  AstarLibrary.Core.Worker`1.Duty*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Worker`1.Duty*
        name: Duty
        nameWithType: Worker<T>.Duty
        qualifiedName: AstarLibrary.Core.Worker<T>.Duty
      VB:
      - id: AstarLibrary.Core.Worker`1.Duty*
        name: Duty
        nameWithType: Worker(Of T).Duty
        qualifiedName: AstarLibrary.Core.Worker(Of T).Duty
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Worker`1.Duty
  AstarLibrary.Core.Worker`1:
    name:
      CSharp:
      - id: AstarLibrary.Core.Worker`1
        name: Worker
        nameWithType: Worker
        qualifiedName: AstarLibrary.Core.Worker
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.Worker`1
        name: Worker
        nameWithType: Worker
        qualifiedName: AstarLibrary.Core.Worker
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:AstarLibrary.Core.Worker`1
  AstarLibrary.Core.ReportSource:
    name:
      CSharp:
      - id: AstarLibrary.Core.ReportSource
        name: ReportSource
        nameWithType: ReportSource
        qualifiedName: AstarLibrary.Core.ReportSource
      VB:
      - id: AstarLibrary.Core.ReportSource
        name: ReportSource
        nameWithType: ReportSource
        qualifiedName: AstarLibrary.Core.ReportSource
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.ReportSource
  AstarLibrary.Core.ReportType:
    name:
      CSharp:
      - id: AstarLibrary.Core.ReportType
        name: ReportType
        nameWithType: ReportType
        qualifiedName: AstarLibrary.Core.ReportType
      VB:
      - id: AstarLibrary.Core.ReportType
        name: ReportType
        nameWithType: ReportType
        qualifiedName: AstarLibrary.Core.ReportType
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.ReportType
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  AstarLibrary.Core.ColorExtensions.FromHex*:
    name:
      CSharp:
      - id: AstarLibrary.Core.ColorExtensions.FromHex*
        name: FromHex
        nameWithType: ColorExtensions.FromHex
        qualifiedName: AstarLibrary.Core.ColorExtensions.FromHex
      VB:
      - id: AstarLibrary.Core.ColorExtensions.FromHex*
        name: FromHex
        nameWithType: ColorExtensions.FromHex
        qualifiedName: AstarLibrary.Core.ColorExtensions.FromHex
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.ColorExtensions.FromHex
  AstarLibrary.Core.ColorExtensions:
    name:
      CSharp:
      - id: AstarLibrary.Core.ColorExtensions
        name: ColorExtensions
        nameWithType: ColorExtensions
        qualifiedName: AstarLibrary.Core.ColorExtensions
      VB:
      - id: AstarLibrary.Core.ColorExtensions
        name: ColorExtensions
        nameWithType: ColorExtensions
        qualifiedName: AstarLibrary.Core.ColorExtensions
    isDefinition: true
    commentId: T:AstarLibrary.Core.ColorExtensions
  AstarLibrary.Core.CoroutineExtensions.Begin*:
    name:
      CSharp:
      - id: AstarLibrary.Core.CoroutineExtensions.Begin*
        name: Begin
        nameWithType: CoroutineExtensions.Begin
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Begin
      VB:
      - id: AstarLibrary.Core.CoroutineExtensions.Begin*
        name: Begin
        nameWithType: CoroutineExtensions.Begin
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Begin
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.CoroutineExtensions.Begin
  AstarLibrary.Core.CoroutineExtensions.Pause*:
    name:
      CSharp:
      - id: AstarLibrary.Core.CoroutineExtensions.Pause*
        name: Pause
        nameWithType: CoroutineExtensions.Pause
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Pause
      VB:
      - id: AstarLibrary.Core.CoroutineExtensions.Pause*
        name: Pause
        nameWithType: CoroutineExtensions.Pause
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Pause
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.CoroutineExtensions.Pause
  AstarLibrary.Core.CoroutineExtensions.Resume*:
    name:
      CSharp:
      - id: AstarLibrary.Core.CoroutineExtensions.Resume*
        name: Resume
        nameWithType: CoroutineExtensions.Resume
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Resume
      VB:
      - id: AstarLibrary.Core.CoroutineExtensions.Resume*
        name: Resume
        nameWithType: CoroutineExtensions.Resume
        qualifiedName: AstarLibrary.Core.CoroutineExtensions.Resume
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.CoroutineExtensions.Resume
  UnityEngine.GameObject:
    name:
      CSharp:
      - id: UnityEngine.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: UnityEngine.GameObject
        isExternal: true
      VB:
      - id: UnityEngine.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: UnityEngine.GameObject
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.GameObject
  AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID*:
    name:
      CSharp:
      - id: AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID*
        name: FindObjectByInstanceID
        nameWithType: GameObjectExtensions.FindObjectByInstanceID
        qualifiedName: AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID
      VB:
      - id: AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID*
        name: FindObjectByInstanceID
        nameWithType: GameObjectExtensions.FindObjectByInstanceID
        qualifiedName: AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.GameObjectExtensions.FindObjectByInstanceID
  AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative*:
    name:
      CSharp:
      - id: AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative*
        name: FindInHierarchyInative
        nameWithType: GameObjectExtensions.FindInHierarchyInative
        qualifiedName: AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative
      VB:
      - id: AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative*
        name: FindInHierarchyInative
        nameWithType: GameObjectExtensions.FindInHierarchyInative
        qualifiedName: AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.GameObjectExtensions.FindInHierarchyInative
  AstarLibrary.Core.GameObjectExtensions.GetChild*:
    name:
      CSharp:
      - id: AstarLibrary.Core.GameObjectExtensions.GetChild*
        name: GetChild
        nameWithType: GameObjectExtensions.GetChild
        qualifiedName: AstarLibrary.Core.GameObjectExtensions.GetChild
      VB:
      - id: AstarLibrary.Core.GameObjectExtensions.GetChild*
        name: GetChild
        nameWithType: GameObjectExtensions.GetChild
        qualifiedName: AstarLibrary.Core.GameObjectExtensions.GetChild
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.GameObjectExtensions.GetChild
  AstarLibrary.Core.GameObjectExtensions.GetFather*:
    name:
      CSharp:
      - id: AstarLibrary.Core.GameObjectExtensions.GetFather*
        name: GetFather
        nameWithType: GameObjectExtensions.GetFather
        qualifiedName: AstarLibrary.Core.GameObjectExtensions.GetFather
      VB:
      - id: AstarLibrary.Core.GameObjectExtensions.GetFather*
        name: GetFather
        nameWithType: GameObjectExtensions.GetFather
        qualifiedName: AstarLibrary.Core.GameObjectExtensions.GetFather
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.GameObjectExtensions.GetFather
  AstarLibrary.Core.GameObjectExtensions.CopyComponent*:
    name:
      CSharp:
      - id: AstarLibrary.Core.GameObjectExtensions.CopyComponent*
        name: CopyComponent
        nameWithType: GameObjectExtensions.CopyComponent
        qualifiedName: AstarLibrary.Core.GameObjectExtensions.CopyComponent
      VB:
      - id: AstarLibrary.Core.GameObjectExtensions.CopyComponent*
        name: CopyComponent
        nameWithType: GameObjectExtensions.CopyComponent
        qualifiedName: AstarLibrary.Core.GameObjectExtensions.CopyComponent
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.GameObjectExtensions.CopyComponent
  AstarLibrary.Core.GameObjectExtensions:
    name:
      CSharp:
      - id: AstarLibrary.Core.GameObjectExtensions
        name: GameObjectExtensions
        nameWithType: GameObjectExtensions
        qualifiedName: AstarLibrary.Core.GameObjectExtensions
      VB:
      - id: AstarLibrary.Core.GameObjectExtensions
        name: GameObjectExtensions
        nameWithType: GameObjectExtensions
        qualifiedName: AstarLibrary.Core.GameObjectExtensions
    isDefinition: true
    commentId: T:AstarLibrary.Core.GameObjectExtensions
  UnityEngine.UI:
    name:
      CSharp:
      - name: UnityEngine.UI
        nameWithType: UnityEngine.UI
        qualifiedName: UnityEngine.UI
        isExternal: true
      VB:
      - name: UnityEngine.UI
        nameWithType: UnityEngine.UI
        qualifiedName: UnityEngine.UI
    isDefinition: true
    commentId: N:UnityEngine.UI
  UnityEngine.UI.Slider:
    name:
      CSharp:
      - id: UnityEngine.UI.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: UnityEngine.UI.Slider
        isExternal: true
      VB:
      - id: UnityEngine.UI.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: UnityEngine.UI.Slider
        isExternal: true
    isDefinition: true
    parent: UnityEngine.UI
    commentId: T:UnityEngine.UI.Slider
  AstarLibrary.Core.InterfaceExtensions.SetValue*:
    name:
      CSharp:
      - id: AstarLibrary.Core.InterfaceExtensions.SetValue*
        name: SetValue
        nameWithType: InterfaceExtensions.SetValue
        qualifiedName: AstarLibrary.Core.InterfaceExtensions.SetValue
      VB:
      - id: AstarLibrary.Core.InterfaceExtensions.SetValue*
        name: SetValue
        nameWithType: InterfaceExtensions.SetValue
        qualifiedName: AstarLibrary.Core.InterfaceExtensions.SetValue
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.InterfaceExtensions.SetValue
  UnityEngine.UI.Toggle:
    name:
      CSharp:
      - id: UnityEngine.UI.Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: UnityEngine.UI.Toggle
        isExternal: true
      VB:
      - id: UnityEngine.UI.Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: UnityEngine.UI.Toggle
        isExternal: true
    isDefinition: true
    parent: UnityEngine.UI
    commentId: T:UnityEngine.UI.Toggle
  UnityEngine.UI.InputField:
    name:
      CSharp:
      - id: UnityEngine.UI.InputField
        name: InputField
        nameWithType: InputField
        qualifiedName: UnityEngine.UI.InputField
        isExternal: true
      VB:
      - id: UnityEngine.UI.InputField
        name: InputField
        nameWithType: InputField
        qualifiedName: UnityEngine.UI.InputField
        isExternal: true
    isDefinition: true
    parent: UnityEngine.UI
    commentId: T:UnityEngine.UI.InputField
  UnityEngine.UI.Dropdown:
    name:
      CSharp:
      - id: UnityEngine.UI.Dropdown
        name: Dropdown
        nameWithType: Dropdown
        qualifiedName: UnityEngine.UI.Dropdown
        isExternal: true
      VB:
      - id: UnityEngine.UI.Dropdown
        name: Dropdown
        nameWithType: Dropdown
        qualifiedName: UnityEngine.UI.Dropdown
        isExternal: true
    isDefinition: true
    parent: UnityEngine.UI
    commentId: T:UnityEngine.UI.Dropdown
  AstarLibrary.Core.InterfaceExtensions:
    name:
      CSharp:
      - id: AstarLibrary.Core.InterfaceExtensions
        name: InterfaceExtensions
        nameWithType: InterfaceExtensions
        qualifiedName: AstarLibrary.Core.InterfaceExtensions
      VB:
      - id: AstarLibrary.Core.InterfaceExtensions
        name: InterfaceExtensions
        nameWithType: InterfaceExtensions
        qualifiedName: AstarLibrary.Core.InterfaceExtensions
    isDefinition: true
    commentId: T:AstarLibrary.Core.InterfaceExtensions
  AstarLibrary.Core.IntExtensions.GFC*:
    name:
      CSharp:
      - id: AstarLibrary.Core.IntExtensions.GFC*
        name: GFC
        nameWithType: IntExtensions.GFC
        qualifiedName: AstarLibrary.Core.IntExtensions.GFC
      VB:
      - id: AstarLibrary.Core.IntExtensions.GFC*
        name: GFC
        nameWithType: IntExtensions.GFC
        qualifiedName: AstarLibrary.Core.IntExtensions.GFC
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.IntExtensions.GFC
  AstarLibrary.Core.IntExtensions.MMC*:
    name:
      CSharp:
      - id: AstarLibrary.Core.IntExtensions.MMC*
        name: MMC
        nameWithType: IntExtensions.MMC
        qualifiedName: AstarLibrary.Core.IntExtensions.MMC
      VB:
      - id: AstarLibrary.Core.IntExtensions.MMC*
        name: MMC
        nameWithType: IntExtensions.MMC
        qualifiedName: AstarLibrary.Core.IntExtensions.MMC
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.IntExtensions.MMC
  AstarLibrary.Core.IntExtensions:
    name:
      CSharp:
      - id: AstarLibrary.Core.IntExtensions
        name: IntExtensions
        nameWithType: IntExtensions
        qualifiedName: AstarLibrary.Core.IntExtensions
      VB:
      - id: AstarLibrary.Core.IntExtensions
        name: IntExtensions
        nameWithType: IntExtensions
        qualifiedName: AstarLibrary.Core.IntExtensions
    isDefinition: true
    commentId: T:AstarLibrary.Core.IntExtensions
  AstarLibrary.Core.RectTransformExtensions.AnchorType:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.AnchorType
        name: RectTransformExtensions.AnchorType
        nameWithType: RectTransformExtensions.AnchorType
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.AnchorType
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.AnchorType
        name: RectTransformExtensions.AnchorType
        nameWithType: RectTransformExtensions.AnchorType
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.AnchorType
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.RectTransformExtensions.AnchorType
  UnityEngine.RectTransform:
    name:
      CSharp:
      - id: UnityEngine.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: UnityEngine.RectTransform
        isExternal: true
      VB:
      - id: UnityEngine.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: UnityEngine.RectTransform
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.RectTransform
  AstarLibrary.Core.RectTransformExtensions.GetAnchorType*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.GetAnchorType*
        name: GetAnchorType
        nameWithType: RectTransformExtensions.GetAnchorType
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetAnchorType
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.GetAnchorType*
        name: GetAnchorType
        nameWithType: RectTransformExtensions.GetAnchorType
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetAnchorType
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.GetAnchorType
  AstarLibrary.Core.RectTransformExtensions.AnchorToCorners*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.AnchorToCorners*
        name: AnchorToCorners
        nameWithType: RectTransformExtensions.AnchorToCorners
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.AnchorToCorners
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.AnchorToCorners*
        name: AnchorToCorners
        nameWithType: RectTransformExtensions.AnchorToCorners
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.AnchorToCorners
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.AnchorToCorners
  UnityEngine.Vector2:
    name:
      CSharp:
      - id: UnityEngine.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: UnityEngine.Vector2
        isExternal: true
      VB:
      - id: UnityEngine.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: UnityEngine.Vector2
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Vector2
  AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors*
        name: SetPivotAndAnchors
        nameWithType: RectTransformExtensions.SetPivotAndAnchors
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors*
        name: SetPivotAndAnchors
        nameWithType: RectTransformExtensions.SetPivotAndAnchors
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.SetPivotAndAnchors
  AstarLibrary.Core.RectTransformExtensions.GetSize*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.GetSize*
        name: GetSize
        nameWithType: RectTransformExtensions.GetSize
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetSize
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.GetSize*
        name: GetSize
        nameWithType: RectTransformExtensions.GetSize
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetSize
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.GetSize
  AstarLibrary.Core.RectTransformExtensions.GetWidth*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.GetWidth*
        name: GetWidth
        nameWithType: RectTransformExtensions.GetWidth
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetWidth
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.GetWidth*
        name: GetWidth
        nameWithType: RectTransformExtensions.GetWidth
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetWidth
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.GetWidth
  AstarLibrary.Core.RectTransformExtensions.GetHeight*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.GetHeight*
        name: GetHeight
        nameWithType: RectTransformExtensions.GetHeight
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetHeight
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.GetHeight*
        name: GetHeight
        nameWithType: RectTransformExtensions.GetHeight
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetHeight
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.GetHeight
  AstarLibrary.Core.RectTransformExtensions.GetLeft*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.GetLeft*
        name: GetLeft
        nameWithType: RectTransformExtensions.GetLeft
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetLeft
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.GetLeft*
        name: GetLeft
        nameWithType: RectTransformExtensions.GetLeft
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetLeft
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.GetLeft
  AstarLibrary.Core.RectTransformExtensions.GetRight*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.GetRight*
        name: GetRight
        nameWithType: RectTransformExtensions.GetRight
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetRight
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.GetRight*
        name: GetRight
        nameWithType: RectTransformExtensions.GetRight
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetRight
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.GetRight
  AstarLibrary.Core.RectTransformExtensions.GetTop*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.GetTop*
        name: GetTop
        nameWithType: RectTransformExtensions.GetTop
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetTop
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.GetTop*
        name: GetTop
        nameWithType: RectTransformExtensions.GetTop
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetTop
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.GetTop
  AstarLibrary.Core.RectTransformExtensions.GetBottom*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.GetBottom*
        name: GetBottom
        nameWithType: RectTransformExtensions.GetBottom
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetBottom
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.GetBottom*
        name: GetBottom
        nameWithType: RectTransformExtensions.GetBottom
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetBottom
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.GetBottom
  AstarLibrary.Core.RectTransformExtensions.SetSize*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.SetSize*
        name: SetSize
        nameWithType: RectTransformExtensions.SetSize
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetSize
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.SetSize*
        name: SetSize
        nameWithType: RectTransformExtensions.SetSize
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetSize
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.SetSize
  AstarLibrary.Core.RectTransformExtensions.SetWidth*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.SetWidth*
        name: SetWidth
        nameWithType: RectTransformExtensions.SetWidth
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetWidth
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.SetWidth*
        name: SetWidth
        nameWithType: RectTransformExtensions.SetWidth
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetWidth
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.SetWidth
  AstarLibrary.Core.RectTransformExtensions.SetHeight*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.SetHeight*
        name: SetHeight
        nameWithType: RectTransformExtensions.SetHeight
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetHeight
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.SetHeight*
        name: SetHeight
        nameWithType: RectTransformExtensions.SetHeight
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetHeight
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.SetHeight
  AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition*
        name: SetBottomLeftPosition
        nameWithType: RectTransformExtensions.SetBottomLeftPosition
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition*
        name: SetBottomLeftPosition
        nameWithType: RectTransformExtensions.SetBottomLeftPosition
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.SetBottomLeftPosition
  AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition*
        name: SetTopLeftPosition
        nameWithType: RectTransformExtensions.SetTopLeftPosition
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition*
        name: SetTopLeftPosition
        nameWithType: RectTransformExtensions.SetTopLeftPosition
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.SetTopLeftPosition
  AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition*
        name: SetBottomRightPosition
        nameWithType: RectTransformExtensions.SetBottomRightPosition
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition*
        name: SetBottomRightPosition
        nameWithType: RectTransformExtensions.SetBottomRightPosition
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.SetBottomRightPosition
  AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition*
        name: SetRightTopPosition
        nameWithType: RectTransformExtensions.SetRightTopPosition
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition*
        name: SetRightTopPosition
        nameWithType: RectTransformExtensions.SetRightTopPosition
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.SetRightTopPosition
  AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas*
        name: GetTopRectTransformOfCanvas
        nameWithType: RectTransformExtensions.GetTopRectTransformOfCanvas
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas*
        name: GetTopRectTransformOfCanvas
        nameWithType: RectTransformExtensions.GetTopRectTransformOfCanvas
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.GetTopRectTransformOfCanvas
  AstarLibrary.Core.RectTransformExtensions.RectSide:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.RectSide
        name: RectTransformExtensions.RectSide
        nameWithType: RectTransformExtensions.RectSide
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.RectSide
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.RectSide
        name: RectTransformExtensions.RectSide
        nameWithType: RectTransformExtensions.RectSide
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.RectSide
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.RectTransformExtensions.RectSide
  AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched*
        name: ChangeRectStretched
        nameWithType: RectTransformExtensions.ChangeRectStretched
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched*
        name: ChangeRectStretched
        nameWithType: RectTransformExtensions.ChangeRectStretched
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.ChangeRectStretched
  UnityEngine.Transform:
    name:
      CSharp:
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      VB:
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Transform
  AstarLibrary.Core.RectTransformExtensions.FindComponentInParents*:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions.FindComponentInParents*
        name: FindComponentInParents
        nameWithType: RectTransformExtensions.FindComponentInParents
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.FindComponentInParents
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions.FindComponentInParents*
        name: FindComponentInParents
        nameWithType: RectTransformExtensions.FindComponentInParents
        qualifiedName: AstarLibrary.Core.RectTransformExtensions.FindComponentInParents
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.RectTransformExtensions.FindComponentInParents
  AstarLibrary.Core.RectTransformExtensions:
    name:
      CSharp:
      - id: AstarLibrary.Core.RectTransformExtensions
        name: RectTransformExtensions
        nameWithType: RectTransformExtensions
        qualifiedName: AstarLibrary.Core.RectTransformExtensions
      VB:
      - id: AstarLibrary.Core.RectTransformExtensions
        name: RectTransformExtensions
        nameWithType: RectTransformExtensions
        qualifiedName: AstarLibrary.Core.RectTransformExtensions
    isDefinition: true
    commentId: T:AstarLibrary.Core.RectTransformExtensions
  AstarLibrary.Core.SerializableDictionaryBase:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase
        name: SerializableDictionaryBase
        nameWithType: SerializableDictionaryBase
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase
        name: SerializableDictionaryBase
        nameWithType: SerializableDictionaryBase
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.SerializableDictionaryBase
  AstarLibrary.Core.SerializableDictionaryBase.Storage:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase.Storage
        name: SerializableDictionaryBase.Storage
        nameWithType: SerializableDictionaryBase.Storage
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase.Storage
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase.Storage
        name: SerializableDictionaryBase.Storage
        nameWithType: SerializableDictionaryBase.Storage
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase.Storage
    isDefinition: true
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.SerializableDictionaryBase.Storage
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{{TKey},{TValue}}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{`0,`1}
  System.Collections.Generic.Dictionary`2.Add(`0,`1):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Add(`0,`1)
        name: Add
        nameWithType: Dictionary<TKey, TValue>.Add
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.Add(`0,`1)
        name: Add
        nameWithType: Dictionary(Of TKey, TValue).Add
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.Add(`0,`1)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.Add({TKey},{TValue}):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Add(`0,`1)
        name: Add
        nameWithType: Dictionary<TKey, TValue>.Add
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.Add(`0,`1)
        name: Add
        nameWithType: Dictionary(Of TKey, TValue).Add
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.Add(`0,`1)
  ? System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
        name: ICollection<KeyValuePair<TKey, TValue>>.Add
        nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
        name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  ? System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
        name: ICollection<KeyValuePair<TKey, TValue>>.Add
        nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
        name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  ? System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
        name: ICollection<KeyValuePair<TKey, TValue>>.Contains
        nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
        name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  ? System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
        name: ICollection<KeyValuePair<TKey, TValue>>.Contains
        nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
        name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  ? System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
        name: ICollection<KeyValuePair<TKey, TValue>>.Remove
        nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
        name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  ? System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
        name: ICollection<KeyValuePair<TKey, TValue>>.Remove
        nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
        name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  System.Collections.Generic.Dictionary`2.Clear:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Clear
        name: Clear
        nameWithType: Dictionary<TKey, TValue>.Clear
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.Clear
        name: Clear
        nameWithType: Dictionary(Of TKey, TValue).Clear
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.Clear
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.Clear:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Clear
        name: Clear
        nameWithType: Dictionary<TKey, TValue>.Clear
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.Clear
        name: Clear
        nameWithType: Dictionary(Of TKey, TValue).Clear
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.Clear
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.Clear
  System.Collections.Generic.Dictionary`2.ContainsKey(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: Dictionary<TKey, TValue>.ContainsKey
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: Dictionary(Of TKey, TValue).ContainsKey
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.ContainsKey({TKey}):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: Dictionary<TKey, TValue>.ContainsKey
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: Dictionary(Of TKey, TValue).ContainsKey
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.ContainsKey(`0)
  System.Collections.Generic.Dictionary`2.ContainsValue(`1):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
        name: ContainsValue
        nameWithType: Dictionary<TKey, TValue>.ContainsValue
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
        name: ContainsValue
        nameWithType: Dictionary(Of TKey, TValue).ContainsValue
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.ContainsValue({TValue}):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
        name: ContainsValue
        nameWithType: Dictionary<TKey, TValue>.ContainsValue
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
        name: ContainsValue
        nameWithType: Dictionary(Of TKey, TValue).ContainsValue
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.ContainsValue(`1)
  System.Collections.Generic.Dictionary`2.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.GetEnumerator
        name: GetEnumerator
        nameWithType: Dictionary<TKey, TValue>.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.GetEnumerator
        name: GetEnumerator
        nameWithType: Dictionary(Of TKey, TValue).GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.GetEnumerator
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.GetEnumerator
        name: GetEnumerator
        nameWithType: Dictionary<TKey, TValue>.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.GetEnumerator
        name: GetEnumerator
        nameWithType: Dictionary(Of TKey, TValue).GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.GetEnumerator
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.GetEnumerator
  ? System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
        name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
        nameWithType: Dictionary<TKey, TValue>.IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
        name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  ? System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
        name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
        nameWithType: Dictionary<TKey, TValue>.IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
        name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  ? System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: Dictionary<TKey, TValue>.GetObjectData
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: Dictionary(Of TKey, TValue).GetObjectData
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  ? System.Collections.Generic.Dictionary{{TKey},{TValue}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: Dictionary<TKey, TValue>.GetObjectData
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: Dictionary(Of TKey, TValue).GetObjectData
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: Dictionary<TKey, TValue>.OnDeserialization
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.OnDeserialization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: Dictionary(Of TKey, TValue).OnDeserialization
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).OnDeserialization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.OnDeserialization(System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: Dictionary<TKey, TValue>.OnDeserialization
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.OnDeserialization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: Dictionary(Of TKey, TValue).OnDeserialization
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).OnDeserialization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.OnDeserialization(System.Object)
  System.Collections.Generic.Dictionary`2.Remove(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Remove(`0)
        name: Remove
        nameWithType: Dictionary<TKey, TValue>.Remove
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.Remove(`0)
        name: Remove
        nameWithType: Dictionary(Of TKey, TValue).Remove
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.Remove(`0)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.Remove({TKey}):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Remove(`0)
        name: Remove
        nameWithType: Dictionary<TKey, TValue>.Remove
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.Remove(`0)
        name: Remove
        nameWithType: Dictionary(Of TKey, TValue).Remove
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.Remove(`0)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.Remove(`0)
  System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: Dictionary<TKey, TValue>.TryGetValue
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: Dictionary(Of TKey, TValue).TryGetValue
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: Dictionary<TKey, TValue>.TryGetValue
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: Dictionary(Of TKey, TValue).TryGetValue
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.TryGetValue(`0,`1@)
  ? System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
        name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo
        nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
        name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  ? System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
        name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo
        nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
        name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
        name: ICollection.CopyTo
        nameWithType: Dictionary<TKey, TValue>.ICollection.CopyTo
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
        name: System.Collections.ICollection.CopyTo
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
        name: ICollection.CopyTo
        nameWithType: Dictionary<TKey, TValue>.ICollection.CopyTo
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
        name: System.Collections.ICollection.CopyTo
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
        name: IEnumerable.GetEnumerator
        nameWithType: Dictionary<TKey, TValue>.IEnumerable.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IEnumerable#GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
        name: IEnumerable.GetEnumerator
        nameWithType: Dictionary<TKey, TValue>.IEnumerable.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IEnumerable#GetEnumerator
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
        name: IDictionary.get_Item
        nameWithType: Dictionary<TKey, TValue>.IDictionary.get_Item
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.get_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
        name: System.Collections.IDictionary.get_Item
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#get_Item(System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
        name: IDictionary.get_Item
        nameWithType: Dictionary<TKey, TValue>.IDictionary.get_Item
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.get_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
        name: System.Collections.IDictionary.get_Item
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#get_Item(System.Object)
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
        name: IDictionary.set_Item
        nameWithType: Dictionary<TKey, TValue>.IDictionary.set_Item
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.set_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
        name: System.Collections.IDictionary.set_Item
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#set_Item(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
        name: IDictionary.set_Item
        nameWithType: Dictionary<TKey, TValue>.IDictionary.set_Item
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.set_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
        name: System.Collections.IDictionary.set_Item
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
        name: IDictionary.Add
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Add
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
        name: System.Collections.IDictionary.Add
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Add(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
        name: IDictionary.Add
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Add
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
        name: System.Collections.IDictionary.Add
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#Add(System.Object,System.Object)
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
        name: IDictionary.Contains
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Contains
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
        name: System.Collections.IDictionary.Contains
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Contains(System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
        name: IDictionary.Contains
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Contains
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
        name: System.Collections.IDictionary.Contains
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#Contains(System.Object)
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
        name: IDictionary.GetEnumerator
        nameWithType: Dictionary<TKey, TValue>.IDictionary.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
        name: System.Collections.IDictionary.GetEnumerator
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
        name: IDictionary.GetEnumerator
        nameWithType: Dictionary<TKey, TValue>.IDictionary.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
        name: System.Collections.IDictionary.GetEnumerator
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#GetEnumerator
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
        name: IDictionary.Remove
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Remove
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
        name: System.Collections.IDictionary.Remove
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Remove(System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
        name: IDictionary.Remove
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Remove
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
        name: System.Collections.IDictionary.Remove
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#Remove(System.Object)
  System.Collections.Generic.Dictionary`2.Comparer:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Comparer
        name: Comparer
        nameWithType: Dictionary<TKey, TValue>.Comparer
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Comparer
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.Comparer
        name: Comparer
        nameWithType: Dictionary(Of TKey, TValue).Comparer
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Comparer
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.Comparer
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.Comparer:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Comparer
        name: Comparer
        nameWithType: Dictionary<TKey, TValue>.Comparer
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Comparer
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.Comparer
        name: Comparer
        nameWithType: Dictionary(Of TKey, TValue).Comparer
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Comparer
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.Comparer
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.Comparer
  System.Collections.Generic.Dictionary`2.Count:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Count
        name: Count
        nameWithType: Dictionary<TKey, TValue>.Count
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Count
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.Count
        name: Count
        nameWithType: Dictionary(Of TKey, TValue).Count
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Count
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.Count
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.Count:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Count
        name: Count
        nameWithType: Dictionary<TKey, TValue>.Count
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Count
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.Count
        name: Count
        nameWithType: Dictionary(Of TKey, TValue).Count
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Count
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.Count
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.Count
  System.Collections.Generic.Dictionary`2.Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Keys
        name: Keys
        nameWithType: Dictionary<TKey, TValue>.Keys
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.Keys
        name: Keys
        nameWithType: Dictionary(Of TKey, TValue).Keys
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Keys
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.Keys
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Keys
        name: Keys
        nameWithType: Dictionary<TKey, TValue>.Keys
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.Keys
        name: Keys
        nameWithType: Dictionary(Of TKey, TValue).Keys
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Keys
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.Keys
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.Keys
  System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
        name: IDictionary<TKey, TValue>.Keys
        nameWithType: Dictionary<TKey, TValue>.IDictionary<TKey, TValue>.Keys
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
        name: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
        name: IDictionary<TKey, TValue>.Keys
        nameWithType: Dictionary<TKey, TValue>.IDictionary<TKey, TValue>.Keys
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
        name: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
        name: IReadOnlyDictionary<TKey, TValue>.Keys
        nameWithType: Dictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Keys
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
        name: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
        name: IReadOnlyDictionary<TKey, TValue>.Keys
        nameWithType: Dictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Keys
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
        name: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  System.Collections.Generic.Dictionary`2.Values:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Values
        name: Values
        nameWithType: Dictionary<TKey, TValue>.Values
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.Values
        name: Values
        nameWithType: Dictionary(Of TKey, TValue).Values
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Values
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.Values
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.Values:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Values
        name: Values
        nameWithType: Dictionary<TKey, TValue>.Values
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.Values
        name: Values
        nameWithType: Dictionary(Of TKey, TValue).Values
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Values
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.Values
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.Values
  System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
        name: IDictionary<TKey, TValue>.Values
        nameWithType: Dictionary<TKey, TValue>.IDictionary<TKey, TValue>.Values
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
        name: System.Collections.Generic.IDictionary<TKey,TValue>.Values
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#IDictionary{TKey,TValue}#Values:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
        name: IDictionary<TKey, TValue>.Values
        nameWithType: Dictionary<TKey, TValue>.IDictionary<TKey, TValue>.Values
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
        name: System.Collections.Generic.IDictionary<TKey,TValue>.Values
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
        name: IReadOnlyDictionary<TKey, TValue>.Values
        nameWithType: Dictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Values
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
        name: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
        name: IReadOnlyDictionary<TKey, TValue>.Values
        nameWithType: Dictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Values
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
        name: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  System.Collections.Generic.Dictionary`2.Item(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Item(`0)
        name: Item
        nameWithType: Dictionary<TKey, TValue>.Item
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: System.Collections.Generic.Dictionary`2.Item(`0)
        name: Item
        nameWithType: Dictionary(Of TKey, TValue).Item
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.Item(`0)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.Item({TKey}):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.Item(`0)
        name: Item
        nameWithType: Dictionary<TKey, TValue>.Item
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: System.Collections.Generic.Dictionary`2.Item(`0)
        name: Item
        nameWithType: Dictionary(Of TKey, TValue).Item
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.Item(`0)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.Item(`0)
  ? System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
        name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
        nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
        name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  ? System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
        name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
        nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
        name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
        name: ICollection.IsSynchronized
        nameWithType: Dictionary<TKey, TValue>.ICollection.IsSynchronized
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
        name: System.Collections.ICollection.IsSynchronized
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#ICollection#IsSynchronized:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
        name: ICollection.IsSynchronized
        nameWithType: Dictionary<TKey, TValue>.ICollection.IsSynchronized
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
        name: System.Collections.ICollection.IsSynchronized
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#ICollection#IsSynchronized
  System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
        name: ICollection.SyncRoot
        nameWithType: Dictionary<TKey, TValue>.ICollection.SyncRoot
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
        name: System.Collections.ICollection.SyncRoot
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#ICollection#SyncRoot:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
        name: ICollection.SyncRoot
        nameWithType: Dictionary<TKey, TValue>.ICollection.SyncRoot
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
        name: System.Collections.ICollection.SyncRoot
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#ICollection#SyncRoot
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
        name: IDictionary.IsFixedSize
        nameWithType: Dictionary<TKey, TValue>.IDictionary.IsFixedSize
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
        name: System.Collections.IDictionary.IsFixedSize
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#IsFixedSize:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
        name: IDictionary.IsFixedSize
        nameWithType: Dictionary<TKey, TValue>.IDictionary.IsFixedSize
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
        name: System.Collections.IDictionary.IsFixedSize
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#IsFixedSize
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
        name: IDictionary.IsReadOnly
        nameWithType: Dictionary<TKey, TValue>.IDictionary.IsReadOnly
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
        name: System.Collections.IDictionary.IsReadOnly
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#IsReadOnly:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
        name: IDictionary.IsReadOnly
        nameWithType: Dictionary<TKey, TValue>.IDictionary.IsReadOnly
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
        name: System.Collections.IDictionary.IsReadOnly
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#IsReadOnly
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
        name: IDictionary.Keys
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Keys
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
        name: System.Collections.IDictionary.Keys
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
        name: IDictionary.Keys
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Keys
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
        name: System.Collections.IDictionary.Keys
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#Keys
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
        name: IDictionary.Values
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Values
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
        name: System.Collections.IDictionary.Values
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Values
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Values
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Values:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
        name: IDictionary.Values
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Values
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
        name: System.Collections.IDictionary.Values
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Values
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Values
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#Values
  System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
        name: IDictionary.Item
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Item
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
        name: System.Collections.IDictionary.Item
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  System.Collections.Generic.Dictionary{{TKey},{TValue}}.System#Collections#IDictionary#Item(System.Object):
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
        name: IDictionary.Item
        nameWithType: Dictionary<TKey, TValue>.IDictionary.Item
        qualifiedName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
        name: System.Collections.IDictionary.Item
        nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item
        qualifiedName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    parent: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.Dictionary{`0,`1}.System#Collections#IDictionary#Item(System.Object)
  System.Collections.Generic.IDictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IDictionary`2
  System.Collections.Generic.IDictionary{{TKey},{TValue}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IDictionary{`0,`1}
  System.Collections.Generic.ICollection`1:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.ICollection`1
  System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}
  System.Collections.IDictionary:
    name:
      CSharp:
      - id: System.Collections.IDictionary
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.IDictionary
        isExternal: true
      VB:
      - id: System.Collections.IDictionary
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.IDictionary
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IDictionary
  System.Collections.ICollection:
    name:
      CSharp:
      - id: System.Collections.ICollection
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.ICollection
        isExternal: true
      VB:
      - id: System.Collections.ICollection
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.ICollection
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.ICollection
  System.Collections.Generic.IReadOnlyDictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: System.Collections.Generic.IReadOnlyDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: System.Collections.Generic.IReadOnlyDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: System.Collections.Generic.IReadOnlyDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: System.Collections.Generic.IReadOnlyDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IReadOnlyDictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IReadOnlyDictionary{`0,`1}
  System.Collections.Generic.IReadOnlyCollection`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: System.Collections.Generic.IReadOnlyCollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: System.Collections.Generic.IReadOnlyCollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: System.Collections.Generic.IReadOnlyCollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IReadOnlyCollection`1
        name: IReadOnlyCollection
        nameWithType: IReadOnlyCollection
        qualifiedName: System.Collections.Generic.IReadOnlyCollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IReadOnlyCollection`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}}
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
  System.Collections.IEnumerable:
    name:
      CSharp:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      VB:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerable
  System.Runtime.Serialization:
    name:
      CSharp:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
        isExternal: true
      VB:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
    isDefinition: true
    commentId: N:System.Runtime.Serialization
  System.Runtime.Serialization.ISerializable:
    name:
      CSharp:
      - id: System.Runtime.Serialization.ISerializable
        name: ISerializable
        nameWithType: ISerializable
        qualifiedName: System.Runtime.Serialization.ISerializable
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.ISerializable
        name: ISerializable
        nameWithType: ISerializable
        qualifiedName: System.Runtime.Serialization.ISerializable
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.ISerializable
  System.Runtime.Serialization.IDeserializationCallback:
    name:
      CSharp:
      - id: System.Runtime.Serialization.IDeserializationCallback
        name: IDeserializationCallback
        nameWithType: IDeserializationCallback
        qualifiedName: System.Runtime.Serialization.IDeserializationCallback
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.IDeserializationCallback
        name: IDeserializationCallback
        nameWithType: IDeserializationCallback
        qualifiedName: System.Runtime.Serialization.IDeserializationCallback
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.IDeserializationCallback
  AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor*
        name: Dictionary
        nameWithType: SerializableDictionaryBase.Dictionary<TKey, TValue>.Dictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase.Dictionary<TKey, TValue>.Dictionary
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor*
        name: Dictionary
        nameWithType: SerializableDictionaryBase.Dictionary(Of TKey, TValue).Dictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase.Dictionary(Of TKey, TValue).Dictionary
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2.#ctor
  System.Runtime.Serialization.SerializationInfo:
    name:
      CSharp:
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.SerializationInfo
  System.Runtime.Serialization.StreamingContext:
    name:
      CSharp:
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.StreamingContext
  AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2
        name: SerializableDictionaryBase.Dictionary
        nameWithType: SerializableDictionaryBase.Dictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase.Dictionary
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2
        name: SerializableDictionaryBase.Dictionary
        nameWithType: SerializableDictionaryBase.Dictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase.Dictionary
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:AstarLibrary.Core.SerializableDictionaryBase.Dictionary`2
  UnityEngine.ISerializationCallbackReceiver:
    name:
      CSharp:
      - id: UnityEngine.ISerializationCallbackReceiver
        name: ISerializationCallbackReceiver
        nameWithType: ISerializationCallbackReceiver
        qualifiedName: UnityEngine.ISerializationCallbackReceiver
        isExternal: true
      VB:
      - id: UnityEngine.ISerializationCallbackReceiver
        name: ISerializationCallbackReceiver
        nameWithType: ISerializationCallbackReceiver
        qualifiedName: UnityEngine.ISerializationCallbackReceiver
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.ISerializationCallbackReceiver
  AstarLibrary.Core.SerializableDictionaryBase`3.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.#ctor*
        name: SerializableDictionaryBase
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SerializableDictionaryBase
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.#ctor*
        name: SerializableDictionaryBase
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SerializableDictionaryBase
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.#ctor
  '{TValueStorage}[]':
    name:
      CSharp:
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  TValue:
    name:
      CSharp:
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      VB:
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
    isDefinition: true
  '{TValue}':
    name:
      CSharp:
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      VB:
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
    isDefinition: false
    definition: TValue
    commentId: '!:TValue'
  AstarLibrary.Core.SerializableDictionaryBase`3.SetValue*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue*
        name: SetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue*
        name: SetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.SetValue
  AstarLibrary.Core.SerializableDictionaryBase`3.GetValue*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue*
        name: GetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue*
        name: GetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.GetValue
  AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom*
        name: CopyFrom
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom*
        name: CopyFrom
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom
  AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize*
        name: OnAfterDeserialize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize*
        name: OnAfterDeserialize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
  UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize:
    name:
      CSharp:
      - id: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
        name: OnAfterDeserialize
        nameWithType: ISerializationCallbackReceiver.OnAfterDeserialize
        qualifiedName: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
        name: OnAfterDeserialize
        nameWithType: ISerializationCallbackReceiver.OnAfterDeserialize
        qualifiedName: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.ISerializationCallbackReceiver
    commentId: M:UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
  AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize*
        name: OnBeforeSerialize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize*
        name: OnBeforeSerialize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
  UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize:
    name:
      CSharp:
      - id: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
        name: OnBeforeSerialize
        nameWithType: ISerializationCallbackReceiver.OnBeforeSerialize
        qualifiedName: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
        name: OnBeforeSerialize
        nameWithType: ISerializationCallbackReceiver.OnBeforeSerialize
        qualifiedName: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.ISerializationCallbackReceiver
    commentId: M:UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
  System.Collections.Generic.ICollection{{TKey}}:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.ICollection{`0}
  AstarLibrary.Core.SerializableDictionaryBase`3.Keys*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Keys*
        name: Keys
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Keys
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Keys*
        name: Keys
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Keys
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.Keys
  System.Collections.Generic.IDictionary`2.Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Keys
        name: Keys
        nameWithType: IDictionary<TKey, TValue>.Keys
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.IDictionary`2.Keys
        name: Keys
        nameWithType: IDictionary(Of TKey, TValue).Keys
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.IDictionary`2.Keys
  System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Keys
        name: Keys
        nameWithType: IDictionary<TKey, TValue>.Keys
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.IDictionary`2.Keys
        name: Keys
        nameWithType: IDictionary(Of TKey, TValue).Keys
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.Keys
    parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Keys
  System.Collections.Generic.ICollection{{TValue}}:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.ICollection{`1}
  AstarLibrary.Core.SerializableDictionaryBase`3.Values*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Values*
        name: Values
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Values
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Values*
        name: Values
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Values
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.Values
  System.Collections.Generic.IDictionary`2.Values:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Values
        name: Values
        nameWithType: IDictionary<TKey, TValue>.Values
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.IDictionary`2.Values
        name: Values
        nameWithType: IDictionary(Of TKey, TValue).Values
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.IDictionary`2.Values
  System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Values
        name: Values
        nameWithType: IDictionary<TKey, TValue>.Values
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.IDictionary`2.Values
        name: Values
        nameWithType: IDictionary(Of TKey, TValue).Values
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.Values
    parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Values
  AstarLibrary.Core.SerializableDictionaryBase`3.Count*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Count*
        name: Count
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Count
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Count
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Count*
        name: Count
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Count
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Count
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.Count
  System.Collections.Generic.ICollection`1.Count:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Count
        name: Count
        nameWithType: ICollection<T>.Count
        qualifiedName: System.Collections.Generic.ICollection<T>.Count
        isExternal: true
      VB:
      - id: System.Collections.Generic.ICollection`1.Count
        name: Count
        nameWithType: ICollection(Of T).Count
        qualifiedName: System.Collections.Generic.ICollection(Of T).Count
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.ICollection`1.Count
  System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Count
        name: Count
        nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Count
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count
        isExternal: true
      VB:
      - id: System.Collections.Generic.ICollection`1.Count
        name: Count
        nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).Count
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.Count
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count
  System.Collections.ICollection.Count:
    name:
      CSharp:
      - id: System.Collections.ICollection.Count
        name: Count
        nameWithType: ICollection.Count
        qualifiedName: System.Collections.ICollection.Count
        isExternal: true
      VB:
      - id: System.Collections.ICollection.Count
        name: Count
        nameWithType: ICollection.Count
        qualifiedName: System.Collections.ICollection.Count
        isExternal: true
    isDefinition: true
    parent: System.Collections.ICollection
    commentId: P:System.Collections.ICollection.Count
  AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly*
        name: IsReadOnly
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsReadOnly
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsReadOnly
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly*
        name: IsReadOnly
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsReadOnly
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsReadOnly
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
  System.Collections.Generic.ICollection`1.IsReadOnly:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.IsReadOnly
        name: IsReadOnly
        nameWithType: ICollection<T>.IsReadOnly
        qualifiedName: System.Collections.Generic.ICollection<T>.IsReadOnly
        isExternal: true
      VB:
      - id: System.Collections.Generic.ICollection`1.IsReadOnly
        name: IsReadOnly
        nameWithType: ICollection(Of T).IsReadOnly
        qualifiedName: System.Collections.Generic.ICollection(Of T).IsReadOnly
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.IsReadOnly
        name: IsReadOnly
        nameWithType: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
        isExternal: true
      VB:
      - id: System.Collections.Generic.ICollection`1.IsReadOnly
        name: IsReadOnly
        nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).IsReadOnly
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.IsReadOnly
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.IsReadOnly
  System.Collections.IDictionary.IsReadOnly:
    name:
      CSharp:
      - id: System.Collections.IDictionary.IsReadOnly
        name: IsReadOnly
        nameWithType: IDictionary.IsReadOnly
        qualifiedName: System.Collections.IDictionary.IsReadOnly
        isExternal: true
      VB:
      - id: System.Collections.IDictionary.IsReadOnly
        name: IsReadOnly
        nameWithType: IDictionary.IsReadOnly
        qualifiedName: System.Collections.IDictionary.IsReadOnly
        isExternal: true
    isDefinition: true
    parent: System.Collections.IDictionary
    commentId: P:System.Collections.IDictionary.IsReadOnly
  TKey:
    name:
      CSharp:
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      VB:
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
    isDefinition: true
  '{TKey}':
    name:
      CSharp:
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      VB:
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
    isDefinition: false
    definition: TKey
    commentId: '!:TKey'
  AstarLibrary.Core.SerializableDictionaryBase`3.Item*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item*
        name: Item
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item*
        name: Item
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.Item
  System.Collections.Generic.IDictionary`2.Item(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Item(`0)
        name: Item
        nameWithType: IDictionary<TKey, TValue>.Item
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: System.Collections.Generic.IDictionary`2.Item(`0)
        name: Item
        nameWithType: IDictionary(Of TKey, TValue).Item
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey}):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Item(`0)
        name: Item
        nameWithType: IDictionary<TKey, TValue>.Item
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: System.Collections.Generic.IDictionary`2.Item(`0)
        name: Item
        nameWithType: IDictionary(Of TKey, TValue).Item
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.Item(`0)
    parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Item(`0)
  AstarLibrary.Core.SerializableDictionaryBase`3.Add*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add*
        name: Add
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add*
        name: Add
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.Add
  System.Collections.Generic.IDictionary`2.Add(`0,`1):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Add(`0,`1)
        name: Add
        nameWithType: IDictionary<TKey, TValue>.Add
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.Add(`0,`1)
        name: Add
        nameWithType: IDictionary(Of TKey, TValue).Add
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue}):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Add(`0,`1)
        name: Add
        nameWithType: IDictionary<TKey, TValue>.Add
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.Add(`0,`1)
        name: Add
        nameWithType: IDictionary(Of TKey, TValue).Add
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
  AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey*
        name: ContainsKey
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.ContainsKey
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.ContainsKey
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey*
        name: ContainsKey
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).ContainsKey
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).ContainsKey
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey
  System.Collections.Generic.IDictionary`2.ContainsKey(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: IDictionary<TKey, TValue>.ContainsKey
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: IDictionary(Of TKey, TValue).ContainsKey
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey}):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: IDictionary<TKey, TValue>.ContainsKey
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: IDictionary(Of TKey, TValue).ContainsKey
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
  AstarLibrary.Core.SerializableDictionaryBase`3.Remove*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove*
        name: Remove
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove*
        name: Remove
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.Remove
  System.Collections.Generic.IDictionary`2.Remove(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Remove(`0)
        name: Remove
        nameWithType: IDictionary<TKey, TValue>.Remove
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.Remove(`0)
        name: Remove
        nameWithType: IDictionary(Of TKey, TValue).Remove
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey}):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Remove(`0)
        name: Remove
        nameWithType: IDictionary<TKey, TValue>.Remove
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.Remove(`0)
        name: Remove
        nameWithType: IDictionary(Of TKey, TValue).Remove
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.Remove(`0)
    parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
  AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue*
        name: TryGetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.TryGetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.TryGetValue
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue*
        name: TryGetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).TryGetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).TryGetValue
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue
  System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: IDictionary<TKey, TValue>.TryGetValue
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: IDictionary(Of TKey, TValue).TryGetValue
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: IDictionary<TKey, TValue>.TryGetValue
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: IDictionary(Of TKey, TValue).TryGetValue
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    commentId: M:System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
  System.Collections.Generic.KeyValuePair`2:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.KeyValuePair`2
  System.Collections.Generic.KeyValuePair{{TKey},{TValue}}:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.KeyValuePair`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.KeyValuePair{`0,`1}
  System.Collections.Generic.ICollection`1.Add(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Add(`0)
        name: Add
        nameWithType: ICollection<T>.Add
        qualifiedName: System.Collections.Generic.ICollection<T>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Add(`0)
        name: Add
        nameWithType: ICollection(Of T).Add
        qualifiedName: System.Collections.Generic.ICollection(Of T).Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  ? System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Add(`0)
        name: Add
        nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Add
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Add(`0)
        name: Add
        nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).Add
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.Add(`0)
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  AstarLibrary.Core.SerializableDictionaryBase`3.Clear*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Clear*
        name: Clear
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Clear
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Clear
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Clear*
        name: Clear
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Clear
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Clear
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.Clear
  System.Collections.Generic.ICollection`1.Clear:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Clear
        name: Clear
        nameWithType: ICollection<T>.Clear
        qualifiedName: System.Collections.Generic.ICollection<T>.Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Clear
        name: Clear
        nameWithType: ICollection(Of T).Clear
        qualifiedName: System.Collections.Generic.ICollection(Of T).Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.ICollection`1.Clear
  System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Clear
        name: Clear
        nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Clear
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Clear
        name: Clear
        nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).Clear
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.Clear
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear
  System.Collections.IDictionary.Clear:
    name:
      CSharp:
      - id: System.Collections.IDictionary.Clear
        name: Clear
        nameWithType: IDictionary.Clear
        qualifiedName: System.Collections.IDictionary.Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.IDictionary.Clear
        name: Clear
        nameWithType: IDictionary.Clear
        qualifiedName: System.Collections.IDictionary.Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.IDictionary
    commentId: M:System.Collections.IDictionary.Clear
  AstarLibrary.Core.SerializableDictionaryBase`3.Contains*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains*
        name: Contains
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains*
        name: Contains
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.Contains
  System.Collections.Generic.ICollection`1.Contains(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Contains(`0)
        name: Contains
        nameWithType: ICollection<T>.Contains
        qualifiedName: System.Collections.Generic.ICollection<T>.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Contains(`0)
        name: Contains
        nameWithType: ICollection(Of T).Contains
        qualifiedName: System.Collections.Generic.ICollection(Of T).Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  ? System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Contains(`0)
        name: Contains
        nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Contains
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Contains(`0)
        name: Contains
        nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).Contains
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.Contains(`0)
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo*
        name: CopyTo
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo*
        name: CopyTo
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo
  System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32):
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: ICollection<T>.CopyTo
        qualifiedName: System.Collections.Generic.ICollection<T>.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: ICollection(Of T).CopyTo
        qualifiedName: System.Collections.Generic.ICollection(Of T).CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  ? System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  : name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: ICollection<KeyValuePair<TKey, TValue>>.CopyTo
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  System.Collections.Generic.ICollection`1.Remove(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Remove(`0)
        name: Remove
        nameWithType: ICollection<T>.Remove
        qualifiedName: System.Collections.Generic.ICollection<T>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Remove(`0)
        name: Remove
        nameWithType: ICollection(Of T).Remove
        qualifiedName: System.Collections.Generic.ICollection(Of T).Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  ? System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Remove(`0)
        name: Remove
        nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Remove
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Remove(`0)
        name: Remove
        nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).Remove
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.Remove(`0)
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  System.Collections.Generic.IEnumerator`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerator`1
  System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}
  AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator*
        name: GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetEnumerator
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator*
        name: GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetEnumerator
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
  System.Collections.Generic.IEnumerable`1.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<T>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of T).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
    parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator*
        name: IEnumerable.GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IEnumerable.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IEnumerable.GetEnumerator
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator*
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IEnumerable.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IEnumerable.GetEnumerator
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
  System.Collections.IEnumerable.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerable.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable.GetEnumerator
        qualifiedName: System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.IEnumerable.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable.GetEnumerator
        qualifiedName: System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.IEnumerable
    commentId: M:System.Collections.IEnumerable.GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize*
        name: IsFixedSize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsFixedSize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsFixedSize
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize*
        name: IsFixedSize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsFixedSize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsFixedSize
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
  System.Collections.IDictionary.IsFixedSize:
    name:
      CSharp:
      - id: System.Collections.IDictionary.IsFixedSize
        name: IsFixedSize
        nameWithType: IDictionary.IsFixedSize
        qualifiedName: System.Collections.IDictionary.IsFixedSize
        isExternal: true
      VB:
      - id: System.Collections.IDictionary.IsFixedSize
        name: IsFixedSize
        nameWithType: IDictionary.IsFixedSize
        qualifiedName: System.Collections.IDictionary.IsFixedSize
        isExternal: true
    isDefinition: true
    parent: System.Collections.IDictionary
    commentId: P:System.Collections.IDictionary.IsFixedSize
  AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys*
        name: IDictionary.Keys
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.Keys
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys*
        name: System.Collections.IDictionary.Keys
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Keys
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
  System.Collections.IDictionary.Keys:
    name:
      CSharp:
      - id: System.Collections.IDictionary.Keys
        name: Keys
        nameWithType: IDictionary.Keys
        qualifiedName: System.Collections.IDictionary.Keys
        isExternal: true
      VB:
      - id: System.Collections.IDictionary.Keys
        name: Keys
        nameWithType: IDictionary.Keys
        qualifiedName: System.Collections.IDictionary.Keys
        isExternal: true
    isDefinition: true
    parent: System.Collections.IDictionary
    commentId: P:System.Collections.IDictionary.Keys
  AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values*
        name: IDictionary.Values
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.Values
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values*
        name: System.Collections.IDictionary.Values
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Values
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
  System.Collections.IDictionary.Values:
    name:
      CSharp:
      - id: System.Collections.IDictionary.Values
        name: Values
        nameWithType: IDictionary.Values
        qualifiedName: System.Collections.IDictionary.Values
        isExternal: true
      VB:
      - id: System.Collections.IDictionary.Values
        name: Values
        nameWithType: IDictionary.Values
        qualifiedName: System.Collections.IDictionary.Values
        isExternal: true
    isDefinition: true
    parent: System.Collections.IDictionary
    commentId: P:System.Collections.IDictionary.Values
  AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized*
        name: IsSynchronized
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsSynchronized
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsSynchronized
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized*
        name: IsSynchronized
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsSynchronized
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsSynchronized
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
  System.Collections.ICollection.IsSynchronized:
    name:
      CSharp:
      - id: System.Collections.ICollection.IsSynchronized
        name: IsSynchronized
        nameWithType: ICollection.IsSynchronized
        qualifiedName: System.Collections.ICollection.IsSynchronized
        isExternal: true
      VB:
      - id: System.Collections.ICollection.IsSynchronized
        name: IsSynchronized
        nameWithType: ICollection.IsSynchronized
        qualifiedName: System.Collections.ICollection.IsSynchronized
        isExternal: true
    isDefinition: true
    parent: System.Collections.ICollection
    commentId: P:System.Collections.ICollection.IsSynchronized
  AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot*
        name: SyncRoot
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SyncRoot
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SyncRoot
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot*
        name: SyncRoot
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SyncRoot
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SyncRoot
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
  System.Collections.ICollection.SyncRoot:
    name:
      CSharp:
      - id: System.Collections.ICollection.SyncRoot
        name: SyncRoot
        nameWithType: ICollection.SyncRoot
        qualifiedName: System.Collections.ICollection.SyncRoot
        isExternal: true
      VB:
      - id: System.Collections.ICollection.SyncRoot
        name: SyncRoot
        nameWithType: ICollection.SyncRoot
        qualifiedName: System.Collections.ICollection.SyncRoot
        isExternal: true
    isDefinition: true
    parent: System.Collections.ICollection
    commentId: P:System.Collections.ICollection.SyncRoot
  System.Collections.IDictionary.Item(System.Object):
    name:
      CSharp:
      - id: System.Collections.IDictionary.Item(System.Object)
        name: Item
        nameWithType: IDictionary.Item
        qualifiedName: System.Collections.IDictionary.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: System.Collections.IDictionary.Item(System.Object)
        name: Item
        nameWithType: IDictionary.Item
        qualifiedName: System.Collections.IDictionary.Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.IDictionary
    commentId: P:System.Collections.IDictionary.Item(System.Object)
  System.Collections.IDictionary.Add(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Collections.IDictionary.Add(System.Object,System.Object)
        name: Add
        nameWithType: IDictionary.Add
        qualifiedName: System.Collections.IDictionary.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.IDictionary.Add(System.Object,System.Object)
        name: Add
        nameWithType: IDictionary.Add
        qualifiedName: System.Collections.IDictionary.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.IDictionary
    commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)
  System.Collections.IDictionary.Contains(System.Object):
    name:
      CSharp:
      - id: System.Collections.IDictionary.Contains(System.Object)
        name: Contains
        nameWithType: IDictionary.Contains
        qualifiedName: System.Collections.IDictionary.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.IDictionary.Contains(System.Object)
        name: Contains
        nameWithType: IDictionary.Contains
        qualifiedName: System.Collections.IDictionary.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.IDictionary
    commentId: M:System.Collections.IDictionary.Contains(System.Object)
  System.Collections.IDictionaryEnumerator:
    name:
      CSharp:
      - id: System.Collections.IDictionaryEnumerator
        name: IDictionaryEnumerator
        nameWithType: IDictionaryEnumerator
        qualifiedName: System.Collections.IDictionaryEnumerator
        isExternal: true
      VB:
      - id: System.Collections.IDictionaryEnumerator
        name: IDictionaryEnumerator
        nameWithType: IDictionaryEnumerator
        qualifiedName: System.Collections.IDictionaryEnumerator
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IDictionaryEnumerator
  AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator*
        name: IDictionary.GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.GetEnumerator
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator*
        name: System.Collections.IDictionary.GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.GetEnumerator
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
  System.Collections.IDictionary.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.IDictionary.GetEnumerator
        name: GetEnumerator
        nameWithType: IDictionary.GetEnumerator
        qualifiedName: System.Collections.IDictionary.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.IDictionary.GetEnumerator
        name: GetEnumerator
        nameWithType: IDictionary.GetEnumerator
        qualifiedName: System.Collections.IDictionary.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.IDictionary
    commentId: M:System.Collections.IDictionary.GetEnumerator
  System.Collections.IDictionary.Remove(System.Object):
    name:
      CSharp:
      - id: System.Collections.IDictionary.Remove(System.Object)
        name: Remove
        nameWithType: IDictionary.Remove
        qualifiedName: System.Collections.IDictionary.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.IDictionary.Remove(System.Object)
        name: Remove
        nameWithType: IDictionary.Remove
        qualifiedName: System.Collections.IDictionary.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.IDictionary
    commentId: M:System.Collections.IDictionary.Remove(System.Object)
  System.Array:
    name:
      CSharp:
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      VB:
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Array
  System.Collections.ICollection.CopyTo(System.Array,System.Int32):
    name:
      CSharp:
      - id: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
        name: CopyTo
        nameWithType: ICollection.CopyTo
        qualifiedName: System.Collections.ICollection.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
        name: CopyTo
        nameWithType: ICollection.CopyTo
        qualifiedName: System.Collections.ICollection.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.ICollection
    commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization*
        name: OnDeserialization
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnDeserialization
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnDeserialization
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization*
        name: OnDeserialization
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnDeserialization
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnDeserialization
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization
  System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object):
    name:
      CSharp:
      - id: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: IDeserializationCallback.OnDeserialization
        qualifiedName: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: IDeserializationCallback.OnDeserialization
        qualifiedName: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Runtime.Serialization.IDeserializationCallback
    commentId: M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData*
        name: GetObjectData
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetObjectData
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetObjectData
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData*
        name: GetObjectData
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetObjectData
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetObjectData
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData
  ? System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  : name:
      CSharp:
      - id: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: ISerializable.GetObjectData
        qualifiedName: System.Runtime.Serialization.ISerializable.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: ISerializable.GetObjectData
        qualifiedName: System.Runtime.Serialization.ISerializable.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Runtime.Serialization.ISerializable
    commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  AstarLibrary.Core.SerializableDictionaryBase`3:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3
        name: SerializableDictionaryBase
        nameWithType: SerializableDictionaryBase
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3
        name: SerializableDictionaryBase
        nameWithType: SerializableDictionaryBase
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:AstarLibrary.Core.SerializableDictionaryBase`3
  AstarLibrary.Core.SerializableDictionary:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionary
        name: SerializableDictionary
        nameWithType: SerializableDictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionary
      VB:
      - id: AstarLibrary.Core.SerializableDictionary
        name: SerializableDictionary
        nameWithType: SerializableDictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionary
    isDefinition: true
    commentId: T:AstarLibrary.Core.SerializableDictionary
  AstarLibrary.Core.SerializableDictionary.Storage`1:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionary.Storage`1
        name: SerializableDictionary.Storage
        nameWithType: SerializableDictionary.Storage
        qualifiedName: AstarLibrary.Core.SerializableDictionary.Storage
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.SerializableDictionary.Storage`1
        name: SerializableDictionary.Storage
        nameWithType: SerializableDictionary.Storage
        qualifiedName: AstarLibrary.Core.SerializableDictionary.Storage
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:AstarLibrary.Core.SerializableDictionary.Storage`1
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3
        name: SerializableDictionaryBase
        nameWithType: SerializableDictionaryBase
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3
        name: SerializableDictionaryBase
        nameWithType: SerializableDictionaryBase
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}
  AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
        name: SetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
        name: SetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.SetValue({TValue}[],System.Int32,{TValue}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
        name: SetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.SetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
        name: SetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).SetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.SetValue(`1[],System.Int32,`1)
  AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
        name: GetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
        name: GetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.GetValue({TValue}[],System.Int32):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
        name: GetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.GetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
        name: GetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).GetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.GetValue(`1[],System.Int32)
  AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
        name: CopyFrom
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
        name: CopyFrom
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.CopyFrom(System.Collections.Generic.IDictionary{{TKey},{TValue}})
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
        name: CopyFrom
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.CopyFrom
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.CopyFrom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
        name: CopyFrom
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).CopyFrom
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).CopyFrom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
        name: OnAfterDeserialize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
        name: OnAfterDeserialize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.OnAfterDeserialize:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
        name: OnAfterDeserialize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.OnAfterDeserialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.OnAfterDeserialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
        name: OnAfterDeserialize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).OnAfterDeserialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).OnAfterDeserialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.OnAfterDeserialize
  AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
        name: OnBeforeSerialize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
        name: OnBeforeSerialize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.OnBeforeSerialize:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
        name: OnBeforeSerialize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.OnBeforeSerialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.OnBeforeSerialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
        name: OnBeforeSerialize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).OnBeforeSerialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).OnBeforeSerialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.OnBeforeSerialize
  AstarLibrary.Core.SerializableDictionaryBase`3.Keys:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Keys
        name: Keys
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Keys
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Keys
        name: Keys
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Keys
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.Keys
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Keys:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Keys
        name: Keys
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Keys
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Keys
        name: Keys
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Keys
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Keys
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Keys
  AstarLibrary.Core.SerializableDictionaryBase`3.Values:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Values
        name: Values
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Values
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Values
        name: Values
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Values
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.Values
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Values:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Values
        name: Values
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Values
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Values
        name: Values
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Values
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Values
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Values
  AstarLibrary.Core.SerializableDictionaryBase`3.Count:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Count
        name: Count
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Count
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Count
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Count
        name: Count
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Count
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Count
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.Count
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Count:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Count
        name: Count
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Count
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Count
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Count
        name: Count
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Count
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Count
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Count
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Count
  AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
        name: IsReadOnly
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsReadOnly
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsReadOnly
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
        name: IsReadOnly
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsReadOnly
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsReadOnly
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.IsReadOnly:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
        name: IsReadOnly
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.IsReadOnly
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.IsReadOnly
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
        name: IsReadOnly
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).IsReadOnly
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).IsReadOnly
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.IsReadOnly
  AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
        name: Item
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
        name: Item
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Item({TKey}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
        name: Item
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
        name: Item
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Item(`0)
  AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
        name: Add
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
        name: Add
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Add({TKey},{TValue}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
        name: Add
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
        name: Add
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Add(`0,`1)
  AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
        name: ContainsKey
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.ContainsKey
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.ContainsKey
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
        name: ContainsKey
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).ContainsKey
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).ContainsKey
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.ContainsKey({TKey}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
        name: ContainsKey
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.ContainsKey
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.ContainsKey
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
        name: ContainsKey
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).ContainsKey
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).ContainsKey
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.ContainsKey(`0)
  AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
        name: Remove
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
        name: Remove
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Remove({TKey}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
        name: Remove
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
        name: Remove
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Remove(`0)
  AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.TryGetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.TryGetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).TryGetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).TryGetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.TryGetValue({TKey},{TValue}@):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.TryGetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.TryGetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).TryGetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).TryGetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.TryGetValue(`0,`1@)
  AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Add
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Add
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Add
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Add
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  AstarLibrary.Core.SerializableDictionaryBase`3.Clear:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Clear
        name: Clear
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Clear
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Clear
        name: Clear
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Clear
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Clear
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Clear:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Clear
        name: Clear
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Clear
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Clear
        name: Clear
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Clear
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Clear
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Clear
  AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Contains
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Contains
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Contains
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Contains
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Remove
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Remove
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Remove
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Remove
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
        name: GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
        name: GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.GetEnumerator:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
        name: GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
        name: GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
        name: IEnumerable.GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IEnumerable.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IEnumerable.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IEnumerable.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IEnumerable.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.System#Collections#IEnumerable#GetEnumerator:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
        name: IEnumerable.GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.IEnumerable.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.System.Collections.IEnumerable.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).System.Collections.IEnumerable.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).System.Collections.IEnumerable.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.System#Collections#IEnumerable#GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
        name: IsFixedSize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsFixedSize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsFixedSize
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
        name: IsFixedSize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsFixedSize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsFixedSize
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.IsFixedSize:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
        name: IsFixedSize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.IsFixedSize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.IsFixedSize
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
        name: IsFixedSize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).IsFixedSize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).IsFixedSize
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.IsFixedSize
  AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
        name: IDictionary.Keys
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.Keys
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
        name: System.Collections.IDictionary.Keys
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Keys
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.System#Collections#IDictionary#Keys:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
        name: IDictionary.Keys
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.IDictionary.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.System.Collections.IDictionary.Keys
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
        name: System.Collections.IDictionary.Keys
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).System.Collections.IDictionary.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).System.Collections.IDictionary.Keys
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.System#Collections#IDictionary#Keys
  AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
        name: IDictionary.Values
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.Values
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
        name: System.Collections.IDictionary.Values
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Values
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.System#Collections#IDictionary#Values:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
        name: IDictionary.Values
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.IDictionary.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.System.Collections.IDictionary.Values
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
        name: System.Collections.IDictionary.Values
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).System.Collections.IDictionary.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).System.Collections.IDictionary.Values
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.System#Collections#IDictionary#Values
  AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
        name: IsSynchronized
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsSynchronized
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsSynchronized
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
        name: IsSynchronized
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsSynchronized
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsSynchronized
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.IsSynchronized:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
        name: IsSynchronized
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.IsSynchronized
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.IsSynchronized
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
        name: IsSynchronized
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).IsSynchronized
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).IsSynchronized
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.IsSynchronized
  AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
        name: SyncRoot
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SyncRoot
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SyncRoot
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
        name: SyncRoot
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SyncRoot
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SyncRoot
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.SyncRoot:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
        name: SyncRoot
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.SyncRoot
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.SyncRoot
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
        name: SyncRoot
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).SyncRoot
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).SyncRoot
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.SyncRoot
  AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
        name: Item
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
        name: Item
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Item(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
        name: Item
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
        name: Item
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Item(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
        name: Add
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
        name: Add
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Add(System.Object,System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
        name: Add
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
        name: Add
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Add(System.Object,System.Object)
  AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
        name: Contains
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
        name: Contains
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Contains(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
        name: Contains
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
        name: Contains
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Contains(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
        name: IDictionary.GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
        name: System.Collections.IDictionary.GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.System#Collections#IDictionary#GetEnumerator:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
        name: IDictionary.GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.IDictionary.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.System.Collections.IDictionary.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
        name: System.Collections.IDictionary.GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).System.Collections.IDictionary.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).System.Collections.IDictionary.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.System#Collections#IDictionary#GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
        name: Remove
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
        name: Remove
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.Remove(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
        name: Remove
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
        name: Remove
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.Remove(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.CopyTo(System.Array,System.Int32):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.CopyTo(System.Array,System.Int32)
  AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnDeserialization
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnDeserialization
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnDeserialization
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnDeserialization
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.OnDeserialization(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.OnDeserialization
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.OnDeserialization
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).OnDeserialization
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).OnDeserialization
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.OnDeserialization(System.Object)
  ? AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetObjectData
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetObjectData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetObjectData
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetObjectData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValue>.GetObjectData
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValue>.GetObjectData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValue).GetObjectData
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValue).GetObjectData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValue}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`1}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  AstarLibrary.Core.SerializableDictionary`2.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionary`2.#ctor*
        name: SerializableDictionary
        nameWithType: SerializableDictionary<TKey, TValue>.SerializableDictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionary<TKey, TValue>.SerializableDictionary
      VB:
      - id: AstarLibrary.Core.SerializableDictionary`2.#ctor*
        name: SerializableDictionary
        nameWithType: SerializableDictionary(Of TKey, TValue).SerializableDictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue).SerializableDictionary
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionary`2.#ctor
  '{TValue}[]':
    name:
      CSharp:
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AstarLibrary.Core.SerializableDictionary`2.GetValue*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionary`2.GetValue*
        name: GetValue
        nameWithType: SerializableDictionary<TKey, TValue>.GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionary<TKey, TValue>.GetValue
      VB:
      - id: AstarLibrary.Core.SerializableDictionary`2.GetValue*
        name: GetValue
        nameWithType: SerializableDictionary(Of TKey, TValue).GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue).GetValue
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionary`2.GetValue
  AstarLibrary.Core.SerializableDictionary`2.SetValue*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionary`2.SetValue*
        name: SetValue
        nameWithType: SerializableDictionary<TKey, TValue>.SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionary<TKey, TValue>.SetValue
      VB:
      - id: AstarLibrary.Core.SerializableDictionary`2.SetValue*
        name: SetValue
        nameWithType: SerializableDictionary(Of TKey, TValue).SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue).SetValue
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionary`2.SetValue
  AstarLibrary.Core.SerializableDictionary`2:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionary`2
        name: SerializableDictionary
        nameWithType: SerializableDictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionary
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.SerializableDictionary`2
        name: SerializableDictionary
        nameWithType: SerializableDictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionary
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:AstarLibrary.Core.SerializableDictionary`2
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3
        name: SerializableDictionaryBase
        nameWithType: SerializableDictionaryBase
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3
        name: SerializableDictionaryBase
        nameWithType: SerializableDictionaryBase
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3
    parent: AstarLibrary.Core
    commentId: T:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.SetValue({TValueStorage}[],System.Int32,{TValue}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
        name: SetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
        name: SetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.SetValue(`2[],System.Int32,`1)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.SetValue(`2[],System.Int32,`1)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.GetValue({TValueStorage}[],System.Int32):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
        name: GetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
        name: GetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.GetValue(`2[],System.Int32)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.GetValue(`2[],System.Int32)
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.CopyFrom(System.Collections.Generic.IDictionary{{TKey},{TValue}})
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
        name: CopyFrom
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
        name: CopyFrom
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyFrom
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.OnAfterDeserialize:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
        name: OnAfterDeserialize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
        name: OnAfterDeserialize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnAfterDeserialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.OnAfterDeserialize
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.OnAfterDeserialize
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.OnBeforeSerialize:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
        name: OnBeforeSerialize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
        name: OnBeforeSerialize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnBeforeSerialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.OnBeforeSerialize
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.OnBeforeSerialize
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Keys:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Keys
        name: Keys
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Keys
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Keys
        name: Keys
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Keys
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Keys
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Keys
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Values:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Values
        name: Values
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Values
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Values
        name: Values
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Values
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Values
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Values
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Count:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Count
        name: Count
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Count
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Count
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Count
        name: Count
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Count
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Count
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Count
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Count
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.IsReadOnly:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
        name: IsReadOnly
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsReadOnly
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsReadOnly
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
        name: IsReadOnly
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsReadOnly
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsReadOnly
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.IsReadOnly
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.IsReadOnly
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Item({TKey}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
        name: Item
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
        name: Item
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Item(`0)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Item(`0)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Add({TKey},{TValue}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
        name: Add
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
        name: Add
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Add(`0,`1)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Add(`0,`1)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.ContainsKey({TKey}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
        name: ContainsKey
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.ContainsKey
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.ContainsKey
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
        name: ContainsKey
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).ContainsKey
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).ContainsKey
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.ContainsKey(`0)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.ContainsKey(`0)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Remove({TKey}):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
        name: Remove
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
        name: Remove
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(`0)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Remove(`0)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.TryGetValue({TKey},{TValue}@):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.TryGetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.TryGetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).TryGetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).TryGetValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.TryGetValue(`0,`1@)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.TryGetValue(`0,`1@)
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Add
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Add
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Clear:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Clear
        name: Clear
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Clear
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Clear
        name: Clear
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Clear
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Clear
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Clear
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Contains
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Contains
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Remove
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
        name: Remove
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.GetEnumerator:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
        name: GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
        name: GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.GetEnumerator
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.System#Collections#IEnumerable#GetEnumerator:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
        name: IEnumerable.GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IEnumerable.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IEnumerable.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IEnumerable.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IEnumerable.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IEnumerable#GetEnumerator
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.System#Collections#IEnumerable#GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.IsFixedSize:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
        name: IsFixedSize
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsFixedSize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsFixedSize
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
        name: IsFixedSize
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsFixedSize
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsFixedSize
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.IsFixedSize
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.IsFixedSize
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.System#Collections#IDictionary#Keys:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
        name: IDictionary.Keys
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.Keys
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
        name: System.Collections.IDictionary.Keys
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Keys
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Keys
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Keys
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.System#Collections#IDictionary#Keys
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.System#Collections#IDictionary#Values:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
        name: IDictionary.Values
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.Values
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
        name: System.Collections.IDictionary.Values
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Values
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.Values
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#Values
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.System#Collections#IDictionary#Values
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.IsSynchronized:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
        name: IsSynchronized
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsSynchronized
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.IsSynchronized
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
        name: IsSynchronized
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsSynchronized
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).IsSynchronized
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.IsSynchronized
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.IsSynchronized
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.SyncRoot:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
        name: SyncRoot
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.SyncRoot
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.SyncRoot
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
        name: SyncRoot
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SyncRoot
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).SyncRoot
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.SyncRoot
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.SyncRoot
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Item(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
        name: Item
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
        name: Item
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Item(System.Object)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: P:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Item(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Add(System.Object,System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
        name: Add
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
        name: Add
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Add(System.Object,System.Object)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Add(System.Object,System.Object)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Contains(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
        name: Contains
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
        name: Contains
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Contains(System.Object)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Contains(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.System#Collections#IDictionary#GetEnumerator:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
        name: IDictionary.GetEnumerator
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.IDictionary.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.System.Collections.IDictionary.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
        name: System.Collections.IDictionary.GetEnumerator
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.GetEnumerator
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).System.Collections.IDictionary.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.System#Collections#IDictionary#GetEnumerator
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.System#Collections#IDictionary#GetEnumerator
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.Remove(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
        name: Remove
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
        name: Remove
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.Remove(System.Object)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.Remove(System.Object)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.CopyTo(System.Array,System.Int32):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
        name: CopyTo
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Array
        name: Array
        nameWithType: Array
        qualifiedName: System.Array
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.CopyTo(System.Array,System.Int32)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.CopyTo(System.Array,System.Int32)
  AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.OnDeserialization(System.Object):
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnDeserialization
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnDeserialization
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
        name: OnDeserialization
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnDeserialization
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).OnDeserialization
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.OnDeserialization(System.Object)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.OnDeserialization(System.Object)
  ? AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  : name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetObjectData
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetObjectData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetObjectData
        qualifiedName: AstarLibrary.Core.SerializableDictionaryBase(Of TKey, TValue, TValueStorage).GetObjectData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: AstarLibrary.Core.SerializableDictionaryBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    parent: AstarLibrary.Core.SerializableDictionaryBase{{TKey},{TValue},{TValueStorage}}
    commentId: M:AstarLibrary.Core.SerializableDictionaryBase{`0,`1,`2}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  AstarLibrary.Core.SerializableDictionary`3.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionary`3.#ctor*
        name: SerializableDictionary
        nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionary<TKey, TValue, TValueStorage>.SerializableDictionary
      VB:
      - id: AstarLibrary.Core.SerializableDictionary`3.#ctor*
        name: SerializableDictionary
        nameWithType: SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue, TValueStorage).SerializableDictionary
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionary`3.#ctor
  AstarLibrary.Core.SerializableDictionary`3.GetValue*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionary`3.GetValue*
        name: GetValue
        nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionary<TKey, TValue, TValueStorage>.GetValue
      VB:
      - id: AstarLibrary.Core.SerializableDictionary`3.GetValue*
        name: GetValue
        nameWithType: SerializableDictionary(Of TKey, TValue, TValueStorage).GetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue, TValueStorage).GetValue
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionary`3.GetValue
  AstarLibrary.Core.SerializableDictionary`3.SetValue*:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionary`3.SetValue*
        name: SetValue
        nameWithType: SerializableDictionary<TKey, TValue, TValueStorage>.SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionary<TKey, TValue, TValueStorage>.SetValue
      VB:
      - id: AstarLibrary.Core.SerializableDictionary`3.SetValue*
        name: SetValue
        nameWithType: SerializableDictionary(Of TKey, TValue, TValueStorage).SetValue
        qualifiedName: AstarLibrary.Core.SerializableDictionary(Of TKey, TValue, TValueStorage).SetValue
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.SerializableDictionary`3.SetValue
  AstarLibrary.Core.SerializableDictionary`3:
    name:
      CSharp:
      - id: AstarLibrary.Core.SerializableDictionary`3
        name: SerializableDictionary
        nameWithType: SerializableDictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionary
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: AstarLibrary.Core.SerializableDictionary`3
        name: SerializableDictionary
        nameWithType: SerializableDictionary
        qualifiedName: AstarLibrary.Core.SerializableDictionary
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValueStorage
        nameWithType: TValueStorage
        qualifiedName: TValueStorage
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:AstarLibrary.Core.SerializableDictionary`3
  AstarLibrary.Core.StringsExtensions.ReplaceValues*:
    name:
      CSharp:
      - id: AstarLibrary.Core.StringsExtensions.ReplaceValues*
        name: ReplaceValues
        nameWithType: StringsExtensions.ReplaceValues
        qualifiedName: AstarLibrary.Core.StringsExtensions.ReplaceValues
      VB:
      - id: AstarLibrary.Core.StringsExtensions.ReplaceValues*
        name: ReplaceValues
        nameWithType: StringsExtensions.ReplaceValues
        qualifiedName: AstarLibrary.Core.StringsExtensions.ReplaceValues
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.StringsExtensions.ReplaceValues
  System.Char[]:
    name:
      CSharp:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AstarLibrary.Core.StringsExtensions.StringSplitter*:
    name:
      CSharp:
      - id: AstarLibrary.Core.StringsExtensions.StringSplitter*
        name: StringSplitter
        nameWithType: StringsExtensions.StringSplitter
        qualifiedName: AstarLibrary.Core.StringsExtensions.StringSplitter
      VB:
      - id: AstarLibrary.Core.StringsExtensions.StringSplitter*
        name: StringSplitter
        nameWithType: StringsExtensions.StringSplitter
        qualifiedName: AstarLibrary.Core.StringsExtensions.StringSplitter
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.StringsExtensions.StringSplitter
  AstarLibrary.Core.StringsExtensions.StringCut*:
    name:
      CSharp:
      - id: AstarLibrary.Core.StringsExtensions.StringCut*
        name: StringCut
        nameWithType: StringsExtensions.StringCut
        qualifiedName: AstarLibrary.Core.StringsExtensions.StringCut
      VB:
      - id: AstarLibrary.Core.StringsExtensions.StringCut*
        name: StringCut
        nameWithType: StringsExtensions.StringCut
        qualifiedName: AstarLibrary.Core.StringsExtensions.StringCut
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.StringsExtensions.StringCut
  System.Char:
    name:
      CSharp:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      VB:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Char
  AstarLibrary.Core.StringsExtensions.AddCharacterToString*:
    name:
      CSharp:
      - id: AstarLibrary.Core.StringsExtensions.AddCharacterToString*
        name: AddCharacterToString
        nameWithType: StringsExtensions.AddCharacterToString
        qualifiedName: AstarLibrary.Core.StringsExtensions.AddCharacterToString
      VB:
      - id: AstarLibrary.Core.StringsExtensions.AddCharacterToString*
        name: AddCharacterToString
        nameWithType: StringsExtensions.AddCharacterToString
        qualifiedName: AstarLibrary.Core.StringsExtensions.AddCharacterToString
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.StringsExtensions.AddCharacterToString
  AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters*:
    name:
      CSharp:
      - id: AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters*
        name: RemoveSpecialCharacters
        nameWithType: StringsExtensions.RemoveSpecialCharacters
        qualifiedName: AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters
      VB:
      - id: AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters*
        name: RemoveSpecialCharacters
        nameWithType: StringsExtensions.RemoveSpecialCharacters
        qualifiedName: AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.StringsExtensions.RemoveSpecialCharacters
  AstarLibrary.Core.StringsExtensions:
    name:
      CSharp:
      - id: AstarLibrary.Core.StringsExtensions
        name: StringsExtensions
        nameWithType: StringsExtensions
        qualifiedName: AstarLibrary.Core.StringsExtensions
      VB:
      - id: AstarLibrary.Core.StringsExtensions
        name: StringsExtensions
        nameWithType: StringsExtensions
        qualifiedName: AstarLibrary.Core.StringsExtensions
    isDefinition: true
    commentId: T:AstarLibrary.Core.StringsExtensions
  AstarLibrary.Core.ICacheHandler.Save*:
    name:
      CSharp:
      - id: AstarLibrary.Core.ICacheHandler.Save*
        name: Save
        nameWithType: ICacheHandler.Save
        qualifiedName: AstarLibrary.Core.ICacheHandler.Save
      VB:
      - id: AstarLibrary.Core.ICacheHandler.Save*
        name: Save
        nameWithType: ICacheHandler.Save
        qualifiedName: AstarLibrary.Core.ICacheHandler.Save
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.ICacheHandler.Save
  AstarLibrary.Core.ICacheHandler.Load*:
    name:
      CSharp:
      - id: AstarLibrary.Core.ICacheHandler.Load*
        name: Load
        nameWithType: ICacheHandler.Load
        qualifiedName: AstarLibrary.Core.ICacheHandler.Load
      VB:
      - id: AstarLibrary.Core.ICacheHandler.Load*
        name: Load
        nameWithType: ICacheHandler.Load
        qualifiedName: AstarLibrary.Core.ICacheHandler.Load
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.ICacheHandler.Load
  AstarLibrary.Core.ICacheHandler.Exist*:
    name:
      CSharp:
      - id: AstarLibrary.Core.ICacheHandler.Exist*
        name: Exist
        nameWithType: ICacheHandler.Exist
        qualifiedName: AstarLibrary.Core.ICacheHandler.Exist
      VB:
      - id: AstarLibrary.Core.ICacheHandler.Exist*
        name: Exist
        nameWithType: ICacheHandler.Exist
        qualifiedName: AstarLibrary.Core.ICacheHandler.Exist
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.ICacheHandler.Exist
  AstarLibrary.Core.ICacheHandler:
    name:
      CSharp:
      - id: AstarLibrary.Core.ICacheHandler
        name: ICacheHandler
        nameWithType: ICacheHandler
        qualifiedName: AstarLibrary.Core.ICacheHandler
      VB:
      - id: AstarLibrary.Core.ICacheHandler
        name: ICacheHandler
        nameWithType: ICacheHandler
        qualifiedName: AstarLibrary.Core.ICacheHandler
    isDefinition: true
    commentId: T:AstarLibrary.Core.ICacheHandler
  AstarLibrary.Core.IOverseerHandler.Notify*:
    name:
      CSharp:
      - id: AstarLibrary.Core.IOverseerHandler.Notify*
        name: Notify
        nameWithType: IOverseerHandler.Notify
        qualifiedName: AstarLibrary.Core.IOverseerHandler.Notify
      VB:
      - id: AstarLibrary.Core.IOverseerHandler.Notify*
        name: Notify
        nameWithType: IOverseerHandler.Notify
        qualifiedName: AstarLibrary.Core.IOverseerHandler.Notify
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.IOverseerHandler.Notify
  AstarLibrary.Core.IRecordHandler.Log*:
    name:
      CSharp:
      - id: AstarLibrary.Core.IRecordHandler.Log*
        name: Log
        nameWithType: IRecordHandler.Log
        qualifiedName: AstarLibrary.Core.IRecordHandler.Log
      VB:
      - id: AstarLibrary.Core.IRecordHandler.Log*
        name: Log
        nameWithType: IRecordHandler.Log
        qualifiedName: AstarLibrary.Core.IRecordHandler.Log
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.IRecordHandler.Log
  AstarLibrary.Core.IWorkerHandler.Execute*:
    name:
      CSharp:
      - id: AstarLibrary.Core.IWorkerHandler.Execute*
        name: Execute
        nameWithType: IWorkerHandler.Execute
        qualifiedName: AstarLibrary.Core.IWorkerHandler.Execute
      VB:
      - id: AstarLibrary.Core.IWorkerHandler.Execute*
        name: Execute
        nameWithType: IWorkerHandler.Execute
        qualifiedName: AstarLibrary.Core.IWorkerHandler.Execute
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.IWorkerHandler.Execute
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AstarLibrary.Core.Cipher.GenerateKey*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cipher.GenerateKey*
        name: GenerateKey
        nameWithType: Cipher.GenerateKey
        qualifiedName: AstarLibrary.Core.Cipher.GenerateKey
      VB:
      - id: AstarLibrary.Core.Cipher.GenerateKey*
        name: GenerateKey
        nameWithType: Cipher.GenerateKey
        qualifiedName: AstarLibrary.Core.Cipher.GenerateKey
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Cipher.GenerateKey
  AstarLibrary.Core.Cipher.GeneratePassword*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cipher.GeneratePassword*
        name: GeneratePassword
        nameWithType: Cipher.GeneratePassword
        qualifiedName: AstarLibrary.Core.Cipher.GeneratePassword
      VB:
      - id: AstarLibrary.Core.Cipher.GeneratePassword*
        name: GeneratePassword
        nameWithType: Cipher.GeneratePassword
        qualifiedName: AstarLibrary.Core.Cipher.GeneratePassword
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Cipher.GeneratePassword
  System.ArgumentException:
    commentId: T:System.ArgumentException
  AstarLibrary.Core.Cipher.Encrypt*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cipher.Encrypt*
        name: Encrypt
        nameWithType: Cipher.Encrypt
        qualifiedName: AstarLibrary.Core.Cipher.Encrypt
      VB:
      - id: AstarLibrary.Core.Cipher.Encrypt*
        name: Encrypt
        nameWithType: Cipher.Encrypt
        qualifiedName: AstarLibrary.Core.Cipher.Encrypt
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Cipher.Encrypt
  AstarLibrary.Core.Cipher.EncryptWithPassword*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cipher.EncryptWithPassword*
        name: EncryptWithPassword
        nameWithType: Cipher.EncryptWithPassword
        qualifiedName: AstarLibrary.Core.Cipher.EncryptWithPassword
      VB:
      - id: AstarLibrary.Core.Cipher.EncryptWithPassword*
        name: EncryptWithPassword
        nameWithType: Cipher.EncryptWithPassword
        qualifiedName: AstarLibrary.Core.Cipher.EncryptWithPassword
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Cipher.EncryptWithPassword
  AstarLibrary.Core.Cipher.Decrypt*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cipher.Decrypt*
        name: Decrypt
        nameWithType: Cipher.Decrypt
        qualifiedName: AstarLibrary.Core.Cipher.Decrypt
      VB:
      - id: AstarLibrary.Core.Cipher.Decrypt*
        name: Decrypt
        nameWithType: Cipher.Decrypt
        qualifiedName: AstarLibrary.Core.Cipher.Decrypt
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Cipher.Decrypt
  AstarLibrary.Core.Cipher.DecryptWithPassword*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cipher.DecryptWithPassword*
        name: DecryptWithPassword
        nameWithType: Cipher.DecryptWithPassword
        qualifiedName: AstarLibrary.Core.Cipher.DecryptWithPassword
      VB:
      - id: AstarLibrary.Core.Cipher.DecryptWithPassword*
        name: DecryptWithPassword
        nameWithType: Cipher.DecryptWithPassword
        qualifiedName: AstarLibrary.Core.Cipher.DecryptWithPassword
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Cipher.DecryptWithPassword
  AstarLibrary.Core.Cipher:
    name:
      CSharp:
      - id: AstarLibrary.Core.Cipher
        name: Cipher
        nameWithType: Cipher
        qualifiedName: AstarLibrary.Core.Cipher
      VB:
      - id: AstarLibrary.Core.Cipher
        name: Cipher
        nameWithType: Cipher
        qualifiedName: AstarLibrary.Core.Cipher
    isDefinition: true
    commentId: T:AstarLibrary.Core.Cipher
  AstarLibrary.Core.Load:
    name:
      CSharp:
      - id: AstarLibrary.Core.Load
        name: Load
        nameWithType: Load
        qualifiedName: AstarLibrary.Core.Load
      VB:
      - id: AstarLibrary.Core.Load
        name: Load
        nameWithType: Load
        qualifiedName: AstarLibrary.Core.Load
    isDefinition: true
    commentId: T:AstarLibrary.Core.Load
  AstarLibrary.Core.Load.LoadHandler:
    name:
      CSharp:
      - id: AstarLibrary.Core.Load.LoadHandler
        name: Load.LoadHandler
        nameWithType: Load.LoadHandler
        qualifiedName: AstarLibrary.Core.Load.LoadHandler
      VB:
      - id: AstarLibrary.Core.Load.LoadHandler
        name: Load.LoadHandler
        nameWithType: Load.LoadHandler
        qualifiedName: AstarLibrary.Core.Load.LoadHandler
    isDefinition: true
    commentId: T:AstarLibrary.Core.Load.LoadHandler
  AstarLibrary.Core.Memo.message*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Memo.message*
        name: message
        nameWithType: Memo.message
        qualifiedName: AstarLibrary.Core.Memo.message
      VB:
      - id: AstarLibrary.Core.Memo.message*
        name: message
        nameWithType: Memo.message
        qualifiedName: AstarLibrary.Core.Memo.message
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Memo.message
  AstarLibrary.Core.Memo.addional*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Memo.addional*
        name: addional
        nameWithType: Memo.addional
        qualifiedName: AstarLibrary.Core.Memo.addional
      VB:
      - id: AstarLibrary.Core.Memo.addional*
        name: addional
        nameWithType: Memo.addional
        qualifiedName: AstarLibrary.Core.Memo.addional
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Memo.addional
  AstarLibrary.Core.Memo.code*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Memo.code*
        name: code
        nameWithType: Memo.code
        qualifiedName: AstarLibrary.Core.Memo.code
      VB:
      - id: AstarLibrary.Core.Memo.code*
        name: code
        nameWithType: Memo.code
        qualifiedName: AstarLibrary.Core.Memo.code
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Memo.code
  AstarLibrary.Core.Memo.group*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Memo.group*
        name: group
        nameWithType: Memo.group
        qualifiedName: AstarLibrary.Core.Memo.group
      VB:
      - id: AstarLibrary.Core.Memo.group*
        name: group
        nameWithType: Memo.group
        qualifiedName: AstarLibrary.Core.Memo.group
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Memo.group
  AstarLibrary.Core.Memo.name*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Memo.name*
        name: name
        nameWithType: Memo.name
        qualifiedName: AstarLibrary.Core.Memo.name
      VB:
      - id: AstarLibrary.Core.Memo.name*
        name: name
        nameWithType: Memo.name
        qualifiedName: AstarLibrary.Core.Memo.name
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Memo.name
  AstarLibrary.Core.Memo.Color*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Memo.Color*
        name: Color
        nameWithType: Memo.Color
        qualifiedName: AstarLibrary.Core.Memo.Color
      VB:
      - id: AstarLibrary.Core.Memo.Color*
        name: Color
        nameWithType: Memo.Color
        qualifiedName: AstarLibrary.Core.Memo.Color
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Memo.Color
  AstarLibrary.Core.Memo.Source*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Memo.Source*
        name: Source
        nameWithType: Memo.Source
        qualifiedName: AstarLibrary.Core.Memo.Source
      VB:
      - id: AstarLibrary.Core.Memo.Source*
        name: Source
        nameWithType: Memo.Source
        qualifiedName: AstarLibrary.Core.Memo.Source
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Memo.Source
  AstarLibrary.Core.Memo.Type*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Memo.Type*
        name: Type
        nameWithType: Memo.Type
        qualifiedName: AstarLibrary.Core.Memo.Type
      VB:
      - id: AstarLibrary.Core.Memo.Type*
        name: Type
        nameWithType: Memo.Type
        qualifiedName: AstarLibrary.Core.Memo.Type
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Memo.Type
  AstarLibrary.Core.Memo.#ctor*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Memo.#ctor*
        name: Memo
        nameWithType: Memo.Memo
        qualifiedName: AstarLibrary.Core.Memo.Memo
      VB:
      - id: AstarLibrary.Core.Memo.#ctor*
        name: Memo
        nameWithType: Memo.Memo
        qualifiedName: AstarLibrary.Core.Memo.Memo
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Memo.#ctor
  AstarLibrary.Core.Memo:
    name:
      CSharp:
      - id: AstarLibrary.Core.Memo
        name: Memo
        nameWithType: Memo
        qualifiedName: AstarLibrary.Core.Memo
      VB:
      - id: AstarLibrary.Core.Memo
        name: Memo
        nameWithType: Memo
        qualifiedName: AstarLibrary.Core.Memo
    isDefinition: true
    commentId: T:AstarLibrary.Core.Memo
  AstarLibrary.Core.PlayerPref.Set*:
    name:
      CSharp:
      - id: AstarLibrary.Core.PlayerPref.Set*
        name: Set
        nameWithType: PlayerPref.Set
        qualifiedName: AstarLibrary.Core.PlayerPref.Set
      VB:
      - id: AstarLibrary.Core.PlayerPref.Set*
        name: Set
        nameWithType: PlayerPref.Set
        qualifiedName: AstarLibrary.Core.PlayerPref.Set
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.PlayerPref.Set
  AstarLibrary.Core.PlayerPref.Get*:
    name:
      CSharp:
      - id: AstarLibrary.Core.PlayerPref.Get*
        name: Get
        nameWithType: PlayerPref.Get
        qualifiedName: AstarLibrary.Core.PlayerPref.Get
      VB:
      - id: AstarLibrary.Core.PlayerPref.Get*
        name: Get
        nameWithType: PlayerPref.Get
        qualifiedName: AstarLibrary.Core.PlayerPref.Get
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.PlayerPref.Get
  AstarLibrary.Core.PlayerPref:
    name:
      CSharp:
      - id: AstarLibrary.Core.PlayerPref
        name: PlayerPref
        nameWithType: PlayerPref
        qualifiedName: AstarLibrary.Core.PlayerPref
      VB:
      - id: AstarLibrary.Core.PlayerPref
        name: PlayerPref
        nameWithType: PlayerPref
        qualifiedName: AstarLibrary.Core.PlayerPref
    isDefinition: true
    commentId: T:AstarLibrary.Core.PlayerPref
  AstarLibrary.Core.Report.SetPath*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Report.SetPath*
        name: SetPath
        nameWithType: Report.SetPath
        qualifiedName: AstarLibrary.Core.Report.SetPath
      VB:
      - id: AstarLibrary.Core.Report.SetPath*
        name: SetPath
        nameWithType: Report.SetPath
        qualifiedName: AstarLibrary.Core.Report.SetPath
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Report.SetPath
  AstarLibrary.Core.Report.SetRegister*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Report.SetRegister*
        name: SetRegister
        nameWithType: Report.SetRegister
        qualifiedName: AstarLibrary.Core.Report.SetRegister
      VB:
      - id: AstarLibrary.Core.Report.SetRegister*
        name: SetRegister
        nameWithType: Report.SetRegister
        qualifiedName: AstarLibrary.Core.Report.SetRegister
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Report.SetRegister
  AstarLibrary.Core.Report:
    name:
      CSharp:
      - id: AstarLibrary.Core.Report
        name: Report
        nameWithType: Report
        qualifiedName: AstarLibrary.Core.Report
      VB:
      - id: AstarLibrary.Core.Report
        name: Report
        nameWithType: Report
        qualifiedName: AstarLibrary.Core.Report
    isDefinition: true
    commentId: T:AstarLibrary.Core.Report
  AstarLibrary.Core.Stamp.SystemInitializeSequency*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Stamp.SystemInitializeSequency*
        name: SystemInitializeSequency
        nameWithType: Stamp.SystemInitializeSequency
        qualifiedName: AstarLibrary.Core.Stamp.SystemInitializeSequency
      VB:
      - id: AstarLibrary.Core.Stamp.SystemInitializeSequency*
        name: SystemInitializeSequency
        nameWithType: Stamp.SystemInitializeSequency
        qualifiedName: AstarLibrary.Core.Stamp.SystemInitializeSequency
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Stamp.SystemInitializeSequency
  System.Diagnostics:
    name:
      CSharp:
      - name: System.Diagnostics
        nameWithType: System.Diagnostics
        qualifiedName: System.Diagnostics
        isExternal: true
      VB:
      - name: System.Diagnostics
        nameWithType: System.Diagnostics
        qualifiedName: System.Diagnostics
    isDefinition: true
    commentId: N:System.Diagnostics
  System.Diagnostics.Stopwatch:
    name:
      CSharp:
      - id: System.Diagnostics.Stopwatch
        name: Stopwatch
        nameWithType: Stopwatch
        qualifiedName: System.Diagnostics.Stopwatch
        isExternal: true
      VB:
      - id: System.Diagnostics.Stopwatch
        name: Stopwatch
        nameWithType: Stopwatch
        qualifiedName: System.Diagnostics.Stopwatch
        isExternal: true
    isDefinition: true
    parent: System.Diagnostics
    commentId: T:System.Diagnostics.Stopwatch
  AstarLibrary.Core.Stamp.StartTimer*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Stamp.StartTimer*
        name: StartTimer
        nameWithType: Stamp.StartTimer
        qualifiedName: AstarLibrary.Core.Stamp.StartTimer
      VB:
      - id: AstarLibrary.Core.Stamp.StartTimer*
        name: StartTimer
        nameWithType: Stamp.StartTimer
        qualifiedName: AstarLibrary.Core.Stamp.StartTimer
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Stamp.StartTimer
  AstarLibrary.Core.Stamp.MarktTime*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Stamp.MarktTime*
        name: MarktTime
        nameWithType: Stamp.MarktTime
        qualifiedName: AstarLibrary.Core.Stamp.MarktTime
      VB:
      - id: AstarLibrary.Core.Stamp.MarktTime*
        name: MarktTime
        nameWithType: Stamp.MarktTime
        qualifiedName: AstarLibrary.Core.Stamp.MarktTime
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Stamp.MarktTime
  AstarLibrary.Core.Stamp.FinishTimer*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Stamp.FinishTimer*
        name: FinishTimer
        nameWithType: Stamp.FinishTimer
        qualifiedName: AstarLibrary.Core.Stamp.FinishTimer
      VB:
      - id: AstarLibrary.Core.Stamp.FinishTimer*
        name: FinishTimer
        nameWithType: Stamp.FinishTimer
        qualifiedName: AstarLibrary.Core.Stamp.FinishTimer
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Stamp.FinishTimer
  AstarLibrary.Core.Stamp.MarkTimeNow*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Stamp.MarkTimeNow*
        name: MarkTimeNow
        nameWithType: Stamp.MarkTimeNow
        qualifiedName: AstarLibrary.Core.Stamp.MarkTimeNow
      VB:
      - id: AstarLibrary.Core.Stamp.MarkTimeNow*
        name: MarkTimeNow
        nameWithType: Stamp.MarkTimeNow
        qualifiedName: AstarLibrary.Core.Stamp.MarkTimeNow
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Stamp.MarkTimeNow
  AstarLibrary.Core.Stamp:
    name:
      CSharp:
      - id: AstarLibrary.Core.Stamp
        name: Stamp
        nameWithType: Stamp
        qualifiedName: AstarLibrary.Core.Stamp
      VB:
      - id: AstarLibrary.Core.Stamp
        name: Stamp
        nameWithType: Stamp
        qualifiedName: AstarLibrary.Core.Stamp
    isDefinition: true
    commentId: T:AstarLibrary.Core.Stamp
  AstarLibrary.Core.Utility:
    name:
      CSharp:
      - id: AstarLibrary.Core.Utility
        name: Utility
        nameWithType: Utility
        qualifiedName: AstarLibrary.Core.Utility
      VB:
      - id: AstarLibrary.Core.Utility
        name: Utility
        nameWithType: Utility
        qualifiedName: AstarLibrary.Core.Utility
    isDefinition: true
    commentId: T:AstarLibrary.Core.Utility
  AstarLibrary.Core.Utility.Cast.To*:
    name:
      CSharp:
      - id: AstarLibrary.Core.Utility.Cast.To*
        name: To
        nameWithType: Utility.Cast.To
        qualifiedName: AstarLibrary.Core.Utility.Cast.To
      VB:
      - id: AstarLibrary.Core.Utility.Cast.To*
        name: To
        nameWithType: Utility.Cast.To
        qualifiedName: AstarLibrary.Core.Utility.Cast.To
    isDefinition: true
    commentId: Overload:AstarLibrary.Core.Utility.Cast.To
  AstarLibrary.Core.Utility.Cast:
    name:
      CSharp:
      - id: AstarLibrary.Core.Utility.Cast
        name: Utility.Cast
        nameWithType: Utility.Cast
        qualifiedName: AstarLibrary.Core.Utility.Cast
      VB:
      - id: AstarLibrary.Core.Utility.Cast
        name: Utility.Cast
        nameWithType: Utility.Cast
        qualifiedName: AstarLibrary.Core.Utility.Cast
    isDefinition: true
    commentId: T:AstarLibrary.Core.Utility.Cast
